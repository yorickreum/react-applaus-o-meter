{"version":3,"sources":["View/fish.svg","Model/Volumemeter.js","Model/Competitor.js","Model/CalibrationCompetitor.js","Model/Competition.js","View/RecordingDot.js","View/CompetitorTableRow.js","View/CompetitionTable.js","View/CalibrationCompetitorTableRow.js","View/CalibrationTable.js","View/CompetitionJsonExportBtn.js","View/CompetitionJsonImportBtn.js","View/Admin.js","registerServiceWorker.js","View/Fishmeter.js","View/CompetitionCards.js","View/CalibrationCards.js","View/Frontend.js","View/Heading.js","View/Footer.js","index.js"],"names":["module","exports","__webpack_require__","p","Volumemeter","_Volumemeter","clipLevel","averaging","clipLag","Object","classCallCheck","this","AudioContext","window","webkitAudioContext","audioContext","processor","createScriptProcessor","onaudioprocess","volumeAudioProcess","clipping","lastClip","volume","connect","destination","checkClipping","performance","now","shutdown","disconnect","navigator","getUserMedia","webkitGetUserMedia","mozGetUserMedia","audio","mandatory","googEchoCancellation","googAutoGainControl","googNoiseSuppression","googHighpassFilter","optional","gotStream","didntGetStream","e","console","log","stream","createMediaStreamSource","event","x","buf","inputBuffer","getChannelData","sum","i","length","Math","abs","rms","sqrt","max","Competitor","name","arguments","undefined","reset","measure","bind","startedRecording","stoppedRecording","levels","measureDuration","Competition","duration","timeLeft","isActive","clearInterval","interval","update","floor","Date","vol","getVolume","push","_this","timestamp","parseInt","setInterval","tick","data","reduce","pv","cv","maxVol","CalibrationCompetitor","min","apply","foo","bar","_Competition","instance","competitors","_duration","calibrationCompetitors","stateCallbacks","competitor","forEach","cb","exists","comp","index","comps","splice","activeCompetitor","leadingCompetitor","rating","calibrating","localStorage","setItem","JSON","stringify","str","encodeURIComponent","selectorFiles","file","reader","FileReader","onload","parse","target","result","callbacks","revive","dumpToLocalStorage","readAsText","newComp","addCompetitor","addCalibrationCompetitor","value","RecordingDot","props","react_default","a","createElement","className","CompetitorTableRow","possibleConstructorReturn","getPrototypeOf","call","state","key","addClass","View_RecordingDot","type","onClick","removeCompetitor","Component","CompetitionTable","competition","map","Fragment","View_CompetitorTableRow","getLeader","getMin","getMax","getAvg","removeCalibrationCompetitor","CalibrationTable","CalibrationCompetitorTableRow","CompetitionJsonExportBtn","href","getJsonDateUri","download","CompetitionJsonImportBtn","id","style","display","onChange","reviveFromFileList","files","Admin","compParsed","getItem","addCompetitorInput","addCalibrationCompetitorInput","durationInput","maxVolInput","forceUpdate","assertThisInitialized","changeSettings","handleChange","keyCode","setState","record","document","title","prevProps","prevState","preventDefault","isCompetitorNameAlreadyExists","isCalibrationCompetitorNameAlreadyExists","parseFloat","toString","replace","defineProperty","onSubmit","htmlFor","placeholder","View_CompetitionTable","View_CalibrationTable","View_CompetitionJsonExportBtn","View_CompetitionJsonImportBtn","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","error","Fishmeter","rotation","react_svgmt","path","fish","height","selector","transform","CompetitorCard","competitorNameClass","cardBgClass","ratingClass","bounce","card","toFixed","react_motions_min","CompetitionCards","CalibrationCard","CalibrationCards","Frontend","onStorage","addEventListener","attachEvent","getActiveCompetitor","getActiveCalibrationCompetitor","isCalibrating","View_Fishmeter","View_CalibrationCards","View_CompetitionCards","Heading","Footer","Areas","react_router_dom","to","ReactDOM","render","View_Heading","react_router","exact","component","View_Footer","getElementById","URL","process","origin","concat","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"4EAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,+PCkGzBC,EAFK,eA9FhB,SAAAC,EAAaC,EAAWC,EAAWC,GAAWC,OAAAC,EAAA,EAAAD,CAAAE,KAAAN,GAC1C,IAAIO,EAAeC,OAAOD,cAAgBC,OAAOC,mBACjDD,OAAOE,aAAe,IAAIH,EAC1BC,OAAOG,UAAYH,OAAOE,aAAaE,sBAAsB,KAC7DJ,OAAOG,UAAUE,eAAiBP,KAAKQ,mBACvCN,OAAOG,UAAUI,UAAW,EAC5BP,OAAOG,UAAUK,SAAW,EAC5BR,OAAOG,UAAUM,OAAS,EAC1BT,OAAOG,UAAUV,UAAYA,GAAa,IAC1CO,OAAOG,UAAUT,UAAYA,GAAa,IAC1CM,OAAOG,UAAUR,QAAUA,GAAW,IAEtCK,OAAOG,UAAUO,QAAQV,OAAOE,aAAaS,aAE7CX,OAAOG,UAAUS,cACb,WACI,QAAKd,KAAKS,WAELT,KAAKU,SAAWV,KAAKH,QAAWK,OAAOa,YAAYC,QACpDhB,KAAKS,UAAW,GACbT,KAAKS,WAGpBP,OAAOG,UAAUY,SACb,WACIjB,KAAKkB,aACLlB,KAAKO,eAAiB,MAG9B,IAEIY,UAAUC,aACND,UAAUC,cACVD,UAAUE,oBACVF,UAAUG,gBAGdH,UAAUC,aACN,CACIG,MAAS,CACLC,UAAa,CACTC,qBAAwB,QACxBC,oBAAuB,QACvBC,qBAAwB,QACxBC,mBAAsB,SAE1BC,SAAY,KAEjB7B,KAAK8B,UAAW9B,KAAK+B,gBAC9B,MAAOC,GACLC,QAAQC,IAAI,iCAAmCF,iEAMnDC,QAAQC,IAAI,+DAGNC,GAEkBjC,OAAOE,aAAagC,wBAAwBD,GAClDvB,QAAQV,OAAOG,sDAGjBgC,GAMhB,IALA,IAEIC,EAFAC,EAAMF,EAAMG,YAAYC,eAAe,GACvCC,EAAM,EAIDC,EAAE,EAAGA,EAAEJ,EAAIK,OAAQD,IACxBL,EAAIC,EAAII,GACJE,KAAKC,IAAIR,IAAItC,KAAKL,YAClBK,KAAKS,UAAW,EAChBT,KAAKU,SAAWR,OAAOa,YAAYC,OAEvC0B,GAAOJ,EAAIA,EAIf,IAAIS,EAAOF,KAAKG,KAAKN,EAAMH,EAAIK,QAK/B5C,KAAKW,OAASkC,KAAKI,IAAIF,EAAK/C,KAAKW,OAAOX,KAAKJ,+CAI7C,OAAOM,OAAOG,UAAUM,iBCHjBuC,aAhFX,SAAAA,IAAuB,IAAXC,EAAWC,UAAAR,OAAA,QAAAS,IAAAD,UAAA,GAAAA,UAAA,GAAJ,GAAItD,OAAAC,EAAA,EAAAD,CAAAE,KAAAkD,GACnBlD,KAAKsD,QACLtD,KAAKmD,KAAOA,EAEZnD,KAAKuD,QAAUvD,KAAKuD,QAAQC,KAAKxD,MACjCA,KAAKsD,MAAQtD,KAAKsD,MAAME,KAAKxD,0DAI7BA,KAAKyD,iBAAmB,KACxBzD,KAAK0D,iBAAmB,KACxB1D,KAAK2D,OAAS,GACd3D,KAAK4D,gBAAkBC,EAAYC,SACnC9D,KAAK+D,SAAW/D,KAAK4D,gBACrB5D,KAAKgE,UAAW,EAChBC,cAAcjE,KAAKkE,UACnBL,EAAYM,wCAKZ,GADAnE,KAAK+D,SAAW/D,KAAK4D,iBAAmBf,KAAKuB,MAAMC,KAAKrD,OAAShB,KAAKyD,kBAClEzD,KAAK+D,SAAW,EAAG,CACnB,IAAIJ,EAAS3D,KAAK2D,OACdW,EAAM7E,EAAY8E,YACtBZ,EAAOa,KAAKF,QAGZtE,KAAK0D,iBAAmBb,KAAKuB,MAAMC,KAAKrD,OACxCiD,cAAcjE,KAAKkE,UACnBlE,KAAKgE,UAAW,EAChBhE,KAAK+D,SAAW,EAEpBF,EAAYM,2CAgBN,IAAAM,EAAAzE,KACN,KAAIA,KAAK2D,OAAOf,OAAS,GAAzB,CAGAX,QAAQC,IAAIlC,KAAKmD,KAAO,sBACxBnD,KAAK4D,gBAAkBC,EAAYC,SACnC7B,QAAQC,IAAI,cAAgBlC,KAAK4D,iBACjC,IAAIc,EAAY7B,KAAKuB,MAAMC,KAAKrD,OAChChB,KAAKgE,UAAW,EAChBhE,KAAKyD,iBAAmBkB,SAASD,EAAW,IAC5C1E,KAAKkE,SAAWU,YAAY,kBAAMH,EAAKI,QAAQ,oCAQ5CC,GAUH,OATiB,MAAb9E,KAAKmD,OACLnD,KAAKmD,KAAO2B,EAAK3B,KACjBnD,KAAKyD,iBAAmBqB,EAAKrB,iBAC7BzD,KAAK0D,iBAAmBoB,EAAKpB,iBAC7B1D,KAAK2D,OAASmB,EAAKnB,OACnB3D,KAAK4D,gBAAkBkB,EAAKlB,gBAC5B5D,KAAK+D,SAAWe,EAAKf,SACrB/D,KAAKgE,SAAWc,EAAKd,UAElBhE,oCAxCP,OAA2B,IAAvBA,KAAK2D,OAAOf,OACL,EAES5C,KAAK2D,OAAOoB,OAAO,SAACC,EAAIC,GAAL,OAAYD,EAAGC,GAAI,GACnCjF,KAAK2D,OAAOf,OAAUiB,EAAYqB,gBClClDC,mLAXP,OAAOtC,KAAKuC,IAAIC,MAAMxC,KAAK7C,KAAK2D,yCAGhC,OAAOd,KAAKI,IAAIoC,MAAMxC,KAAK7C,KAAK2D,yCAIhC,OADgB3D,KAAK2D,OAAOoB,OAAO,SAACO,EAAKC,GAAN,OAAcD,EAAIC,GAAK,GACvCvF,KAAK2D,OAAOf,cATHM,GCgNrBW,EAFK,eA5MhB,SAAA2B,IAOI,OAPW1F,OAAAC,EAAA,EAAAD,CAAAE,KAAAwF,GACNA,EAAaC,WAEdzF,KAAKsD,QAELkC,EAAaC,SAAWzF,MAErBwF,EAAaC,6DAIpBzF,KAAK0F,YAAc,GACnB1F,KAAK2F,UAAY,IACjB3F,KAAK4F,uBAAyB,GAC9B5F,KAAKkF,OAAS,EACdlF,KAAK6F,eAAiB,yCAOZC,GACV9F,KAAK0F,YAAYlB,KAAKsB,oDAODA,GACrB9F,KAAK4F,uBAAuBpB,KAAKsB,oCAYjC9F,KAAK6F,eAAeE,QAAQ,SAAUC,GAC9BA,GACAA,4DAUkB7C,GAC1B,IAAI8C,GAAS,EAMb,OALAjG,KAAK0F,YAAYK,QAAQ,SAAUG,GAC3B/C,IAAS+C,EAAK/C,OACd8C,GAAS,KAGVA,mEAQ8B9C,GACrC,IAAI8C,GAAS,EAMb,OALAjG,KAAK4F,uBAAuBG,QAAQ,SAAUG,GACtC/C,IAAS+C,EAAK/C,OACd8C,GAAS,KAGVA,2CAGMH,GACb9F,KAAK0F,YAAYK,QAAQ,SAAUG,EAAMC,EAAOC,GACxCN,IAAeI,GACfE,EAAMC,OAAOF,EAAO,KAG5BnG,KAAKmE,6DAGmB2B,GACxB9F,KAAK4F,uBAAuBG,QAAQ,SAAUG,EAAMC,EAAOC,GACnDN,IAAeI,GACfE,EAAMC,OAAOF,EAAO,KAG5BnG,KAAKmE,uDASL,IAAImC,EAAmB,KAMvB,OALAtG,KAAK0F,YAAYK,QAAQ,SAAUG,GAC3BA,EAAKlC,WACLsC,EAAmBJ,KAGpBI,2DAIP,IAAIA,EAAmB,KAMvB,OALAtG,KAAK4F,uBAAuBG,QAAQ,SAAUG,GACtCA,EAAKlC,WACLsC,EAAmBJ,KAGpBI,sCAIP,IAAIC,EAAoB,KASxB,OARIvG,KAAK0F,YAAY,KACjBa,EAAoBvG,KAAK0F,YAAY,GACrC1F,KAAK0F,YAAYK,QAAQ,SAAUG,EAAMC,EAAOC,GACxCF,EAAKM,QAAUD,EAAkBC,SACjCD,EAAoBL,MAI5BK,GAAkD,IAA7BA,EAAkBC,OAChCD,EAGA,6CAKX,IAAIE,GAAc,EAMlB,OALAzG,KAAK4F,uBAAuBG,QAAQ,SAAUG,GACtCA,EAAKlC,WACLyC,GAAc,KAGfA,+CAIPC,aAAaC,QAAQ,cAAeC,KAAKC,UAAU7G,gDAInD,IAAI8G,EAAMF,KAAKC,UAAU7G,KAAM,KAAM,MACrC,MAAO,uCAAyC+G,mBAAmBD,8CAOpDE,GACf,IAAIC,EAAOD,EAAc,GACrBE,EAAS,IAAIC,WACjBD,EAAOE,OAAS,SAAUpF,GACtB,IAAIkE,EAAOU,KAAKS,MAAMrF,EAAEsF,OAAOC,QAC/B,GAAY,MAARrB,EAAc,CACd,IAAIsB,EAAYxH,KAAK6F,eACrB7F,KAAKyH,OAAQvB,GACblG,KAAK0H,qBACL1H,KAAK6F,eAAiB2B,EACtBxH,KAAKmE,WAEXX,KAAKxD,MACPkH,EAAOS,WAAWV,kCAQfnC,GAAM,IAAAL,EAAAzE,KACTA,KAAKsD,QACLtD,KAAK2F,UAAYb,EAAKa,UACtB3F,KAAKkF,OAASJ,EAAKI,OACnBJ,EAAKY,YAAYK,QAAQ,SAACG,GACtB,IAAI0B,EAAU,IAAI1E,EAClB0E,EAAQH,OAAOvB,GACfzB,EAAKoD,cAAcD,KAEvB9C,EAAKc,uBAAuBG,QAAQ,SAACG,GACjC,IAAI0B,EAAU,IAAIzC,EAClByC,EAAQH,OAAOvB,GACfzB,EAAKqD,yBAAyBF,KAElC5H,KAAKmE,0CApKL,OAAOnE,KAAK2F,wBAGHoC,GACT/H,KAAK2F,UAAYhB,SAASoD,EAAO,cCjC1BC,MARf,SAAsBC,GAElB,OADiBA,EAAMjE,SAEZkE,EAAAC,EAAAC,cAAA,QAAMC,UAAU,eAAhB,UAEJH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,eAAhB,SCwBIC,cA1BX,SAAAA,EAAYL,GAAO,IAAAxD,EAAA,OAAA3E,OAAAC,EAAA,EAAAD,CAAAE,KAAAsI,IACf7D,EAAA3E,OAAAyI,EAAA,EAAAzI,CAAAE,KAAAF,OAAA0I,EAAA,EAAA1I,CAAAwI,GAAAG,KAAAzI,KAAMiI,KACDS,MAAQ,CACT5C,WAAYrB,EAAKwD,MAAMnC,YAHZrB,wEAOf,IAAIqB,EAAa9F,KAAK0I,MAAM5C,WAC5B,OACIoC,EAAAC,EAAAC,cAAA,MAAIO,IAAK7C,EAAW3C,KAAMkF,UAAWrI,KAAKiI,MAAMW,UAC5CV,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAACS,EAAD,CAAc7E,SAAU8B,EAAW9B,YACvCkE,EAAAC,EAAAC,cAAA,UAAKtC,EAAW3C,MAChB+E,EAAAC,EAAAC,cAAA,UAAKtC,EAAWU,QAChB0B,EAAAC,EAAAC,cAAA,UAAKtC,EAAW/B,SAAS,KACzBmE,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,SAAOU,KAAK,SAAST,UAAU,4BAA4BU,QAASjD,EAAWvC,QAASwE,MAAM,WAElGG,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,SAAOU,KAAK,SAAST,UAAU,+BAA+BU,QAASjD,EAAWxC,MAC3EyE,MAAM,WACjBG,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,SAAOU,KAAK,SAAST,UAAU,8BAA8BU,QAAW,kBAAMlF,EAAYmF,iBAAiBlD,IACpGiC,MAAM,oBApBAkB,aC8BlBC,mLA9BF,IAAAzE,EAAAzE,KACL,OACIkI,EAAAC,EAAAC,cAAA,kDAEIF,EAAAC,EAAAC,cAAA,SAAOC,UAAU,mCACbH,EAAAC,EAAAC,cAAA,aACAF,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,oBACAF,EAAAC,EAAAC,cAAA,kBACAF,EAAAC,EAAAC,cAAA,oBACAF,EAAAC,EAAAC,cAAA,uBACAF,EAAAC,EAAAC,cAAA,mBACAF,EAAAC,EAAAC,cAAA,mBACAF,EAAAC,EAAAC,cAAA,sBAGJF,EAAAC,EAAAC,cAAA,aACCpI,KAAKiI,MAAMkB,YAAYzD,YAAY0D,IAChC,SAAAtD,GAAU,OACNoC,EAAAC,EAAAC,cAACF,EAAAC,EAAMkB,SAAP,CAAgBV,IAAK7C,EAAW3C,MAC5B+E,EAAAC,EAAAC,cAACkB,EAAD,CAAoBxD,WAAYA,EAAY8C,SAAY9C,IAAerB,EAAKwD,MAAMkB,YAAYI,YAAe,cAAgB,kBArB9HN,aC+BhBX,cA7BX,SAAAA,EAAYL,GAAO,IAAAxD,EAAA,OAAA3E,OAAAC,EAAA,EAAAD,CAAAE,KAAAsI,IACf7D,EAAA3E,OAAAyI,EAAA,EAAAzI,CAAAE,KAAAF,OAAA0I,EAAA,EAAA1I,CAAAwI,GAAAG,KAAAzI,KAAMiI,KACDS,MAAQ,CACT5C,WAAYrB,EAAKwD,MAAMnC,YAHZrB,wEAOf,IAAIqB,EAAa9F,KAAK0I,MAAM5C,WAC5B,OACIoC,EAAAC,EAAAC,cAAA,MAAIO,IAAK7C,EAAW3C,KAAMkF,UAAWrI,KAAKiI,MAAMW,UAC5CV,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAACS,EAAD,CAAc7E,SAAU8B,EAAW9B,YACvCkE,EAAAC,EAAAC,cAAA,UAAKtC,EAAW3C,MAChB+E,EAAAC,EAAAC,cAAA,UAAKtC,EAAW/B,SAAS,KACzBmE,EAAAC,EAAAC,cAAA,UAAKtC,EAAW0D,UAChBtB,EAAAC,EAAAC,cAAA,UAAKtC,EAAW2D,UAChBvB,EAAAC,EAAAC,cAAA,UAAKtC,EAAW4D,UAChBxB,EAAAC,EAAAC,cAAA,UAAKtC,EAAWU,QAChB0B,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,SAAOU,KAAK,SAAST,UAAU,4BAA4BU,QAASjD,EAAWvC,QAASwE,MAAM,WAElGG,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,SAAOU,KAAK,SAAST,UAAU,+BAA+BU,QAASjD,EAAWxC,MAC3EyE,MAAM,WACjBG,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,SAAOU,KAAK,SAAST,UAAU,8BAA8BU,QAAW,kBAAMlF,EAAY8F,4BAA4B7D,IAC/GiC,MAAM,oBAvBAkB,aCiClBW,mLAjCF,IAAAnF,EAAAzE,KACL,OACIkI,EAAAC,EAAAC,cAAA,kDAEIF,EAAAC,EAAAC,cAAA,SAAOC,UAAU,mCACbH,EAAAC,EAAAC,cAAA,aACAF,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,oBACAF,EAAAC,EAAAC,cAAA,kBACAF,EAAAC,EAAAC,cAAA,sBACAF,EAAAC,EAAAC,cAAA,iCACAF,EAAAC,EAAAC,cAAA,iCACAF,EAAAC,EAAAC,cAAA,8BACAF,EAAAC,EAAAC,cAAA,oBACAF,EAAAC,EAAAC,cAAA,mBACAF,EAAAC,EAAAC,cAAA,mBACAF,EAAAC,EAAAC,cAAA,sBAGJF,EAAAC,EAAAC,cAAA,aACCpI,KAAKiI,MAAMkB,YAAYvD,uBAAuBwD,IAC3C,SAAAtD,GAAU,OACNoC,EAAAC,EAAAC,cAACF,EAAAC,EAAMkB,SAAP,CAAgBV,IAAK7C,EAAW3C,MAC5B+E,EAAAC,EAAAC,cAACyB,EAAD,CAA+B/D,WAAYA,EAAY8C,SAAY9C,IAAerB,EAAKwD,MAAMkB,YAAYI,YAAe,cAAgB,kBAxBzIN,aCIhBa,MALf,SAAmC7B,GAC/B,OACIC,EAAAC,EAAAC,cAAA,KAAG2B,KAAM9B,EAAMkB,YAAYa,iBAAkBC,SAAS,cAAc5B,UAAU,+BAA9E,WCMO6B,MARf,SAAkCjC,GAC9B,OACIC,EAAAC,EAAAC,cAAA,SAAOC,UAAU,kDAAjB,eACgBH,EAAAC,EAAAC,cAAA,SAAOU,KAAK,OAAOqB,GAAG,gBAAgBC,MAAO,CAACC,QAAS,QAASC,SAAW,SAACtI,GAAD,OAAOiG,EAAMkB,YAAYoB,mBAAmBvI,EAAEsF,OAAOkD,YC6LzIC,cAvLX,SAAAA,EAAYxC,GAAO,IAAAxD,EAAA3E,OAAAC,EAAA,EAAAD,CAAAE,KAAAyK,GACfhG,EAAA3E,OAAAyI,EAAA,EAAAzI,CAAAE,KAAAF,OAAA0I,EAAA,EAAA1I,CAAA2K,GAAAhC,KAAAzI,KAAMiI,IAEN,IAAIyC,EAAa9D,KAAKS,MAAMX,aAAaiE,QAAQ,gBAHlC,OAIG,MAAdD,GACA7G,EAAY4D,OAAOiD,GAGvBjG,EAAKiE,MAAQ,CACTkC,mBAAoB,GACpBC,8BAA+B,gBAC/BC,cAAejH,EAAYC,SAAW,IACtCiH,YAAalH,EAAYqB,OACzBiE,YAAatF,GAGjBY,EAAKiE,MAAMS,YAAYtD,eAAerB,KAClC,WACIvC,QAAQC,IAAI,iBACZuC,EAAKuG,gBAIbvG,EAAKoD,cAAgBpD,EAAKoD,cAAcrE,KAAnB1D,OAAAmL,EAAA,EAAAnL,CAAA2E,IACrBA,EAAKqD,yBAA2BrD,EAAKqD,yBAAyBtE,KAA9B1D,OAAAmL,EAAA,EAAAnL,CAAA2E,IAChCA,EAAKyG,eAAiBzG,EAAKyG,eAAe1H,KAApB1D,OAAAmL,EAAA,EAAAnL,CAAA2E,IACtBA,EAAK0G,aAAe1G,EAAK0G,aAAa3H,KAAlB1D,OAAAmL,EAAA,EAAAnL,CAAA2E,IA1BLA,gFA8BFpC,GACS,KAAlBA,EAAM+I,SACNpL,KAAKqL,SACD,CACIC,OAAQ,oDAOpBC,SAASC,MAAQ,qEAGFC,EAAWC,GAC1B7H,EAAY6D,2DAGFrF,GACVA,EAAMsJ,iBACN,IAAIxI,EAAOnD,KAAK0I,MAAMkC,mBACtB,IAAK5K,KAAK0I,MAAMS,YAAYyC,8BAA8BzI,IAAoB,KAATA,EAAc,CAC/E,IAAIgG,EAAcnJ,KAAK0I,MAAMS,YAC7BA,EAAYtB,cAAc,IAAI3E,EAAWC,IACzCnD,KAAKqL,SAAS,CACVlC,YAAaA,sDAKA9G,GACrBA,EAAMsJ,iBACN,IAAIxI,EAAOnD,KAAK0I,MAAMmC,8BACtB,IAAK7K,KAAK0I,MAAMS,YAAY0C,yCAAyC1I,IAAoB,KAATA,EAAc,CAC1F,IAAIgG,EAAcnJ,KAAK0I,MAAMS,YAC7BA,EAAYrB,yBAAyB,IAAI3C,EAAsBhC,IAC/DnD,KAAKqL,SAAS,CACVlC,YAAaA,4CAKV9G,GACXA,EAAMsJ,iBACN,IAAIxC,EAAcnJ,KAAK0I,MAAMS,YAC7BA,EAAYrF,SAAsC,IAA3B9D,KAAK0I,MAAMoC,cAClC3B,EAAYjE,OAAS4G,WAAY9L,KAAK0I,MAAMqC,YAAagB,WAAWC,QAAQ,IAAK,MACjFhM,KAAKqL,SAAS,CACVlC,YAAaA,yCAIRnH,GACThC,KAAKqL,SAALvL,OAAAmM,EAAA,EAAAnM,CAAA,GAAgBkC,EAAEsF,OAAOnE,KAAOnB,EAAEsF,OAAOS,yCAKzC,OACIG,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uBAEXH,EAAAC,EAAAC,cAAA,cACIF,EAAAC,EAAAC,cAAA,uDACAF,EAAAC,EAAAC,cAAA,mDAIJF,EAAAC,EAAAC,cAAA,OAAK+B,GAAG,YACJjC,EAAAC,EAAAC,cAAA,sBACAF,EAAAC,EAAAC,cAAA,QAAM8D,SAAUlM,KAAKkL,eAAgB7C,UAAU,cAC3CH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACXH,EAAAC,EAAAC,cAAA,SACI+D,QAAQ,iBADZ,sBAEWjE,EAAAC,EAAAC,cAAA,WAFX,cAE4BpI,KAAK0I,MAAMS,YAAYrF,SAAW,IAF9D,QAIJoE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACXH,EAAAC,EAAAC,cAAA,SAAOU,KAAK,OAAOT,UAAU,qBACtBlF,KAAK,gBAAgB4E,MAAO/H,KAAK0I,MAAMoC,cAAesB,YAAY,WAClE9B,SAAUtK,KAAKmL,gBAE1BjD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACXH,EAAAC,EAAAC,cAAA,SAAOU,KAAK,SAAST,UAAU,+BAA+BN,MAAM,WAG5EG,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACXH,EAAAC,EAAAC,cAAA,SACI+D,QAAQ,eADZ,kCAESjE,EAAAC,EAAAC,cAAA,WAFT,eAE2BpI,KAAK0I,MAAMS,YAAYjE,OAFlD,MAIJgD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACXH,EAAAC,EAAAC,cAAA,SAAOU,KAAK,OAAOT,UAAU,qBACtBlF,KAAK,cAAc4E,MAAO/H,KAAK0I,MAAMqC,YACrCT,SAAUtK,KAAKmL,gBAE1BjD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACXH,EAAAC,EAAAC,cAAA,SAAOU,KAAK,SAAST,UAAU,+BAA+BN,MAAM,aAOpFG,EAAAC,EAAAC,cAAA,OAAK+B,GAAG,cAAc9B,UAAU,kDAC5BH,EAAAC,EAAAC,cAAA,yBACAF,EAAAC,EAAAC,cAAA,QAAM8D,SAAUlM,KAAK6H,cAAeQ,UAAU,kBAC1CH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACXH,EAAAC,EAAAC,cAAA,SAAOU,KAAK,OAAOT,UAAU,qBACtBlF,KAAK,qBAAqB4E,MAAO/H,KAAK0I,MAAMkC,mBAC5CwB,YAAY,kBACZ9B,SAAUtK,KAAKmL,gBAE1BjD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACXH,EAAAC,EAAAC,cAAA,SAAOU,KAAK,SAAST,UAAU,+BAA+BN,MAAM,WAI5EG,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACiE,EAAD,CAAkBlD,YAAanJ,KAAK0I,MAAMS,gBAKlDjB,EAAAC,EAAAC,cAAA,OAAK+B,GAAG,cAAc9B,UAAU,QAC5BH,EAAAC,EAAAC,cAAA,yBACAF,EAAAC,EAAAC,cAAA,QAAM8D,SAAUlM,KAAK8H,yBAA0BO,UAAU,kBACrDH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACXH,EAAAC,EAAAC,cAAA,SAAOU,KAAK,OAAOT,UAAU,qBACtBlF,KAAK,gCACL4E,MAAO/H,KAAK0I,MAAMmC,8BAClBuB,YAAY,kBACZ9B,SAAUtK,KAAKmL,gBAE1BjD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACXH,EAAAC,EAAAC,cAAA,SAAOU,KAAK,SAAST,UAAU,+BAA+BN,MAAM,WAG5EG,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACkE,EAAD,CAAkBnD,YAAanJ,KAAK0I,MAAMS,gBAIlDjB,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACmE,EAAD,CAA0BpD,YAAanJ,KAAK0I,MAAMS,cAClDjB,EAAAC,EAAAC,cAACoE,EAAD,CAA0BrD,YAAanJ,KAAK0I,MAAMS,uBAhLlDF,aCAdwD,EAAcC,QACW,cAA7BxM,OAAOyM,SAASC,UAEe,UAA7B1M,OAAOyM,SAASC,UAEhB1M,OAAOyM,SAASC,SAASC,MACvB,2DAsCN,SAASC,EAAgBC,GACvB5L,UAAU6L,cACPC,SAASF,GACTG,KAAK,SAAAC,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACtCD,EAAiBE,cAAgB,WACA,cAA3BF,EAAiB3E,QACfvH,UAAU6L,cAAcQ,WAK1BvL,QAAQC,IAAI,6CAKZD,QAAQC,IAAI,2CAMrBuL,MAAM,SAAAC,GACLzL,QAAQyL,MAAM,4CAA6CA,wCCpDlDC,cApBX,SAAAA,EAAY1F,GAAO,IAAAxD,EAAA,OAAA3E,OAAAC,EAAA,EAAAD,CAAAE,KAAA2N,IACflJ,EAAA3E,OAAAyI,EAAA,EAAAzI,CAAAE,KAAAF,OAAA0I,EAAA,EAAA1I,CAAA6N,GAAAlF,KAAAzI,KAAMiI,KACDS,MAAQ,GAFEjE,wEAMf,IAEImJ,EAA2C,IAAhC9B,WAAW9L,KAAKiI,MAAMzB,QACrC,OACI0B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iCAAiC+B,MAJzB,IAMnBlC,EAAAC,EAAAC,cAACyF,EAAA,UAAD,CAAWC,KAAMC,IAAMC,OAAO,SAC1B9F,EAAAC,EAAAC,cAACyF,EAAA,SAAD,CAAUI,SAAS,YAAYC,UAAW,UAAYN,EAAY,0BAd9D3E,qBCDxB,SAASkF,EAAelG,GACpB,IAAMnC,EAAamC,EAAMnC,WAErBsI,EAAsB,eACtBC,EAAc,UACdC,EAAc,iBACdrG,EAAMkB,YAAYI,cAAgBzD,IAClCuI,EAAc,aACdD,EAAsB,iBACtBE,EAAc,kBAElB,IAAIC,GAAS,EACTzI,EAAWpC,iBAAoBb,KAAKuB,MAAMC,KAAKrD,OAAS,MACxDuN,GAAS,GAEb,IAAIC,EACAtG,EAAAC,EAAAC,cAAA,OAAKC,UAAW,+BAAiCgG,GAC7CnG,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACS,EAAD,CAAc7E,SAAU8B,EAAW9B,YAEvCkE,EAAAC,EAAAC,cAAA,MAAIC,UAAW,cAAgB+F,GAAsBtI,EAAW3C,MAChE+E,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,SAAGF,EAAAC,EAAAC,cAAA,QAAMC,UAAU,gBAAhB,sBAAwDH,EAAAC,EAAAC,cAAA,WAAM0D,WAAWhG,EAAW/B,SAAW,KAAM0K,QAAQ,GAAhH,aACAvG,EAAAC,EAAAC,cAAA,KAAGC,UAAW,8BAAgCiG,GAA9C,YAAoEpG,EAAAC,EAAAC,cAAA,QAAMC,UAAU,cAAcyD,WAA+B,GAApBhG,EAAWU,QAAaiI,QAAQ,QAI7J,OAAIF,EAEIrG,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QAAQM,IAAK7C,EAAW3C,MACnC+E,EAAAC,EAAAC,cAACsG,EAAA,OAAD,KACKF,IAOTtG,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QAAQM,IAAK7C,EAAW3C,MAClCqL,OAyBFG,cAlBX,SAAAA,EAAY1G,GAAQ,OAAAnI,OAAAC,EAAA,EAAAD,CAAAE,KAAA2O,GAAA7O,OAAAyI,EAAA,EAAAzI,CAAAE,KAAAF,OAAA0I,EAAA,EAAA1I,CAAA6O,GAAAlG,KAAAzI,KACViI,0EAGD,IAAAxD,EAAAzE,KACL,OACIkI,EAAAC,EAAAC,cAAA,OAAK+B,GAAG,2BAA2B9B,UAAU,wBACzCH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,8BACVrI,KAAKiI,MAAMkB,YAAYzD,YAAY0D,IAChC,SAAAtD,GAAU,OAAIoC,EAAAC,EAAAC,cAAC+F,EAAD,CAAgBxF,IAAK7C,EAAW3C,KAAMgG,YAAa1E,EAAKwD,MAAMkB,YAC9CrD,WAAYA,eAXnCmD,aC/C/B,SAAS2F,EAAgB3G,GACrB,IAAMnC,EAAamC,EAAMnC,WACrBuI,EAAc,UAIlB,OAHIpG,EAAMkB,YAAYI,cAAgBzD,IAClCuI,EAAc,cAGdnG,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QAAQM,IAAK7C,EAAW3C,MACnC+E,EAAAC,EAAAC,cAAA,OAAKC,UAAW,+BAAiCgG,GAC7CnG,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACS,EAAD,CAAc7E,SAAU8B,EAAW9B,YAEvCkE,EAAAC,EAAAC,cAAA,MAAIC,UAAU,2BAA2BvC,EAAW3C,MACpD+E,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,MAAb,qBAAoCH,EAAAC,EAAAC,cAAA,WAAM0D,WAAWhG,EAAW/B,SAAW,KAAM0K,QAAQ,GAAzF,aACAvG,EAAAC,EAAAC,cAAA,KAAGC,UAAU,MAAb,YAA4ByD,WAAWhG,EAAW2D,UAAUgF,QAAQ,YAuB7EI,mLAdF,IAAApK,EAAAzE,KACL,OACIkI,EAAAC,EAAAC,cAAA,OAAK+B,GAAG,2BAA2B9B,UAAU,mBACzCH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,8BACXH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,8CAAd,eACCrI,KAAKiI,MAAMkB,YAAYvD,uBAAuBwD,IAC3C,SAAAtD,GAAU,OAAIoC,EAAAC,EAAAC,cAACwG,EAAD,CAAiBzF,YAAa1E,EAAKwD,MAAMkB,YAAarD,WAAYA,eAPzEmD,aC0DhB6F,qBA9EX,SAAAA,EAAY7G,GAAO,IAAAxD,EAAA3E,OAAAC,EAAA,EAAAD,CAAAE,KAAA8O,GACfrK,EAAA3E,OAAAyI,EAAA,EAAAzI,CAAAE,KAAAF,OAAA0I,EAAA,EAAA1I,CAAAgP,GAAArG,KAAAzI,KAAMiI,IAEN,IAAIyC,EAAa9D,KAAKS,MAAMX,aAAaiE,QAAQ,gBAHlC,OAIG,MAAdD,GACA7G,EAAY4D,OAAOiD,GAGvBjG,EAAKiE,MAAQ,CACTS,YAAatF,EACb2C,OAAQ,GAKZ/B,EAAKsK,UAAYtK,EAAKsK,UAAUvL,KAAf1D,OAAAmL,EAAA,EAAAnL,CAAA2E,IAfFA,oFAmBXvE,OAAO8O,iBACP9O,OAAO8O,iBAAiB,UAAWhP,KAAK+O,WAAW,GAEnD7O,OAAO+O,YAAY,YAAajP,KAAK+O,6CAInCjK,GACN,IAAI4F,EAAa9D,KAAKS,MAAMX,aAAaiE,QAAQ,gBACjD,GAAkB,MAAdD,EAAoB,CACpB7G,EAAY4D,OAAOiD,GACnB,IAAIpE,EAAmBzC,EAAYqL,sBAE/B5I,GACArC,cAAcjE,KAAKkE,UACnBlE,KAAKqL,SAAS,CACV7E,OAAQF,EAAiBE,UAGxB3C,EAAYsL,kCACjBnP,KAAKqL,SAAS,CACV7E,OAAQ3C,EAAYsL,iCAAiC3I,SAG7DxG,KAAKgL,2DAKTO,SAASC,MAAQ,0DAIjB,OAAI3H,EAAYuL,iBAAsD,IAAnCvL,EAAY6B,YAAY9C,OAEnDsF,EAAAC,EAAAC,cAAA,OAAK+B,GAAG,WAAW9B,UAAU,kCACzBH,EAAAC,EAAAC,cAAA,OAAK+B,GAAG,UAAU9B,UAAU,iCACxBH,EAAAC,EAAAC,cAACiH,EAAD,CAAW7I,OAAQxG,KAAK0I,MAAMlC,UAElC0B,EAAAC,EAAAC,cAAA,OAAK+B,GAAG,eACJjC,EAAAC,EAAAC,cAACkH,EAAD,CAAkBnG,YAAanJ,KAAK0I,MAAMS,gBAMlDjB,EAAAC,EAAAC,cAAA,OAAK+B,GAAG,WAAW9B,UAAU,kCACzBH,EAAAC,EAAAC,cAAA,OAAK+B,GAAG,UAAU9B,UAAU,iCACxBH,EAAAC,EAAAC,cAACiH,EAAD,CAAW7I,OAAQxG,KAAK0I,MAAMlC,UAElC0B,EAAAC,EAAAC,cAAA,OAAK+B,GAAG,eACJjC,EAAAC,EAAAC,cAACmH,EAAD,CAAkBpG,YAAanJ,KAAK0I,MAAMS,uBAvE3CF,cCQRuG,MAZf,SAAiBvH,GACb,OACIC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wBACXH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,4BAAd,mBACAH,EAAAC,EAAAC,cAAA,MAAI+B,GAAG,cAAc9B,UAAU,+BAA/B,oBCIGoH,MARf,SAAgBxH,GACZ,OACIC,EAAAC,EAAAC,cAAA,UAAQC,UAAU,wCAAlB,0DCKFqH,8LAGEnE,SAASC,MAAQ,mDAIjB,OACItD,EAAAC,EAAAC,cAACF,EAAAC,EAAMkB,SAAP,KACInB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,8BACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gDACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACXH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,gCAAd,kBACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,aACVH,EAAAC,EAAAC,cAAA,+CACAF,EAAAC,EAAAC,cAAA,mCAEJF,EAAAC,EAAAC,cAACuH,EAAA,EAAD,CAAMC,GAAG,SAASvH,UAAU,mBAA5B,2BAKhBH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gDACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACXH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,gCAAd,cACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,2EAGAF,EAAAC,EAAAC,cAACuH,EAAA,EAAD,CAAMC,GAAG,QAAQvH,UAAU,mBAA3B,qCAjCpBY,aA6CpB4G,IAASC,OACL5H,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAC2H,EAAD,MACA7H,EAAAC,EAAAC,cAACuH,EAAA,EAAD,KACIzH,EAAAC,EAAAC,cAAC4H,EAAA,EAAD,KACI9H,EAAAC,EAAAC,cAAC4H,EAAA,EAAD,CAAOC,OAAK,EAACnC,KAAK,IAAIoC,UAAWR,IACjCxH,EAAAC,EAAAC,cAAC4H,EAAA,EAAD,CAAOlC,KAAK,SAASoC,UAAWzF,IAChCvC,EAAAC,EAAAC,cAAC4H,EAAA,EAAD,CAAOlC,KAAK,QAAQoC,UAAWpB,MAGvC5G,EAAAC,EAAAC,cAAC+H,EAAD,OAEJ5E,SAAS6E,eAAe,SP/Cb,WACb,GAA6C,kBAAmBjP,UAAW,CAGzE,GADkB,IAAIkP,IAAIC,yBAAwBpQ,OAAOyM,UAC3C4D,SAAWrQ,OAAOyM,SAAS4D,OAIvC,OAGFrQ,OAAO8O,iBAAiB,OAAQ,WAC9B,IAAMjC,EAAK,GAAAyD,OAAMF,yBAAN,sBAEP7D,GAiDV,SAAiCM,GAE/B0D,MAAM1D,GACHG,KAAK,SAAAwD,GAGkB,MAApBA,EAASC,SACuD,IAAhED,EAASE,QAAQC,IAAI,gBAAgBC,QAAQ,cAG7C3P,UAAU6L,cAAc+D,MAAM7D,KAAK,SAAAC,GACjCA,EAAa6D,aAAa9D,KAAK,WAC7BhN,OAAOyM,SAASsE,aAKpBnE,EAAgBC,KAGnBU,MAAM,WACLxL,QAAQC,IACN,mEArEAgP,CAAwBnE,GAIxB5L,UAAU6L,cAAc+D,MAAM7D,KAAK,WACjCjL,QAAQC,IACN,+GAMJ4K,EAAgBC,MOsBxBoE","file":"static/js/main.ed2e697c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/fish.2a4ff65c.svg\";","class _Volumemeter {\n\n    constructor( clipLevel, averaging, clipLag ) {\n        let AudioContext = window.AudioContext || window.webkitAudioContext;\n        window.audioContext = new AudioContext();\n        window.processor = window.audioContext.createScriptProcessor(512);\n        window.processor.onaudioprocess = this.volumeAudioProcess;\n        window.processor.clipping = false;\n        window.processor.lastClip = 0;\n        window.processor.volume = 0;\n        window.processor.clipLevel = clipLevel || 0.98;\n        window.processor.averaging = averaging || 0.95;\n        window.processor.clipLag = clipLag || 750;\n\n        window.processor.connect(window.audioContext.destination);\n\n        window.processor.checkClipping =\n            function(){\n                if (!this.clipping)\n                    return false;\n                if ((this.lastClip + this.clipLag) < window.performance.now())\n                    this.clipping = false;\n                return this.clipping;\n            };\n\n        window.processor.shutdown =\n            function(){\n                this.disconnect();\n                this.onaudioprocess = null;\n            };\n\n        try {\n            // monkeypatch getUserMedia\n            navigator.getUserMedia =\n                navigator.getUserMedia ||\n                navigator.webkitGetUserMedia ||\n                navigator.mozGetUserMedia;\n\n            // ask for an audio input\n            navigator.getUserMedia(\n                {\n                    \"audio\": {\n                        \"mandatory\": {\n                            \"googEchoCancellation\": \"false\",\n                            \"googAutoGainControl\": \"false\",\n                            \"googNoiseSuppression\": \"false\",\n                            \"googHighpassFilter\": \"false\"\n                        },\n                        \"optional\": []\n                    },\n                }, this.gotStream, this.didntGetStream);\n        } catch (e) {\n            console.log('getUserMedia threw exception :' + e);\n        }\n\n    }\n\n    didntGetStream() {\n        console.log('Stream generation failed.');\n    }\n\n    gotStream(stream) {\n        // Create an AudioNode from the stream.\n        let mediaStreamSource = window.audioContext.createMediaStreamSource(stream);\n        mediaStreamSource.connect(window.processor);\n    }\n\n    volumeAudioProcess( event ) {\n        var buf = event.inputBuffer.getChannelData(0);\n        var sum = 0;\n        var x;\n\n        // Do a root-mean-square on the samples: sum up the squares...\n        for (var i=0; i<buf.length; i++) {\n            x = buf[i];\n            if (Math.abs(x)>=this.clipLevel) {\n                this.clipping = true;\n                this.lastClip = window.performance.now();\n            }\n            sum += x * x;\n        }\n\n        // ... then take the square root of the sum.\n        var rms =  Math.sqrt(sum / buf.length);\n\n        // Now smooth this out with the averaging factor applied\n        // to the previous sample - take the max here because we\n        // want \"fast attack, slow release.\"\n        this.volume = Math.max(rms, this.volume*this.averaging);\n    }\n\n    getVolume() {\n        return window.processor.volume;\n    }\n}\n\nconst Volumemeter = new _Volumemeter();\n\nexport default Volumemeter","import Volumemeter from \"./Volumemeter\";\nimport Competition from \"./Competition\";\n\nclass Competitor {\n    /**\n     *\n     * @param {string} name\n     * @param {double} rating\n     */\n    constructor(name = '') {\n        this.reset();\n        this.name = name;\n\n        this.measure = this.measure.bind(this);\n        this.reset = this.reset.bind(this);\n    }\n\n    reset() {\n        this.startedRecording = null;\n        this.stoppedRecording = null;\n        this.levels = [];\n        this.measureDuration = Competition.duration;\n        this.timeLeft = this.measureDuration;\n        this.isActive = false;\n        clearInterval(this.interval);\n        Competition.update();\n    }\n\n    tick() {\n        this.timeLeft = this.measureDuration - (Math.floor(Date.now()) - this.startedRecording);\n        if (this.timeLeft > 0) {\n            let levels = this.levels;\n            let vol = Volumemeter.getVolume();\n            levels.push(vol);\n        }\n        else {\n            this.stoppedRecording = Math.floor(Date.now());\n            clearInterval(this.interval);\n            this.isActive = false;\n            this.timeLeft = 0;\n        }\n        Competition.update();\n    }\n\n    get rating() {\n        if (this.levels.length === 0) {\n            return 0;\n        } else {\n            let levelSum =  this.levels.reduce((pv, cv) => pv+cv, 0);\n            return (levelSum / this.levels.length) / Competition.maxVol;\n        }\n    }\n\n    /**\n     *\n     * @param {double} duration Duration for measurement in ms\n     */\n    measure() {\n        if (this.levels.length > 0) {\n            return;\n        }\n        console.log(this.name + ' starts measuring!');\n        this.measureDuration = Competition.duration;\n        console.log(' duration! ' + this.measureDuration);\n        let timestamp = Math.floor(Date.now());\n        this.isActive = true;\n        this.startedRecording = parseInt(timestamp, 10);\n        this.interval = setInterval(() => this.tick(), 10); // measure every 10th ms\n    }\n\n    /**\n     * Revive from JSON Competition data\n     * @param data\n     * @returns {Competitor}\n     */\n    revive(data) {\n        if (this.name != null) {\n            this.name = data.name;\n            this.startedRecording = data.startedRecording;\n            this.stoppedRecording = data.stoppedRecording;\n            this.levels = data.levels;\n            this.measureDuration = data.measureDuration;\n            this.timeLeft = data.timeLeft;\n            this.isActive = data.isActive;\n        }\n        return this;\n    }\n}\n\nexport default Competitor","import Competitor from \"./Competitor\";\n\nclass CalibrationCompetitor extends Competitor {\n    getMin() {\n        return Math.min.apply(Math,this.levels);\n    }\n    getMax() {\n        return Math.max.apply(Math,this.levels);\n    }\n    getAvg() {\n        let levelSum =  this.levels.reduce((foo, bar) => foo+bar, 0);\n        return (levelSum / this.levels.length);\n    }\n}\n\nexport default CalibrationCompetitor","import Competitor from './Competitor';\nimport CalibrationCompetitor from \"./CalibrationCompetitor\";\n\nclass _Competition {\n    constructor() {\n        if (!_Competition.instance) {\n\n            this.reset();\n\n            _Competition.instance = this;\n        }\n        return _Competition.instance;\n    }\n\n    reset() {\n        this.competitors = [];\n        this._duration = 10000;\n        this.calibrationCompetitors = [];\n        this.maxVol = 1;\n        this.stateCallbacks = [];\n    }\n\n    /**\n     *\n     * @param {Competitor} competitor\n     */\n    addCompetitor(competitor) {\n        this.competitors.push(competitor);\n    }\n\n    /**\n     *\n     * @param {CalibrationCompetitor} competitor\n     */\n    addCalibrationCompetitor(competitor) {\n        this.calibrationCompetitors.push(competitor);\n    }\n\n    get duration() {\n        return this._duration;\n    }\n\n    set duration(value) {\n        this._duration = parseInt(value, 10);\n    }\n\n    update() {\n        this.stateCallbacks.forEach(function (cb) {\n            if (cb) {\n                cb();\n            }\n        })\n    }\n\n    /**\n     *\n     * @param {string} name\n     * @returns {boolean}\n     */\n    isCompetitorNameAlreadyExists(name) {\n        let exists = false;\n        this.competitors.forEach(function (comp) {\n            if (name === comp.name) {\n                exists = true;\n            }\n        });\n        return exists;\n    }\n\n    /**\n     *\n     * @param name\n     * @returns {boolean}\n     */\n    isCalibrationCompetitorNameAlreadyExists(name) {\n        let exists = false;\n        this.calibrationCompetitors.forEach(function (comp) {\n            if (name === comp.name) {\n                exists = true;\n            }\n        });\n        return exists;\n    }\n\n    removeCompetitor(competitor) {\n        this.competitors.forEach(function (comp, index, comps) {\n            if (competitor === comp) {\n                comps.splice(index, 1);\n            }\n        });\n        this.update();\n    }\n\n    removeCalibrationCompetitor(competitor) {\n        this.calibrationCompetitors.forEach(function (comp, index, comps) {\n            if (competitor === comp) {\n                comps.splice(index, 1);\n            }\n        });\n        this.update();\n    }\n\n\n    /**\n     *\n     * @returns {Competitor}\n     */\n    getActiveCompetitor() {\n        let activeCompetitor = null;\n        this.competitors.forEach(function (comp) {\n            if (comp.isActive) {\n                activeCompetitor = comp;\n            }\n        });\n        return activeCompetitor;\n    }\n\n    getActiveCalibrationCompetitor() {\n        let activeCompetitor = null;\n        this.calibrationCompetitors.forEach(function (comp) {\n            if (comp.isActive) {\n                activeCompetitor = comp;\n            }\n        });\n        return activeCompetitor;\n    }\n\n    getLeader() {\n        let leadingCompetitor = null;\n        if (this.competitors[0]) {\n            leadingCompetitor = this.competitors[0];\n            this.competitors.forEach(function (comp, index, comps) {\n                if (comp.rating >= leadingCompetitor.rating) {\n                    leadingCompetitor = comp;\n                }\n            });\n        }\n        if (leadingCompetitor && leadingCompetitor.rating !== 0) {\n            return leadingCompetitor;\n        }\n        else {\n            return null;\n        }\n    }\n\n    isCalibrating() {\n        let calibrating = false;\n        this.calibrationCompetitors.forEach(function (comp) {\n            if (comp.isActive) {\n                calibrating = true;\n            }\n        });\n        return calibrating;\n    }\n\n    dumpToLocalStorage() {\n        localStorage.setItem('competition', JSON.stringify(this));\n    }\n\n    getJsonDateUri() {\n        let str = JSON.stringify(this, null, '\\t');\n        return 'data:application/json;charset=utf-8,' + encodeURIComponent(str);\n    }\n\n    /**\n     *\n     * @param selectorFiles FileList\n     */\n    reviveFromFileList(selectorFiles) {\n        let file = selectorFiles[0];\n        let reader = new FileReader();\n        reader.onload = function (e) {\n            let comp = JSON.parse(e.target.result);\n            if (comp != null) {\n                let callbacks = this.stateCallbacks;\n                this.revive( comp );\n                this.dumpToLocalStorage();\n                this.stateCallbacks = callbacks;\n                this.update();\n            }\n        }.bind(this);\n        reader.readAsText(file);\n    }\n\n    /**\n     *\n     * @param data\n     * @returns {_Competition}\n     */\n    revive(data) {\n        this.reset();\n        this._duration = data._duration;\n        this.maxVol = data.maxVol;\n        data.competitors.forEach((comp) => {\n            let newComp = new Competitor();\n            newComp.revive(comp);\n            this.addCompetitor(newComp);\n        });\n        data.calibrationCompetitors.forEach((comp) => {\n            let newComp = new CalibrationCompetitor();\n            newComp.revive(comp);\n            this.addCalibrationCompetitor(newComp);\n        });\n        this.update();\n    }\n\n}\n\nconst Competition = new _Competition();\n\nexport default Competition","import React from \"react\";\n\nfunction RecordingDot(props) {\n    const isActive = props.isActive;\n    if (isActive) {\n        return <span className=\"text-danger\">&#9673;</span>;\n    }\n    return <span className=\"text-danger\">&nbsp;</span>;\n}\n\nexport default RecordingDot","import React, {Component} from 'react';\nimport Competition from \"../Model/Competition\";\nimport RecordingDot from \"./RecordingDot\";\n\nclass CompetitorTableRow extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            competitor: this.props.competitor\n        };\n    }\n    render() {\n        let competitor = this.state.competitor;\n        return (\n            <tr key={competitor.name} className={this.props.addClass}>\n                <td><RecordingDot isActive={competitor.isActive} /></td>\n                <td>{competitor.name}</td>\n                <td>{competitor.rating}</td>\n                <td>{competitor.timeLeft/1000}</td>\n                <td><input type=\"button\" className=\"form-control btn btn-info\" onClick={competitor.measure} value=\"Start\"/>\n                </td>\n                <td><input type=\"button\" className=\"form-control btn btn-warning\" onClick={competitor.reset}\n                           value=\"Reset\"/></td>\n                <td><input type=\"button\" className=\"form-control btn btn-danger\" onClick={( () => Competition.removeCompetitor(competitor) )}\n                           value=\"Delete\"/></td>\n            </tr>\n        );\n    }\n}\n\n\nexport default CompetitorTableRow","import React, {Component} from 'react'\nimport CompetitorTableRow from \"./CompetitorTableRow\";\n\nclass CompetitionTable extends Component {\n    render() {\n        return (\n            <div>\n                Leading competitor is displayed red.\n                <table className=\"table table-striped table-hover\">\n                    <thead>\n                    <tr>\n                        <td>Status</td>\n                        <td>Name</td>\n                        <td>Rating</td>\n                        <td>Time left</td>\n                        <td>Start</td>\n                        <td>Reset</td>\n                        <td>Delete</td>\n                    </tr>\n                    </thead>\n                    <tbody>\n                    {this.props.competition.competitors.map(\n                        competitor =>\n                            <React.Fragment key={competitor.name}>\n                                <CompetitorTableRow competitor={competitor} addClass={((competitor === this.props.competition.getLeader()) ? 'text-danger' : '')} />\n                            </React.Fragment>)\n                    }\n                    </tbody>\n                </table>\n            </div>\n        );\n    }\n}\n\nexport default CompetitionTable","import React, {Component} from 'react';\nimport Competition from \"../Model/Competition\";\nimport RecordingDot from \"./RecordingDot\";\n\nclass CompetitorTableRow extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            competitor: this.props.competitor\n        };\n    }\n    render() {\n        let competitor = this.state.competitor;\n        return (\n            <tr key={competitor.name} className={this.props.addClass}>\n                <td><RecordingDot isActive={competitor.isActive} /></td>\n                <td>{competitor.name}</td>\n                <td>{competitor.timeLeft/1000}</td>\n                <td>{competitor.getMin()}</td>\n                <td>{competitor.getMax()}</td>\n                <td>{competitor.getAvg()}</td>\n                <td>{competitor.rating}</td>\n                <td><input type=\"button\" className=\"form-control btn btn-info\" onClick={competitor.measure} value=\"Start\"/>\n                </td>\n                <td><input type=\"button\" className=\"form-control btn btn-warning\" onClick={competitor.reset}\n                           value=\"Reset\"/></td>\n                <td><input type=\"button\" className=\"form-control btn btn-danger\" onClick={( () => Competition.removeCalibrationCompetitor(competitor) )}\n                           value=\"Delete\"/></td>\n            </tr>\n        );\n    }\n}\n\n\nexport default CompetitorTableRow","import React, {Component} from 'react'\nimport CalibrationCompetitorTableRow from \"./CalibrationCompetitorTableRow\";\n\nclass CalibrationTable extends Component {\n    render() {\n        return (\n            <div>\n                Leading competitor is displayed red.\n                <table className=\"table table-striped table-hover\">\n                    <thead>\n                    <tr>\n                        <td>Status</td>\n                        <td>Name</td>\n                        <td>Duration</td>\n                        <td>measured min volume</td>\n                        <td>measured max volume</td>\n                        <td>measured average</td>\n                        <td>Rating</td>\n                        <td>Start</td>\n                        <td>Reset</td>\n                        <td>Delete</td>\n                    </tr>\n                    </thead>\n                    <tbody>\n                    {this.props.competition.calibrationCompetitors.map(\n                        competitor =>\n                            <React.Fragment key={competitor.name}>\n                                <CalibrationCompetitorTableRow competitor={competitor} addClass={((competitor === this.props.competition.getLeader()) ? 'text-danger' : '')} />\n                            </React.Fragment>)\n                    }\n                    </tbody>\n                </table>\n            </div>\n        );\n    }\n}\n\nexport default CalibrationTable","import React from 'react';\n\nfunction CompetitionJsonExportBtn (props) {\n    return(\n        <a href={props.competition.getJsonDateUri()} download=\"export.json\" className=\"d-inline-block btn btn-info\">Export</a>\n    )\n}\nexport default CompetitionJsonExportBtn","import React from 'react';\n\nfunction CompetitionJsonImportBtn(props) {\n    return (\n        <label className=\"d-inline-block btn btn-info btn-file my-0 ml-1\">\n            Import file <input type=\"file\" id=\"jsonFileInput\" style={{display: 'none'}} onChange={ (e) => props.competition.reviveFromFileList(e.target.files) } />\n        </label>\n    )\n}\n\nexport default CompetitionJsonImportBtn","import React, {Component} from 'react';\nimport CompetitionTable from \"./CompetitionTable\";\nimport CalibrationTable from \"./CalibrationTable\";\nimport Competition from '../Model/Competition';\nimport Competitor from '../Model/Competitor';\nimport CompetitionJsonExportBtn from \"./CompetitionJsonExportBtn\"\nimport CompetitionJsonImportBtn from \"./CompetitionJsonImportBtn\"\nimport CalibrationCompetitor from \"../Model/CalibrationCompetitor\";\n\n\nclass Admin extends Component {\n    constructor(props) {\n        super(props);\n\n        let compParsed = JSON.parse(localStorage.getItem('competition'));\n        if (compParsed != null) {\n            Competition.revive(compParsed);\n        }\n\n        this.state = {\n            addCompetitorInput: '',\n            addCalibrationCompetitorInput: 'Calibration 1',\n            durationInput: Competition.duration / 1000,\n            maxVolInput: Competition.maxVol,\n            competition: Competition,\n        };\n\n        this.state.competition.stateCallbacks.push(\n            () => {\n                console.log('stateCallback');\n                this.forceUpdate();\n            }\n        );\n\n        this.addCompetitor = this.addCompetitor.bind(this);\n        this.addCalibrationCompetitor = this.addCalibrationCompetitor.bind(this);\n        this.changeSettings = this.changeSettings.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n\n    }\n\n    keyboardFunction(event) {\n        if (event.keyCode === 71) {\n            this.setState(\n                {\n                    record: 'def'\n                }\n            )\n        }\n    }\n\n    componentDidMount() {\n        document.title = \"Admin | Applaus-O-Meter\";\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        Competition.dumpToLocalStorage();\n    }\n\n    addCompetitor(event) {\n        event.preventDefault();\n        let name = this.state.addCompetitorInput;\n        if (!this.state.competition.isCompetitorNameAlreadyExists(name) && !(name === \"\")) {\n            let competition = this.state.competition;\n            competition.addCompetitor(new Competitor(name));\n            this.setState({\n                competition: competition\n            });\n        }\n    }\n\n    addCalibrationCompetitor(event) {\n        event.preventDefault();\n        let name = this.state.addCalibrationCompetitorInput;\n        if (!this.state.competition.isCalibrationCompetitorNameAlreadyExists(name) && !(name === \"\")) {\n            let competition = this.state.competition;\n            competition.addCalibrationCompetitor(new CalibrationCompetitor(name));\n            this.setState({\n                competition: competition\n            });\n        }\n    }\n\n    changeSettings(event) {\n        event.preventDefault();\n        let competition = this.state.competition;\n        competition.duration = this.state.durationInput * 1000;\n        competition.maxVol = parseFloat((this.state.maxVolInput).toString().replace(',', '.'));\n        this.setState({\n            competition: competition\n        });\n    }\n\n    handleChange(e) {\n        this.setState({[e.target.name]: e.target.value});\n    }\n\n\n    render() {\n        return (\n            <div className=\"container-fluid p-5\">\n\n                <header>\n                    <h2>Welcome to Applaus-O-Meter administration</h2>\n                    <p>To get started, add some competitors.</p>\n                </header>\n\n\n                <div id=\"settings\">\n                    <h3>Settings</h3>\n                    <form onSubmit={this.changeSettings} className=\"form-group\">\n                        <div className=\"row\">\n                            <div className=\"col-2\">\n                                <label\n                                    htmlFor=\"durationInput\">Duration in\n                                    seconds<br/>(currently {this.state.competition.duration / 1000} s)</label>\n                            </div>\n                            <div className=\"col-8\">\n                                <input type=\"text\" className=\"form-control w-100\"\n                                       name=\"durationInput\" value={this.state.durationInput} placeholder=\"duration\"\n                                       onChange={this.handleChange}/>\n                            </div>\n                            <div className=\"col-2\">\n                                <input type=\"submit\" className=\"form-control btn btn-success\" value=\"Set!\"/>\n                            </div>\n                        </div>\n                        <div className=\"row\">\n                            <div className=\"col-2\">\n                                <label\n                                    htmlFor=\"maxVolInput\">Max volume for rating, in\n                                    [0;1]<br/>(currently: {this.state.competition.maxVol})</label>\n                            </div>\n                            <div className=\"col-8\">\n                                <input type=\"text\" className=\"form-control w-100\"\n                                       name=\"maxVolInput\" value={this.state.maxVolInput}\n                                       onChange={this.handleChange}/>\n                            </div>\n                            <div className=\"col-2\">\n                                <input type=\"submit\" className=\"form-control btn btn-success\" value=\"Set!\"/>\n                            </div>\n                        </div>\n                    </form>\n                </div>\n\n\n                <div id=\"competitors\" className=\"border border-secondary p-2 bg-primary rounded\">\n                    <h3>Competitors</h3>\n                    <form onSubmit={this.addCompetitor} className=\"row form-group\">\n                        <div className=\"col-10\">\n                            <input type=\"text\" className=\"form-control w-100\"\n                                   name=\"addCompetitorInput\" value={this.state.addCompetitorInput}\n                                   placeholder=\"Competitor name\"\n                                   onChange={this.handleChange}/>\n                        </div>\n                        <div className=\"col-2\">\n                            <input type=\"submit\" className=\"form-control btn btn-success\" value=\"Add!\"/>\n                        </div>\n                    </form>\n\n                    <div>\n                        <CompetitionTable competition={this.state.competition}/>\n                    </div>\n                </div>\n\n\n                <div id=\"calibration\" className=\"my-4\">\n                    <h3>Calibration</h3>\n                    <form onSubmit={this.addCalibrationCompetitor} className=\"row form-group\">\n                        <div className=\"col-10\">\n                            <input type=\"text\" className=\"form-control w-100\"\n                                   name=\"addCalibrationCompetitorInput\"\n                                   value={this.state.addCalibrationCompetitorInput}\n                                   placeholder=\"Competitor name\"\n                                   onChange={this.handleChange}/>\n                        </div>\n                        <div className=\"col-2\">\n                            <input type=\"submit\" className=\"form-control btn btn-success\" value=\"Add!\"/>\n                        </div>\n                    </form>\n                    <div>\n                        <CalibrationTable competition={this.state.competition}/>\n                    </div>\n                </div>\n\n                <div>\n                    <CompetitionJsonExportBtn competition={this.state.competition}/>\n                    <CompetitionJsonImportBtn competition={this.state.competition}/>\n                </div>\n\n            </div>\n        );\n    }\n}\n\nexport default Admin","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {Component} from \"react\";\nimport React from \"react\";\nimport { SvgLoader, SvgProxy } from 'react-svgmt';\nimport fish from './fish.svg';\n\n\nclass Fishmeter extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {};\n    }\n\n    render() {\n        let meterconatainerstyle = {\n        };\n        let rotation = parseFloat(this.props.rating) * 180;\n        return (\n            <div className=\"d-flex flex-column-reverse p-4\" style={meterconatainerstyle}>\n                {/*<img src={fish} className=\"fishmeter\" alt=\"fish\" width=\"400px\" style={fishstyle}/>*/}\n                <SvgLoader path={fish} height=\"500px\">\n                    <SvgProxy selector=\"#svgmeter\" transform={\"rotate(\" + rotation +  \" 250.1 83.1)\"} />\n                </SvgLoader>\n            </div>\n        );\n    };\n}\n\nexport default Fishmeter;","import React, {Component} from 'react';\nimport RecordingDot from \"./RecordingDot\";\nimport {Wobble} from 'react-motions';\n\n\nfunction CompetitorCard(props) {\n    const competitor = props.competitor;\n\n    let competitorNameClass = \"text-primary\";\n    let cardBgClass = \"bg-info\";\n    let ratingClass = \"text-secondary\";\n    if (props.competition.getLeader() === competitor) {\n        cardBgClass = \"bg-success\";\n        competitorNameClass = \"text-secondary\";\n        ratingClass = \"text-secondary\";\n    }\n    let bounce = false;\n    if( competitor.stoppedRecording > (Math.floor(Date.now()) - 1 * 1000) ) {\n        bounce = true;\n    }\n    let card =\n        <div className={\"card text-white text-center \" + cardBgClass}>\n            <div className=\"card-body\">\n                <div>\n                    <RecordingDot isActive={competitor.isActive}/>\n                </div>\n                <h2 className={\"card-title \" + competitorNameClass}>{competitor.name}</h2>\n                <div className=\"card-text\">\n                    <p><span className=\"timeLeftText\">Verbleibende Zeit:</span><br/>{parseFloat(competitor.timeLeft / 1000).toFixed(1)} Sekunden</p>\n                    <p className={\"btn btn-primary ratingText \" + ratingClass}>Wertung: <span className=\"text-white\">{parseFloat(competitor.rating * 10).toFixed(2)}</span></p>\n                </div>\n            </div>\n        </div>;\n    if (bounce) {\n        return (\n            <div className=\"col-3\" key={competitor.name}>\n                <Wobble>\n                    {card}\n                </Wobble>\n            </div>\n        )\n    }\n    else {\n        return (\n            <div className=\"col-3\" key={competitor.name}>\n                {card}\n            </div>\n        )\n    }\n}\n\nclass CompetitionCards extends Component {\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        return (\n            <div id=\"competitionCardContainer\" className=\"container-fluid px-5\">\n                <div className=\"row justify-content-center\">\n                    {this.props.competition.competitors.map(\n                        competitor => <CompetitorCard key={competitor.name} competition={this.props.competition}\n                                                      competitor={competitor} />\n                    )}\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default CompetitionCards\n\n\n","import React, {Component} from 'react';\nimport RecordingDot from \"./RecordingDot\";\n\n\nfunction CalibrationCard(props) {\n    const competitor = props.competitor;\n    let cardBgClass = \"bg-info\";\n    if( props.competition.getLeader() === competitor ) {\n        cardBgClass = \"bg-success\";\n    }\n    return (\n        <div className=\"col-3\" key={competitor.name}>\n            <div className={\"card text-white text-center \" + cardBgClass}>\n                <div className=\"card-body\">\n                    <div>\n                        <RecordingDot isActive={competitor.isActive}/>\n                    </div>\n                    <h2 className=\"card-title text-primary\">{competitor.name}</h2>\n                    <div className=\"card-text\">\n                        <p className=\"h2\">Verbleibende Zeit:<br/>{parseFloat(competitor.timeLeft / 1000).toFixed(1)} Sekunden</p>\n                        <p className=\"h2\">Maximum: {parseFloat(competitor.getMax()).toFixed(2)}</p>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nclass CalibrationCards extends Component {\n    render() {\n        return (\n            <div id=\"competitionCardContainer\" className=\"container-fluid\">\n                <div className=\"row justify-content-center\">\n                    <h3 className=\"bg-danger text-white text-center w-100 p-2\">CALIBRATION</h3>\n                    {this.props.competition.calibrationCompetitors.map(\n                        competitor => <CalibrationCard competition={this.props.competition} competitor={competitor} />\n                    )}\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default CalibrationCards\n\n\n","import React, {Component} from \"react\";\nimport Fishmeter from \"./Fishmeter\";\nimport CompetitionCards from \"./CompetitionCards\";\nimport CalibrationCards from \"./CalibrationCards\";\nimport Competition from \"../Model/Competition\";\nimport './styles/frontend.css';\n\nclass Frontend extends Component {\n    constructor(props) {\n        super(props);\n\n        let compParsed = JSON.parse(localStorage.getItem('competition'));\n        if (compParsed != null) {\n            Competition.revive(compParsed);\n        }\n\n        this.state = {\n            competition: Competition,\n            rating: 0.0\n        };\n\n        // this.interval = setInterval(() => this.tick(), 10); // measure every 10th ms\n\n        this.onStorage = this.onStorage.bind(this);\n    }\n\n    componentWillMount() {\n        if (window.addEventListener) {\n            window.addEventListener(\"storage\", this.onStorage, true);\n        } else {\n            window.attachEvent(\"onstorage\", this.onStorage);\n        }\n    }\n\n    onStorage(data) {\n        let compParsed = JSON.parse(localStorage.getItem('competition'));\n        if (compParsed != null) {\n            Competition.revive(compParsed);\n            let activeCompetitor = Competition.getActiveCompetitor();\n            // console.log( activeCompetitor );\n            if (activeCompetitor) {\n                clearInterval(this.interval);\n                this.setState({\n                    rating: activeCompetitor.rating\n                })\n            }\n            else if( Competition.getActiveCalibrationCompetitor() ) {\n                this.setState({\n                    rating: Competition.getActiveCalibrationCompetitor().rating\n                })\n            }\n            this.forceUpdate();\n        }\n    }\n\n    componentDidMount() {\n        document.title = \"View | Applaus-O-Meter\";\n    }\n\n    render() {\n        if (Competition.isCalibrating() || Competition.competitors.length === 0) {\n            return (\n                <div id=\"frontend\" className=\"container-fluid py-2 rounded-0\">\n                    <div id=\"graphic\" className=\"d-flex justify-content-center\">\n                        <Fishmeter rating={this.state.rating}/>\n                    </div>\n                    <div id=\"information\">\n                        <CalibrationCards competition={this.state.competition}/>\n                    </div>\n                </div>\n            )\n        } else {\n            return (\n                <div id=\"frontend\" className=\"container-fluid py-2 rounded-0\">\n                    <div id=\"graphic\" className=\"d-flex justify-content-center\">\n                        <Fishmeter rating={this.state.rating}/>\n                    </div>\n                    <div id=\"information\">\n                        <CompetitionCards competition={this.state.competition}/>\n                    </div>\n                </div>\n            )\n        }\n    }\n}\n\nexport default Frontend","import React from \"react\";\n// import logo from './fishtival_logo_yellow_white.svg';\n\nfunction Heading(props) {\n    return(\n        <div className=\"container-fluid pt-2\">\n            <h2 className=\"text-center text-warning\">Applaus-O-Meter</h2>\n            <h1 id=\"mainHeading\" className=\"text-center text-white py-1\">Fishtival 2018</h1>\n            {/*<h1 className=\"text-center text-white bg-primary rounded p-1\">*/}\n                {/*<img src={logo} height=\"75\"/>*/}\n            {/*</h1>*/}\n        </div>\n    )\n}\n\nexport default Heading","import React from 'react';\n\n\nfunction Footer(props) {\n    return(\n        <footer className=\"container-fluid py-1 px-5 text-right\">\n            Applaus-O-Meter | Fishtival 2018 | mail@yorickreum.de\n        </footer>\n    );\n}\n\nexport default Footer","import React, {Component} from 'react';\nimport ReactDOM from 'react-dom';\nimport {HashRouter, Route, Link, Switch} from 'react-router-dom';\nimport Admin from './View/Admin';\nimport registerServiceWorker from './registerServiceWorker';\nimport './View/styles/index.css'\nimport Frontend from \"./View/Frontend\";\nimport Heading from \"./View/Heading\";\nimport Footer from \"./View/Footer\"\n\nclass Areas extends Component {\n\n    componentDidMount() {\n        document.title = \"Applaus-O-Meter\";\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                <div className=\"container\">\n                    <div className=\"row justify-content-center\">\n                        <div className=\"col-4\">\n                            <div className=\"card h-100 text-white text-center bg-warning\">\n                                <div className=\"card-body py-5\">\n                                    <h2 className=\"card-title text-primary pb-3\">Administration</h2>\n                                    <div className=\"card-text\">\n                                        <ul className=\"text-left\">\n                                            <li>Teilnehmner anlegen und verwalten</li>\n                                            <li>Abstimmungen starten</li>\n                                        </ul>\n                                        <Link to=\"/admin\" className=\"btn btn-primary\">Hier entlang &#8680;</Link>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"col-4\">\n                            <div className=\"card h-100 text-white text-center bg-warning\">\n                                <div className=\"card-body py-5\">\n                                    <h2 className=\"card-title text-primary pb-3\">Abstimmung</h2>\n                                    <div className=\"card-text\">\n                                        <p>\n                                            Zum Beispiel in neuem Fenster öffnen und auf Beamer zeigen.\n                                        </p>\n                                        <Link to=\"/view\" className=\"btn btn-primary\">Hier entlang &#8680;</Link>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </React.Fragment>\n        )\n    }\n}\n\nReactDOM.render(\n    <div>\n        <Heading />\n        <HashRouter>\n            <Switch>\n                <Route exact path=\"/\" component={Areas}/>\n                <Route path=\"/admin\" component={Admin}/>\n                <Route path=\"/view\" component={Frontend}/>\n            </Switch>\n        </HashRouter>\n        <Footer />\n    </div>,\n    document.getElementById('root')\n);\n\nregisterServiceWorker();\n"],"sourceRoot":""}