{"version":3,"sources":["assets/fish.svg","assets/castle.svg","components/RecordingDot.js","utils/crosstabSync.js","utils/volumemeterUtils.js","reducers.js","constants.js","store.js","utils/competitionUtils.js","actions.js","components/CompetitorTableRow.js","components/CompetitionTable.js","components/CalibrationTable.js","entities/Competition.js","screens/Admin.js","registerServiceWorker.js","meters/Fishmeter.js","components/CompetitorCard.js","components/CompetitionCards.js","components/CalibrationCards.js","meters/Castlemeter.js","screens/View.js","components/Heading.js","components/Footer.js","index.js"],"names":["module","exports","__webpack_require__","p","recordingDotStyle","dot","textShadow","RecordingDot","props","activeClass","isActive","react_default","a","createElement","className","style","crosstabSync","store","persistConfig","crosstabConfig","blacklist","whitelist","keyPrefix","KEY_PREFIX","key","window","addEventListener","e","indexOf","oldValue","newValue","statePartial","JSON","parse","state","Object","keys","reduce","reducerKey","dispatch","payload","type","REHYDRATE","VolumemeterUtils","clipLevel","averaging","clipLag","classCallCheck","this","AudioContext","webkitAudioContext","audioContext","processor","createScriptProcessor","onaudioprocess","volumeAudioProcess","clipping","lastClip","volume","connect","destination","checkClipping","performance","now","shutdown","disconnect","navigator","getUserMedia","webkitGetUserMedia","mozGetUserMedia","audio","mandatory","googEchoCancellation","googAutoGainControl","googNoiseSuppression","googHighpassFilter","optional","gotStream","didntGetStream","console","log","stream","createMediaStreamSource","event","x","buf","inputBuffer","getChannelData","sum","i","length","Math","abs","rms","sqrt","max","initialStates","administration","title","maxVol","duration","voting","volumemeter","activeCompetitor","competitors","byId","allIds","calibrationCompetitors","ratings","combineReducers","arguments","undefined","action","objectSpread","competitorKey","defineProperty","name","startedRecording","stoppedRecording","levels","measureDuration","timeLeft","interval","concat","toConsumableArray","forEach","filter","value","rating","storage","persistedReducer","persistReducer","rootReducer","composeEnhancer","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","applyMiddleware","thunk","persistor","persistStore","getLeader","getState","leadingCompetitor","compKey","getRating","competitor","pv","cv","deleteCompetitor","startCompetitor","timestamp","floor","Date","parseInt","setInterval","recordValue","startRecording","resetCompetitor","getVolume","saveValue","updateRating","clearInterval","stopRecording","updateAllRatings","setDuration","setMaxvol","addClass","components_RecordingDot","hasOwnProperty","toFixed","onClick","CompetitionTable","map","Fragment","components_CompetitorTableRow","Component","CalibrationTable","Competition","_Competition","instance","reset","_duration","stateCallbacks","push","cb","exists","comp","index","comps","splice","update","calibrating","localStorage","setItem","stringify","str","encodeURIComponent","selectorFiles","file","reader","FileReader","onload","target","result","callbacks","revive","dumpToLocalStorage","bind","readAsText","data","_this","newComp","Competitor","addCompetitor","CalibrationCompetitor","addCalibrationCompetitor","Admin","possibleConstructorReturn","getPrototypeOf","call","durationInput","parseFloat","maxVolInput","toString","replace","addCompetitorInput","addCalibrationCompetitorInput","assertThisInitialized","handleChange","keyCode","setState","record","document","prevProps","prevState","preventDefault","doesCompetitorNameAlreadyExists","competition","isCalibrationCompetitorNameAlreadyExists","id","onSubmit","htmlFor","placeholder","onChange","components_CompetitionTable","components_CalibrationTable","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","error","Fishmeter","competitorNameClass","cardBgClass","ratingClass","bounce","card","react_motions_min","competitorKeys","components_CompetitorCard","CalibrationCard","getMax","CalibrationCards","Castlemeter","_useWindowSize","useWindowSize","width","height","react_confetti_min_default","react_svgmt","path","castle","selector","View","isCalibrating","meters_Castlemeter","components_CalibrationCards","components_CompetitionCards","Areas","react_router_dom","to","ReactDOM","render","es","integration_react","loading","components_Heading","react_router","exact","component","components_Footer","getElementById","URL","process","origin","fetch","response","status","headers","get","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.51f259db.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/fish.77ad7f8b.svg\";","module.exports = __webpack_public_path__ + \"static/media/castle.f860db9a.svg\";","import React from \"react\";\n\nconst recordingDotStyle = {\n    dot: {\n        textShadow: \"0 0 8px #404040\",\n    }\n};\n\nfunction RecordingDot(props) {\n    const isActive = props.isActive;\n    const activeClass = isActive ? \"text-danger\" : \"text-info\";\n    return <span className={activeClass} style={recordingDotStyle.dot}>&#9673;</span>;\n}\n\nexport default RecordingDot\n","// @TODO\n// update repo: https://github.com/rt2zz/redux-persist-crosstab\n\n// @flow\nimport {KEY_PREFIX, REHYDRATE} from 'redux-persist/lib/constants'\nimport type {PersistConfig} from 'redux-persist/es/types'\nimport type {Store} from 'redux'\n\ntype CrosstabConfig = {\n    blacklist?: ?Array<string>,\n    keyPrefix?: ?string,\n    whitelist?: ?Array<string>,\n}\n\nfunction crosstabSync(store: Store, persistConfig?: PersistConfig, crosstabConfig?: CrosstabConfig) {\n    const blacklist: ?Array<string> = (crosstabConfig && crosstabConfig.blacklist) ? crosstabConfig.blacklist : null;\n    const whitelist: ?Array<string> = (crosstabConfig && crosstabConfig.whitelist) ? crosstabConfig.whitelist : null;\n    const keyPrefix: string = (crosstabConfig && crosstabConfig.keyPrefix) ? crosstabConfig.keyPrefix : KEY_PREFIX;\n\n    const {key}: { key: string } = persistConfig;\n\n    window.addEventListener('storage', handleStorageEvent, false)\n\n    function handleStorageEvent(e) {\n        if (e.key && e.key.indexOf(keyPrefix) === 0) {\n            if (e.oldValue === e.newValue) {\n                return\n            }\n\n            const statePartial: { [string]: string } = JSON.parse(e.newValue)\n\n            /* eslint-disable flowtype/no-weak-types */\n            const state: Object = Object.keys(statePartial).reduce((state, reducerKey) => {\n                /* eslint-enable flowtype/no-weak-types */\n                if (whitelist && whitelist.indexOf(reducerKey) === -1) {\n                    return state\n                }\n                if (blacklist && blacklist.indexOf(reducerKey) !== -1) {\n                    return state\n                }\n\n                state[reducerKey] = JSON.parse(statePartial[reducerKey])\n\n                return state\n            }, {})\n\n            store.dispatch({\n                key,\n                payload: state,\n                type: REHYDRATE,\n            })\n        }\n    }\n}\n\nexport default crosstabSync\n","class VolumemeterUtils {\n\n    constructor( clipLevel, averaging, clipLag ) {\n        let AudioContext = window.AudioContext || window.webkitAudioContext;\n        window.audioContext = new AudioContext();\n        window.processor = window.audioContext.createScriptProcessor(512);\n        window.processor.onaudioprocess = this.volumeAudioProcess;\n        window.processor.clipping = false;\n        window.processor.lastClip = 0;\n        window.processor.volume = 0;\n        window.processor.clipLevel = clipLevel || 0.98;\n        window.processor.averaging = averaging || 0.95;\n        window.processor.clipLag = clipLag || 750;\n\n        window.processor.connect(window.audioContext.destination);\n\n        window.processor.checkClipping =\n            function(){\n                if (!this.clipping)\n                    return false;\n                if ((this.lastClip + this.clipLag) < window.performance.now())\n                    this.clipping = false;\n                return this.clipping;\n            };\n\n        window.processor.shutdown =\n            function(){\n                this.disconnect();\n                this.onaudioprocess = null;\n            };\n\n        try {\n            // monkeypatch getUserMedia\n            navigator.getUserMedia =\n                navigator.getUserMedia ||\n                navigator.webkitGetUserMedia ||\n                navigator.mozGetUserMedia;\n\n            // ask for an audio input\n            navigator.getUserMedia(\n                {\n                    \"audio\": {\n                        \"mandatory\": {\n                            \"googEchoCancellation\": \"false\",\n                            \"googAutoGainControl\": \"false\",\n                            \"googNoiseSuppression\": \"false\",\n                            \"googHighpassFilter\": \"false\"\n                        },\n                        \"optional\": []\n                    },\n                }, this.gotStream, this.didntGetStream);\n        } catch (e) {\n            console.log('getUserMedia threw exception :' + e);\n        }\n\n    }\n\n    didntGetStream() {\n        console.log('Stream generation failed.');\n    }\n\n    gotStream(stream) {\n        // Create an AudioNode from the stream.\n        let mediaStreamSource = window.audioContext.createMediaStreamSource(stream);\n        mediaStreamSource.connect(window.processor);\n    }\n\n    volumeAudioProcess( event ) {\n        var buf = event.inputBuffer.getChannelData(0);\n        var sum = 0;\n        var x;\n\n        // Do a root-mean-square on the samples: sum up the squares...\n        for (var i=0; i<buf.length; i++) {\n            x = buf[i];\n            if (Math.abs(x)>=this.clipLevel) {\n                this.clipping = true;\n                this.lastClip = window.performance.now();\n            }\n            sum += x * x;\n        }\n\n        // ... then take the square root of the sum.\n        var rms =  Math.sqrt(sum / buf.length);\n\n        // Now smooth this out with the averaging factor applied\n        // to the previous sample - take the max here because we\n        // want \"fast attack, slow release.\"\n        this.volume = Math.max(rms, this.volume*this.averaging);\n    }\n\n    getVolume() {\n        return window.processor.volume;\n    }\n}\n\nexport default VolumemeterUtils\n","import {combineReducers} from 'redux'\n\nimport {\n    ADD_COMPETITOR,\n    DELETE_COMPETITOR,\n    RESET_COMPETITOR,\n    SAVE_VALUE,\n    SET_DURATION,\n    SET_MAXVOL,\n    SET_TITLE,\n    START_RECORDING,\n    STOP_RECORDING, UPDATE_RATING\n} from \"./constants\";\n\nimport VolumemeterUtils from \"./utils/volumemeterUtils\";\n\nconst initialStates = {\n    administration: {\n        title: 'Slammen im Schloss V',\n        maxVol: 1,\n        duration: 10000\n    },\n    voting: {\n        volumemeter: null,//new VolumemeterUtils(),\n        activeCompetitor: null,\n        competitors: {\n            byId: {},\n            allIds: []\n        },\n        calibrationCompetitors: {\n            byId: {},\n            allIds: []\n        },\n        ratings: {}\n    }\n};\n\nconst administration = (state = initialStates.administration, action) => {\n    switch (action.type) {\n        case SET_TITLE:\n            return {\n                ...state,\n                title: action.title\n            };\n        case SET_DURATION:\n            return {\n                ...state,\n                duration: action.duration\n            };\n        case SET_MAXVOL:\n            return {\n                ...state,\n                maxVol: action.maxVol\n            };\n        default:\n            return state;\n    }\n};\n\nconst voting = (state = initialStates.voting, action) => {\n    let ratings;\n    switch (action.type) {\n        case ADD_COMPETITOR:\n            return {\n                ...state,\n                activeCompetitor: (state.activeCompetitor === action.competitorKey ? null : state.activeCompetitor),\n                competitors: {\n                    byId: {\n                        ...state.competitors.byId,\n                        [action.competitorKey]: {\n                            name: action.competitorKey,\n                            startedRecording: null,\n                            stoppedRecording: null,\n                            levels: [],\n                            measureDuration: null,\n                            timeLeft: null,\n                            interval: null,\n                        }\n                    },\n                    allIds: [...state.competitors.allIds, action.competitorKey]\n                }\n            };\n        case DELETE_COMPETITOR:\n            const byId = {...state.competitors.byId};\n            byId[action.competitorKey] = undefined;\n            Object.keys(byId).forEach(key => byId[key] === undefined ? delete byId[key] : '');\n            ratings = {...state.ratings};\n            ratings[action.competitorKey] = undefined;\n            Object.keys(ratings).forEach(key => ratings[key] === undefined ? delete ratings[key] : '');\n            return {\n                ...state,\n                competitors: {\n                    ...state.competitors,\n                    byId: {\n                        ...byId\n                    },\n                    allIds: [\n                        ...state.competitors.allIds.filter(key => key !== action.competitorKey),\n                    ]\n                },\n                ratings\n            };\n        case START_RECORDING:\n            return {\n                ...state,\n                volumemeter: new VolumemeterUtils(),\n                activeCompetitor: action.competitorKey,\n                competitors: {\n                    ...state.competitors,\n                    byId: {\n                        ...state.competitors.byId,\n                        [action.competitorKey]: {\n                            ...state.competitors.byId[action.competitorKey],\n                            interval: action.interval,\n                            measureDuration: action.measureDuration,\n                            startedRecording: action.startedRecording\n                        }\n                    }\n                }\n            };\n        case RESET_COMPETITOR:\n            ratings = {...state.ratings};\n            ratings[action.competitorKey] = undefined;\n            Object.keys(ratings).forEach(key => ratings[key] === undefined ? delete ratings[key] : '');\n            return {\n                ...state,\n                activeCompetitor: (state.activeCompetitor === action.competitorKey ? null : state.activeCompetitor),\n                competitors: {\n                    ...state.competitors,\n                    byId: {\n                        ...state.competitors.byId,\n                        [action.competitorKey]: {\n                            ...state.competitors.byId[action.competitorKey],\n                            startedRecording: null,\n                            stoppedRecording: null,\n                            levels: [],\n                            measureDuration: null,\n                            timeLeft: null,\n                            interval: null,\n                        }\n                    }\n                },\n                ratings\n            };\n        case SAVE_VALUE:\n            return {\n                ...state,\n                competitors: {\n                    ...state.competitors,\n                    byId: {\n                        ...state.competitors.byId,\n                        [action.competitorKey]: {\n                            ...state.competitors.byId[action.competitorKey],\n                            timeLeft: action.timeLeft,\n                            levels: [\n                                ...state.competitors.byId[action.competitorKey].levels,\n                                action.value\n                            ],\n                        }\n                    }\n                }\n            };\n        case STOP_RECORDING:\n            return {\n                ...state,\n                activeCompetitor: null,\n                competitors: {\n                    ...state.competitors,\n                    byId: {\n                        ...state.competitors.byId,\n                        [action.competitorKey]: {\n                            ...state.competitors.byId[action.competitorKey],\n                            timeLeft: 0,\n                            stoppedRecording: action.stoppedRecording,\n                        }\n                    }\n                }\n            };\n        case UPDATE_RATING:\n            return {\n                ...state,\n                ratings: {\n                    ...state.ratings,\n                    [action.competitorKey]: action.rating\n                }\n            };\n        default:\n            return state;\n    }\n};\n\nexport default combineReducers({\n    administration,\n    voting\n})\n","export const ADD_COMPETITOR = 'ADD_COMPETITOR';\nexport const DELETE_COMPETITOR = 'DELETE_COMPETITOR';\nexport const RESET_COMPETITOR = 'RESET_COMPETITOR ';\n\nexport const START_RECORDING = 'START_RECORDING';\nexport const STOP_RECORDING = 'STOP_RECORDING';\nexport const RECORD_VALUE = 'RECORD_VALUE';\nexport const SAVE_VALUE = 'SAVE_VALUE';\nexport const UPDATE_RATING = 'UPDATE_RATING';\nexport const UPDATE_ALL_RATINGS = 'UPDATE_ALL_RATINGS';\n\nexport const SET_TITLE = 'SET_TITLE';\nexport const SET_DURATION = 'SET_DURATION';\nexport const SET_MAXVOL = 'SET_MAXVOL';\n","import {applyMiddleware, compose, createStore} from \"redux\";\nimport {persistReducer, persistStore} from 'redux-persist'\nimport storage from 'redux-persist/lib/storage' // defaults to localStorage for web\nimport crosstabSync from \"./utils/crosstabSync\"\nimport rootReducer from \"./reducers\";\nimport thunk from \"redux-thunk\";\n\nconst persistConfig = {\n    key: 'root',\n    storage,\n};\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer)\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nexport const store = createStore(\n    persistedReducer,\n    composeEnhancer(applyMiddleware(thunk)),\n);\n\ncrosstabSync(store, persistConfig);\n\nexport const persistor = persistStore(store);\n","import {store} from \"../store\";\n\n/**\n *\n * @param name\n * @returns {boolean}\n */\nexport function doesCalibrationCompetitorNameAlreadyExists(name) {\n    let exists = false;\n    store.getState().voting.calibrationCompetitors.forEach(function (comp) {\n        if (name === comp.name) {\n            exists = true;\n        }\n    });\n    return exists;\n}\n\n/**\n *\n * @param name\n * @returns {boolean}\n */\nexport function doesCompetitorNameAlreadyExists(name) {\n    let exists = false;\n    const competitors = store.getState().voting.competitors;\n    for (let key in competitors) {\n        if (competitors.hasOwnProperty(key)) {\n            if (name === key) {\n                exists = true;\n            }\n        }\n    }\n    return exists;\n}\n\nexport function getLeader() {\n    const competitors = store.getState().voting.competitors.allIds;\n    let leadingCompetitor = null;\n    if (competitors[0]) {\n        leadingCompetitor = competitors[0];\n        competitors.forEach(function (compKey) {\n            if (getRating(compKey) >= getRating(leadingCompetitor)) {\n                leadingCompetitor = compKey;\n            }\n        });\n    }\n    if (leadingCompetitor && getRating(leadingCompetitor) !== 0) {\n        return leadingCompetitor;\n    } else {\n        return null;\n    }\n}\n\nexport function getRating(competitorKey: string) {\n    let state = store.getState();\n    const competitor = state.voting.competitors.byId[competitorKey];\n    if (competitor.levels.length === 0) {\n        return 0;\n    } else {\n        let levelSum = competitor.levels.reduce((pv, cv) => pv + cv, 0);\n        return (levelSum / competitor.levels.length) / state.administration.maxVol;\n    }\n}\n\n","import {getRating} from \"./utils/competitionUtils\";\nimport {\n    ADD_COMPETITOR,\n    DELETE_COMPETITOR,\n    RESET_COMPETITOR,\n    SAVE_VALUE,\n    SET_DURATION,\n    SET_MAXVOL,\n    SET_TITLE,\n    START_RECORDING,\n    STOP_RECORDING,\n    UPDATE_RATING\n} from \"./constants\";\n\nexport const addCompetitor = (competitorKey: string) => ({\n    type: ADD_COMPETITOR,\n    competitorKey\n});\n\nexport const deleteCompetitor = (competitorKey: string) => ({\n    type: DELETE_COMPETITOR,\n    competitorKey\n});\n\nexport const startCompetitor = (competitorKey: string) => {\n    return (dispatch, getState) => {\n        const state = getState();\n\n        console.log(competitorKey + ' starts measuring!');\n        console.log('duration: ' + state.administration.duration);\n\n        let timestamp = Math.floor(Date.now());\n        const startedRecording = parseInt(timestamp, 10);\n\n        const interval = setInterval(\n            () => {\n                console.log(\"going to record value for: \" + competitorKey)\n                dispatch(recordValue(competitorKey))\n            },\n            100 // ms, normally 10\n        );\n\n        dispatch(startRecording(\n            competitorKey,\n            interval,\n            state.administration.duration,\n            startedRecording,\n            true\n        ));\n    }\n};\n\nexport const resetCompetitor = (competitorKey: string) => ({\n    type: RESET_COMPETITOR,\n    competitorKey\n});\n\nexport const startRecording\n    = (competitorKey: string,\n       interval,\n       duration: number,\n       startedRecording: Date,\n       isActive: boolean) => ({\n    type: START_RECORDING,\n    competitorKey,\n    interval,\n    duration,\n    startedRecording,\n    isActive,\n});\n\nexport const recordValue = (competitorKey: string) => {\n    return (dispatch, getState) => {\n        const state = getState();\n        const competitor = state.voting.competitors.byId[competitorKey];\n\n        let interval = competitor.interval;\n\n        let timeLeft =\n            state.administration.duration -\n            (Math.floor(Date.now()) - competitor.startedRecording);\n\n        if (timeLeft > 0) {\n            let value = state.voting.volumemeter.getVolume();\n            dispatch(saveValue(\n                competitorKey,\n                value,\n                timeLeft,\n            ));\n            dispatch(updateRating(\n                competitorKey,\n                getRating(competitorKey),\n            ));\n        } else {\n            clearInterval(interval);\n            const stoppedRecording = Math.floor(Date.now());\n            dispatch(stopRecording(\n                competitorKey,\n                stoppedRecording,\n            ));\n        }\n    }\n};\n\nexport const updateAllRatings = (competitorKey: string) => {\n    return (dispatch, getState) => {\n        const state = getState();\n        Object.keys(state.voting.ratings).forEach(competitorKey => {\n            dispatch(updateRating(\n                competitorKey,\n                getRating(competitorKey),\n            ));\n        });\n    }\n};\n\nexport const saveValue\n    = (competitorKey: string,\n       value: number,\n       timeLeft: number) => ({\n    type: SAVE_VALUE,\n    competitorKey,\n    value,\n    timeLeft,\n});\n\nexport const updateRating\n    = (competitorKey: string,\n       rating: number) => ({\n    type: UPDATE_RATING,\n    competitorKey,\n    rating,\n});\n\nexport const stopRecording\n    = (competitorKey: string,\n       stoppedRecording: Date) => ({\n    type: STOP_RECORDING,\n    competitorKey,\n    stoppedRecording,\n});\n\nexport const setTitle = (title: string) => ({\n    type: SET_TITLE,\n    title\n});\n\nexport const setDuration = (duration: number) => ({\n    type: SET_DURATION,\n    duration\n});\n\nexport const setMaxvol = (maxVol: number) => ({\n    type: SET_MAXVOL,\n    maxVol\n});\n","import React from 'react';\nimport RecordingDot from \"./RecordingDot\";\nimport {connect} from \"react-redux\";\nimport {deleteCompetitor, resetCompetitor, startCompetitor} from \"../actions\";\nimport {getRating} from \"../utils/competitionUtils\";\n\nfunction CompetitorTableRow(props) {\n    const competitorKey = props.competitor;\n    const competitor = props.competitors.byId[competitorKey];\n    return (\n        <tr key={competitorKey} className={props.addClass}>\n            <td>\n                <RecordingDot isActive={competitorKey === props.activeCompetitor}/>\n            </td>\n            <td>{competitorKey}</td>\n            <td>{(props.ratings && props.ratings.hasOwnProperty(competitorKey)) ? props.ratings[competitorKey].toFixed(4) : '–'}</td>\n            <td>{competitor.timeLeft ? (competitor.timeLeft / 1000).toFixed(3) : '–'}</td>\n            <td>\n                <input type=\"button\" className=\"form-control btn btn-info\" value=\"Start\"\n                       onClick={() => props.dispatch(startCompetitor(competitorKey, props.measureDuration))}/>\n            </td>\n            <td>\n                <input type=\"button\" className=\"form-control btn btn-warning\" value=\"Reset\"\n                       onClick={() => props.dispatch(resetCompetitor(competitorKey))}/>\n            </td>\n            <td>\n                <input type=\"button\" className=\"form-control btn btn-danger\" value=\"Delete\"\n                       onClick={() => props.dispatch(deleteCompetitor(competitorKey))}/>\n            </td>\n        </tr>\n    );\n}\n\nconst mapStateToProps = state => ({\n    competitors: state.voting.competitors,\n    activeCompetitor: state.voting.activeCompetitor,\n    ratings: state.voting.ratings,\n    measureDuration: state.administration.duration\n});\n\nexport default connect(mapStateToProps)(CompetitorTableRow)\n","import React, {Component} from 'react'\nimport CompetitorTableRow from \"./CompetitorTableRow\";\nimport {connect} from \"react-redux\";\nimport {getLeader} from \"../utils/competitionUtils\";\n\nclass CompetitionTable extends Component {\n    render() {\n        return (\n            <div>\n                Leading competitor is displayed red.\n                <table className=\"table table-dark   table-striped table-hover\">\n                    <thead>\n                    <tr>\n                        <td>Status</td>\n                        <td>Name</td>\n                        <td>Rating</td>\n                        <td>Time left</td>\n                        <td>Start</td>\n                        <td>Reset</td>\n                        <td>Delete</td>\n                    </tr>\n                    </thead>\n                    <tbody>\n                    {this.props.competitors.byId && Object.keys(this.props.competitors.byId).length > 0 && Object.keys(this.props.competitors.byId).map(\n                        key =>\n                            <React.Fragment key={key}>\n                                <CompetitorTableRow competitor={key} addClass={((key === getLeader()) ? 'text-danger' : '')} />\n                            </React.Fragment>)\n                    }\n                    </tbody>\n                </table>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    competitors: state.voting.competitors,\n});\n\nexport default connect(mapStateToProps)(CompetitionTable);\n","import React, {Component} from 'react'\nimport {connect} from \"react-redux\";\n\nclass CalibrationTable extends Component {\n    render() {\n        return (\n            <div>\n                Leading competitor is displayed red.\n                <table className=\"table table-striped table-hover\">\n                    <thead>\n                    <tr>\n                        <td>Status</td>\n                        <td>Name</td>\n                        <td>Duration</td>\n                        <td>measured min volume</td>\n                        <td>measured max volume</td>\n                        <td>measured average</td>\n                        <td>Rating</td>\n                        <td>Start</td>\n                        <td>Reset</td>\n                        <td>Delete</td>\n                    </tr>\n                    </thead>\n                    <tbody>\n                    {this.props.calibrationCompetitors && Object.keys(this.props.calibrationCompetitors).length > 0 && Object.keys(this.props.calibrationCompetitors).map(\n                        competitorKey =>\n                            <React.Fragment key={competitorKey}>\n                                {/*<CalibrationCompetitorTableRow competitor={competitor} addClass={((competitor === getLeader()) ? 'text-danger' : '')} />*/}\n                            </React.Fragment>)\n                    }\n                    </tbody>\n                </table>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    calibrationCompetitors: state.voting.calibrationCompetitors,\n});\n\nexport default connect(mapStateToProps)(CalibrationTable)\n","import Competitor from './Competitor';\nimport CalibrationCompetitor from \"./CalibrationCompetitor\";\n\nclass _Competition {\n    constructor() {\n        if (!_Competition.instance) {\n\n            this.reset();\n\n            _Competition.instance = this;\n        }\n        return _Competition.instance;\n    }\n\n    reset() {\n        this.competitors = [];\n        this._duration = 10000;\n        this.calibrationCompetitors = [];\n        this.maxVol = 1;\n        this.stateCallbacks = [];\n    }\n\n    /**\n     *\n     * @param {Competitor} competitor\n     */\n    addCompetitor(competitor) {\n        this.competitors.push(competitor);\n    }\n\n    /**\n     *\n     * @param {CalibrationCompetitor} competitor\n     */\n    addCalibrationCompetitor(competitor) {\n        this.calibrationCompetitors.push(competitor);\n    }\n\n    get duration() {\n        return this._duration;\n    }\n\n    set duration(value) {\n        this._duration = parseInt(value, 10);\n    }\n\n    update() {\n        this.stateCallbacks.forEach(function (cb) {\n            if (cb) {\n                cb();\n            }\n        })\n    }\n\n    /**\n     *\n     * @param {string} name\n     * @returns {boolean}\n     */\n    isCompetitorNameAlreadyExists(name) {\n        let exists = false;\n        this.competitors.forEach(function (comp) {\n            if (name === comp.name) {\n                exists = true;\n            }\n        });\n        return exists;\n    }\n\n    /**\n     *\n     * @param name\n     * @returns {boolean}\n     */\n    isCalibrationCompetitorNameAlreadyExists(name) {\n        let exists = false;\n        this.calibrationCompetitors.forEach(function (comp) {\n            if (name === comp.name) {\n                exists = true;\n            }\n        });\n        return exists;\n    }\n\n    removeCompetitor(competitor) {\n        this.competitors.forEach(function (comp, index, comps) {\n            if (competitor === comp) {\n                comps.splice(index, 1);\n            }\n        });\n        this.update();\n    }\n\n    removeCalibrationCompetitor(competitor) {\n        this.calibrationCompetitors.forEach(function (comp, index, comps) {\n            if (competitor === comp) {\n                comps.splice(index, 1);\n            }\n        });\n        this.update();\n    }\n\n\n    /**\n     *\n     * @returns {Competitor}\n     */\n    getActiveCompetitor() {\n        let activeCompetitor = null;\n        this.competitors.forEach(function (comp) {\n            if (comp.isActive) {\n                activeCompetitor = comp;\n            }\n        });\n        return activeCompetitor;\n    }\n\n    getActiveCalibrationCompetitor() {\n        let activeCompetitor = null;\n        this.calibrationCompetitors.forEach(function (comp) {\n            if (comp.isActive) {\n                activeCompetitor = comp;\n            }\n        });\n        return activeCompetitor;\n    }\n\n    getLeader() {\n        let leadingCompetitor = null;\n        if (this.competitors[0]) {\n            leadingCompetitor = this.competitors[0];\n            this.competitors.forEach(function (comp, index, comps) {\n                if (comp.rating >= leadingCompetitor.rating) {\n                    leadingCompetitor = comp;\n                }\n            });\n        }\n        if (leadingCompetitor && leadingCompetitor.rating !== 0) {\n            return leadingCompetitor;\n        }\n        else {\n            return null;\n        }\n    }\n\n    isCalibrating() {\n        let calibrating = false;\n        this.calibrationCompetitors.forEach(function (comp) {\n            if (comp.isActive) {\n                calibrating = true;\n            }\n        });\n        return calibrating;\n    }\n\n    dumpToLocalStorage() {\n        localStorage.setItem('competition', JSON.stringify(this));\n    }\n\n    getJsonDateUri() {\n        let str = JSON.stringify(this, null, '\\t');\n        return 'data:application/json;charset=utf-8,' + encodeURIComponent(str);\n    }\n\n    /**\n     *\n     * @param selectorFiles FileList\n     */\n    reviveFromFileList(selectorFiles) {\n        let file = selectorFiles[0];\n        let reader = new FileReader();\n        reader.onload = function (e) {\n            let comp = JSON.parse(e.target.result);\n            if (comp != null) {\n                let callbacks = this.stateCallbacks;\n                this.revive( comp );\n                this.dumpToLocalStorage();\n                this.stateCallbacks = callbacks;\n                this.update();\n            }\n        }.bind(this);\n        reader.readAsText(file);\n    }\n\n    /**\n     *\n     * @param data\n     * @returns {_Competition}\n     */\n    revive(data) {\n        this.reset();\n        this._duration = data._duration;\n        this.maxVol = data.maxVol;\n        data.competitors.forEach((comp) => {\n            let newComp = new Competitor();\n            newComp.revive(comp);\n            this.addCompetitor(newComp);\n        });\n        data.calibrationCompetitors.forEach((comp) => {\n            let newComp = new CalibrationCompetitor();\n            newComp.revive(comp);\n            this.addCalibrationCompetitor(newComp);\n        });\n        this.update();\n    }\n\n}\n\nconst Competition = new _Competition();\n\nexport default Competition\n","import React, {Component} from 'react';\nimport CompetitionTable from \"../components/CompetitionTable\";\nimport CalibrationTable from \"../components/CalibrationTable\";\nimport Competition from '../entities/Competition';\nimport CalibrationCompetitor from \"../entities/CalibrationCompetitor\";\nimport {connect} from \"react-redux\";\nimport {addCompetitor, setDuration, setMaxvol, updateAllRatings} from \"../actions\";\nimport {doesCompetitorNameAlreadyExists} from \"../utils/competitionUtils\";\n\n\nclass Admin extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            addCompetitorInput: '',\n            addCalibrationCompetitorInput: 'Calibration 1',\n            durationInput: props.duration ? props.duration / 1000 : 10,\n            maxVolInput: props.maxVol,\n        };\n\n        this.addCompetitor = this.addCompetitor.bind(this);\n        this.addCalibrationCompetitor = this.addCalibrationCompetitor.bind(this);\n//        this.changeSettings = this.changeSettings.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n\n    }\n\n    keyboardFunction(event) {\n        if (event.keyCode === 71) {\n            this.setState(\n                {\n                    record: 'def'\n                }\n            )\n        }\n    }\n\n    componentDidMount() {\n        document.title = \"Admin | Applaus-O-Meter\";\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        Competition.dumpToLocalStorage();\n    }\n\n    addCompetitor(event) {\n        event.preventDefault();\n        let name = this.state.addCompetitorInput;\n        if (!(name === \"\") && !doesCompetitorNameAlreadyExists(name)) {\n            this.props.dispatch(addCompetitor(name));\n        }\n    }\n\n    addCalibrationCompetitor(event) {\n        event.preventDefault();\n        let name = this.state.addCalibrationCompetitorInput;\n        if (!this.state.competition.isCalibrationCompetitorNameAlreadyExists(name) && !(name === \"\")) {\n            let competition = this.state.competition;\n            competition.addCalibrationCompetitor(new CalibrationCompetitor(name));\n            this.setState({\n                competition: competition\n            });\n        }\n    }\n\n    // Deprecated\n    // changeSettings(event) {\n    //     event.preventDefault();\n    //     let competition = this.state.competition;\n    //     // competition.duration = this.state.durationInput * 1000;\n    //     competition.maxVol = parseFloat((this.state.maxVolInput).toString().replace(',', '.'));\n    //     this.setState({\n    //         competition: competition\n    //     });\n    // }\n\n    setDuration = () => {\n        this.props.dispatch(\n            setDuration(this.state.durationInput * 1000)\n        );\n    };\n\n    setMaxvol = () => {\n        this.props.dispatch(\n            setMaxvol(\n                parseFloat((this.state.maxVolInput).toString().replace(',', '.'))\n            )\n        );\n        this.props.dispatch(updateAllRatings());\n    };\n\n    handleChange(e) {\n        this.setState({[e.target.name]: e.target.value});\n    }\n\n\n    render() {\n        return (\n            <div className=\"container-fluid p-5\">\n\n                <header>\n                    <h2>Welcome to Applaus-O-Meter administration</h2>\n                    <p>To get started, add some competitors.</p>\n                </header>\n\n\n                <div id=\"settings\">\n                    <h3>Settings</h3>\n                    <form\n                        className=\"form-group\"\n                        onSubmit={e => {\n                            e.preventDefault()\n                        }}\n                    >\n                        <div className=\"row\">\n                            <div className=\"col-2\">\n                                <label\n                                    htmlFor=\"durationInput\">Duration in\n                                    seconds<br/>(currently {this.props.duration / 1000} s)</label>\n                            </div>\n                            <div className=\"col-8\">\n                                <input type=\"text\" className=\"form-control w-100\"\n                                       name=\"durationInput\" value={this.state.durationInput}\n                                       placeholder=\"duration\"\n                                       onChange={this.handleChange}/>\n                            </div>\n                            <div className=\"col-2\">\n                                <input type=\"button\" className=\"form-control btn btn-success\"\n                                       value=\"Set!\" onClick={this.setDuration}/>\n                            </div>\n                        </div>\n                        <div className=\"row\">\n                            <div className=\"col-2\">\n                                <label\n                                    htmlFor=\"maxVolInput\">Max volume for rating, in range\n                                    [0;1]<br/>(currently: {this.props.maxVol})</label>\n                            </div>\n                            <div className=\"col-8\">\n                                <input type=\"text\" className=\"form-control w-100\"\n                                       name=\"maxVolInput\" value={this.state.maxVolInput}\n                                       onChange={this.handleChange}/>\n                            </div>\n                            <div className=\"col-2\">\n                                <input type=\"button\" className=\"form-control btn btn-success\"\n                                       value=\"Set!\" onClick={this.setMaxvol}/>\n                            </div>\n                        </div>\n                    </form>\n                </div>\n\n\n                <div id=\"competitors\" className=\"border border-secondary p-2 bg-primary rounded\">\n                    <h3>Competitors</h3>\n                    <form\n                        className=\"row form-group\"\n                        onSubmit={e => {\n                            e.preventDefault()\n                        }}\n                    >\n                        <div className=\"col-10\">\n                            <input type=\"text\" className=\"form-control w-100\"\n                                   name=\"addCompetitorInput\" value={this.state.addCompetitorInput}\n                                   placeholder=\"Competitor name\"\n                                   onChange={this.handleChange}/>\n                        </div>\n                        <div className=\"col-2\">\n                            <input type=\"button\" className=\"form-control btn btn-success\"\n                                   value=\"Add!\" onClick={this.addCompetitor}/>\n                        </div>\n                    </form>\n\n                    <div>\n                        <CompetitionTable competition={this.state.competition}/>\n                    </div>\n                </div>\n\n\n                <div id=\"calibration\" className=\"my-4\">\n                    <h3>Calibration</h3>\n                    <form\n                        className=\"row form-group\"\n                        onSubmit={e => {\n                            e.preventDefault()\n                        }}\n                    >\n                        <div className=\"col-10\">\n                            <input type=\"text\" className=\"form-control w-100\"\n                                   name=\"addCalibrationCompetitorInput\"\n                                   value={this.state.addCalibrationCompetitorInput}\n                                   placeholder=\"Competitor name\"\n                                   onChange={this.handleChange}/>\n                        </div>\n                        <div className=\"col-2\">\n                            <input type=\"submit\" className=\"form-control btn btn-success\"\n                                   value=\"Add!\"/>\n                        </div>\n                    </form>\n                    <div>\n                        <CalibrationTable competition={this.state.competition}/>\n                    </div>\n                </div>\n\n                <div>\n                    {/*<CompetitionJsonExportBtn competition={this.state.competition}/>*/}\n                    {/*<CompetitionJsonImportBtn competition={this.state.competition}/>*/}\n                </div>\n\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    duration: state.administration.duration,\n    maxVol: state.administration.maxVol\n});\n\nexport default connect(mapStateToProps)(Admin)\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport {SvgLoader, SvgProxy} from 'react-svgmt';\nimport fish from '../assets/fish.svg';\n\n\nfunction Fishmeter(props) {\n    let rotation = parseFloat(props.rating) * 180;\n    return (\n        <div className=\"d-flex flex-column-reverse p-4\">\n            <SvgLoader path={fish} height=\"500px\">\n                <SvgProxy selector=\"#svgmeter\" transform={\"rotate(\" + rotation + \" 250.1 83.1)\"}/>\n            </SvgLoader>\n        </div>\n    );\n}\n\nexport default Fishmeter;\n","import React from \"react\";\nimport RecordingDot from \"./RecordingDot\";\nimport {Wobble} from \"react-motions\";\nimport {connect} from \"react-redux\";\nimport {getLeader} from \"../utils/competitionUtils\";\n\nfunction CompetitorCard(props) {\n    console.log(\"competitor: \" + props.competitorKey);\n    console.log(\"competitors: \");\n    console.log(props.competitors);\n    const competitor = props.competitors[props.competitorKey];\n\n    let competitorNameClass = \"text-primary\";\n    let cardBgClass = \"bg-info\";\n    let ratingClass = \"text-secondary\";\n    if (getLeader() === props.competitorKey) {\n        cardBgClass = \"bg-success\";\n        competitorNameClass = \"text-secondary\";\n        ratingClass = \"text-secondary\";\n    }\n    let bounce = false;\n    if (competitor.stoppedRecording > (Math.floor(Date.now()) - 1 * 1000)) {\n        bounce = true;\n    }\n    let card =\n        <div className={\"card text-white text-center \" + cardBgClass}>\n            <div className=\"card-body\">\n                <div>\n                    <RecordingDot isActive={props.competitorKey === props.activeCompetitor}/>\n                </div>\n                <h2 className={\"card-title \" + competitorNameClass}>{competitor.name}</h2>\n                <div className=\"card-text\">\n                    <p>\n                        <span className=\"timeLeftText\">Verbleibende Zeit:</span>\n                        <br/>\n                        {parseFloat(((competitor.timeLeft !== null) ? competitor.timeLeft : props.duration) / 1000).toFixed(1)} Sekunden\n                    </p>\n                    <p className={\"btn btn-primary ratingText \" + ratingClass}>\n                        Wertung:&nbsp;\n                        <span className=\"text-white\">\n                            {\n                                props.ratings && props.ratings.hasOwnProperty(props.competitorKey)\n                                    ? parseFloat(props.ratings[props.competitorKey] * 10).toFixed(2)\n                                    : \"–\"\n                            }\n                        </span>\n                    </p>\n                </div>\n            </div>\n        </div>;\n    if (bounce) {\n        return (\n            <div className=\"col-3\" key={props.competitorKey}>\n                <Wobble>\n                    {card}\n                </Wobble>\n            </div>\n        )\n    } else {\n        return (\n            <div className=\"col-3\" key={props.competitorKey}>\n                {card}\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => ({\n    competitors: state.voting.competitors.byId,\n    ratings: state.voting.ratings,\n    activeCompetitor: state.voting.activeCompetitor,\n    duration: state.administration.duration\n});\n\nexport default connect(mapStateToProps)(CompetitorCard)\n","import React from 'react';\nimport {connect} from \"react-redux\";\nimport CompetitorCard from \"./CompetitorCard\";\n\n\nfunction CompetitionCards(props) {\n    return (\n        <div id=\"competitionCardContainer\" className=\"container-fluid px-5\">\n            <div className=\"row justify-content-center\">\n                {props.competitorKeys.map(\n                    competitorKey => <CompetitorCard key={competitorKey} competitorKey={competitorKey}/>\n                )}\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    competitorKeys: state.voting.competitors.allIds,\n});\n\nexport default connect(mapStateToProps)(CompetitionCards)\n\n\n","import React, {Component} from 'react';\nimport RecordingDot from \"./RecordingDot\";\n\n\nfunction CalibrationCard(props) {\n    const competitor = props.competitor;\n    let cardBgClass = \"bg-info\";\n    if( props.competition.getLeader() === competitor ) {\n        cardBgClass = \"bg-success\";\n    }\n    return (\n        <div className=\"col-3\" key={competitor.name}>\n            <div className={\"card text-white text-center \" + cardBgClass}>\n                <div className=\"card-body\">\n                    <div>\n                        <RecordingDot isActive={competitor.isActive}/>\n                    </div>\n                    <h2 className=\"card-title text-primary\">{competitor.name}</h2>\n                    <div className=\"card-text\">\n                        <p className=\"h2\">Verbleibende Zeit:<br/>{parseFloat(competitor.timeLeft / 1000).toFixed(1)} Sekunden</p>\n                        <p className=\"h2\">Maximum: {parseFloat(competitor.getMax()).toFixed(2)}</p>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nclass CalibrationCards extends Component {\n    render() {\n        return (\n            <div id=\"competitionCardContainer\" className=\"container-fluid\">\n                <div className=\"row justify-content-center\">\n                    <h3 className=\"bg-danger text-white text-center w-100 p-2\">CALIBRATION</h3>\n                    {this.props.competition.calibrationCompetitors.map(\n                        competitor => <CalibrationCard competition={this.props.competition} competitor={competitor} />\n                    )}\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default CalibrationCards\n\n\n","import React from \"react\";\nimport {SvgLoader, SvgProxy} from 'react-svgmt';\nimport castle from '../assets/castle.svg';\nimport useWindowSize from 'react-use/lib/useWindowSize'\nimport Confetti from 'react-confetti'\n\nfunction Castlemeter(props) {\n    const {width, height} = useWindowSize()\n    return (\n        <div className=\"d-flex flex-column-reverse p-4\">\n            {/*https://www.npmjs.com/package/react-confetti*/}\n            <Confetti\n                width={width}\n                height={height}\n            />\n            <SvgLoader path={castle} height=\"500px\">\n                <SvgProxy selector=\"#svgmeter\"/>\n            </SvgLoader>\n        </div>\n    );\n}\n\nexport default Castlemeter;\n","import React, {Component} from \"react\";\nimport Fishmeter from \"../meters/Fishmeter\";\nimport CompetitionCards from \"../components/CompetitionCards\";\nimport CalibrationCards from \"../components/CalibrationCards\";\nimport Competition from \"../entities/Competition\";\nimport '../styles/frontend.css';\nimport {connect} from \"react-redux\";\nimport Castlemeter from \"../meters/Castlemeter\";\n\nclass View extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            isCalibrating: false,\n            rating: 0.0\n        };\n    }\n\n    componentDidMount() {\n        document.title = \"View | Applaus-O-Meter\";\n    }\n\n    render() {\n        let rating = 0;\n        const activeCompetitor = this.props.activeCompetitor;\n        if (activeCompetitor) {\n            rating = this.props.ratings[activeCompetitor];\n        }\n        return (\n            <div id=\"frontend\" className=\"container-fluid py-2 rounded-0\">\n                <div id=\"graphic\" className=\"d-flex justify-content-center\">\n                    <Castlemeter rating={rating}/>\n                </div>\n                <div id=\"information\">\n                    {\n                        this.state.isCalibrating ?\n                            <CalibrationCards/> :\n                            <CompetitionCards/>\n                    }\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    activeCompetitor: state.voting.activeCompetitor,\n    ratings: state.voting.ratings,\n});\n\nexport default connect(mapStateToProps)(View)\n","import React from \"react\";\nimport {connect} from \"react-redux\";\n\n// import logo from './fishtival_logo_yellow_white.svg';\n\nfunction Heading(props) {\n    return(\n        <div className=\"container-fluid pt-2\">\n            <h2 className=\"text-center text-warning\">Applaus-O-Meter</h2>\n            <h1 id=\"mainHeading\" className=\"text-center text-white py-1\">{props.title}</h1>\n            {/*<h1 className=\"text-center text-white bg-primary rounded p-1\">*/}\n                {/*<img src={logo} height=\"75\"/>*/}\n            {/*</h1>*/}\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    title: state.administration.title\n});\n\nexport default connect(mapStateToProps)(Heading)\n","import React from 'react';\nimport {connect} from \"react-redux\";\n\n\nfunction Footer(props) {\n    return(\n        <footer className=\"container-fluid py-1 px-5 text-right\">\n            Applaus-O-Meter | {props.title} | mail@yorickreum.de\n        </footer>\n    );\n}\n\nconst mapStateToProps = state => ({\n    title: state.administration.title\n});\n\nexport default connect(mapStateToProps)(Footer)\n","import React, {Component} from 'react';\nimport ReactDOM from 'react-dom';\nimport {PersistGate} from 'redux-persist/integration/react'\nimport {HashRouter, Link, Route, Switch} from 'react-router-dom';\nimport Admin from './screens/Admin';\nimport registerServiceWorker from './registerServiceWorker';\nimport './styles/index.css'\nimport View from \"./screens/View\";\nimport Heading from \"./components/Heading\";\nimport Footer from \"./components/Footer\"\nimport {Provider} from \"react-redux\";\nimport {persistor, store} from \"./store\";\n\nclass Areas extends Component {\n\n    componentDidMount() {\n        document.title = \"Applaus-O-Meter\";\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                <div className=\"container\">\n                    <div className=\"row justify-content-center\">\n                        <div className=\"col-4\">\n                            <div className=\"card h-100 text-white text-center bg-warning\">\n                                <div className=\"card-body py-5\">\n                                    <h2 className=\"card-title text-primary pb-3\">Administration</h2>\n                                    <div className=\"card-text\">\n                                        <ul className=\"text-left\">\n                                            <li>Teilnehmner anlegen und verwalten</li>\n                                            <li>Abstimmungen starten</li>\n                                        </ul>\n                                        <Link to=\"/admin\" className=\"btn btn-primary\">Hier entlang &#8680;</Link>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"col-4\">\n                            <div className=\"card h-100 text-white text-center bg-warning\">\n                                <div className=\"card-body py-5\">\n                                    <h2 className=\"card-title text-primary pb-3\">Abstimmung</h2>\n                                    <div className=\"card-text\">\n                                        <p>\n                                            Zum Beispiel in neuem Fenster öffnen und auf Beamer zeigen.\n                                        </p>\n                                        <Link to=\"/view\" className=\"btn btn-primary\">Hier entlang &#8680;</Link>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </React.Fragment>\n        )\n    }\n}\n\nReactDOM.render(\n    <Provider store={store}>\n        <PersistGate loading={null} persistor={persistor}>\n            <Heading/>\n            <HashRouter>\n                <Switch>\n                    <Route exact path=\"/\" component={Areas}/>\n                    <Route path=\"/admin\" component={Admin}/>\n                    <Route path=\"/view\" component={View}/>\n                </Switch>\n            </HashRouter>\n            <Footer/>\n        </PersistGate>\n    </Provider>,\n    document.getElementById('root')\n);\n\nregisterServiceWorker();\n"],"sourceRoot":""}