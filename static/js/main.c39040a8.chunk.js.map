{"version":3,"sources":["assets/castle-gradient.svg","components/RecordingDot.js","utils/crosstabSync.js","reducers.js","constants.js","store.js","utils/competitionUtils.js","utils/volumemeterUtils.js","actions.js","components/CompetitorTableRow.js","components/CompetitionTable.js","entities/Competition.js","screens/Admin.js","components/ReactMicExample.js","registerServiceWorker.js","components/CompetitorCard.js","components/CompetitionCards.js","meters/Castlemeter.js","components/Footer.js","screens/View.js","components/Heading.js","index.js"],"names":["module","exports","__webpack_require__","p","recordingDotStyle","dot","textShadow","RecordingDot","props","activeClass","isActive","react_default","a","createElement","className","style","crosstabSync","store","persistConfig","crosstabConfig","blacklist","whitelist","keyPrefix","KEY_PREFIX","key","window","addEventListener","e","indexOf","oldValue","newValue","statePartial","JSON","parse","state","Object","keys","reduce","reducerKey","dispatch","payload","type","REHYDRATE","initialStates","control","showBlank","administration","title","maxVol","duration","voting","activeCompetitor","competitors","byId","allIds","calibrationCompetitors","ratings","combineReducers","arguments","length","undefined","_objectSpread","action","competitorKey","defineProperty","name","isVisible","startedRecording","stoppedRecording","levels","timeLefts","measureDuration","timeLeft","interval","concat","toConsumableArray","forEach","filter","value","rating","storage","persistedReducer","persistReducer","rootReducer","composeEnhancer","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","applyMiddleware","thunk","persistor","persistStore","getLeader","getState","leadingCompetitor","compKey","getRatingFromKey","competitor","getRatingFromVolume","pv","cv","volume","VolumemeterUtils","clipLevel","averaging","clipLag","classCallCheck","this","AudioContext","webkitAudioContext","audioContext","processor","createScriptProcessor","onaudioprocess","volumeAudioProcess","clipping","lastClip","connect","destination","checkClipping","performance","now","shutdown","disconnect","navigator","getUserMedia","webkitGetUserMedia","mozGetUserMedia","audio","mandatory","googEchoCancellation","googAutoGainControl","googNoiseSuppression","googHighpassFilter","optional","gotStream","didntGetStream","console","log","stream","createMediaStreamSource","event","x","buf","inputBuffer","getChannelData","sum","i","Math","abs","rms","sqrt","max","showCompetitor","hideCompetitor","startRecording","volumemeter","recordValue","floor","Date","getVolume","saveValue","updateRating","clearInterval","stopRecording","updateAllRatings","setDuration","setMaxvol","CompetitorTableRow","_this","possibleConstructorReturn","getPrototypeOf","call","handleShow","setState","showModal","changeVisibility","_this2","data","index","level","Fragment","addClass","components_RecordingDot","hasOwnProperty","toFixed","Form_default","Check","checked","onChange","Button_default","variant","onClick","Modal","show","size","onHide","width","centered","Header","closeButton","Title","color","Body","es6","height","strokeDasharray","dataKey","cursor","fill","y","stroke","timestamp","parseInt","setInterval","startCompetitor","resetCompetitor","deleteCompetitor","Component","CompetitionTable","map","components_CompetitorTableRow","Competition","_Competition","instance","reset","_duration","stateCallbacks","push","cb","exists","comp","comps","splice","update","calibrating","localStorage","setItem","stringify","str","encodeURIComponent","selectorFiles","file","reader","FileReader","onload","target","result","callbacks","revive","dumpToLocalStorage","bind","readAsText","newComp","Competitor","addCompetitor","CalibrationCompetitor","addCalibrationCompetitor","Admin","React","durationInput","parseFloat","maxVolInput","toString","replace","addCompetitorInput","addCalibrationCompetitorInput","assertThisInitialized","handleChange","keyCode","record","document","prevProps","prevState","preventDefault","doesCompetitorNameAlreadyExists","competition","isCalibrationCompetitorNameAlreadyExists","react_router_dom","to","id","htmlFor","onSubmit","placeholder","components_CompetitionTable","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","error","competitorNameClass","cardBgClass","ratingClass","bounce","card","react_motions_min","competitorKeys","components_CompetitorCard","CastlemeterComponent","context","checkRating","snapshot","shift","react_confetti_min_default","numberOfPieces","gravity","wind","recycle","canvasRef","react_svgmt","path","castle","selector","transform","_useWindowSize","useWindowSize","Castlemeter_CastlemeterComponent","assign","Helmet","meters_Castlemeter","components_CompetitionCards","components_Footer","Areas","ReactDOM","render","es","integration_react","loading","charSet","components_Heading","react_router","exact","component","View","getElementById","URL","process","origin","fetch","response","status","headers","get","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.c39040a8.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/castle-gradient.0a33ba1b.svg\";","import React from \"react\";\n\nconst recordingDotStyle = {\n    dot: {\n        textShadow: \"0 0 8px #404040\",\n    }\n};\n\nfunction RecordingDot(props) {\n    const isActive = props.isActive;\n    const activeClass = isActive ? \"text-danger\" : \"text-info\";\n    return <span className={activeClass} style={recordingDotStyle.dot}>&#9673;</span>;\n}\n\nexport default RecordingDot\n","// @TODO\n// update repo: https://github.com/rt2zz/redux-persist-crosstab\n\n// @flow\nimport {KEY_PREFIX, REHYDRATE} from 'redux-persist/lib/constants'\nimport type {PersistConfig} from 'redux-persist/es/types'\nimport type {Store} from 'redux'\n\ntype CrosstabConfig = {\n    blacklist?: ?Array<string>,\n    keyPrefix?: ?string,\n    whitelist?: ?Array<string>,\n}\n\nfunction crosstabSync(store: Store, persistConfig?: PersistConfig, crosstabConfig?: CrosstabConfig) {\n    const blacklist: ?Array<string> = (crosstabConfig && crosstabConfig.blacklist) ? crosstabConfig.blacklist : null;\n    const whitelist: ?Array<string> = (crosstabConfig && crosstabConfig.whitelist) ? crosstabConfig.whitelist : null;\n    const keyPrefix: string = (crosstabConfig && crosstabConfig.keyPrefix) ? crosstabConfig.keyPrefix : KEY_PREFIX;\n\n    const {key}: { key: string } = persistConfig;\n\n    window.addEventListener('storage', handleStorageEvent, false)\n\n    function handleStorageEvent(e) {\n        if (e.key && e.key.indexOf(keyPrefix) === 0) {\n            if (e.oldValue === e.newValue) {\n                return\n            }\n\n            const statePartial: { [string]: string } = JSON.parse(e.newValue)\n\n            /* eslint-disable flowtype/no-weak-types */\n            const state: Object = Object.keys(statePartial).reduce((state, reducerKey) => {\n                /* eslint-enable flowtype/no-weak-types */\n                if (whitelist && whitelist.indexOf(reducerKey) === -1) {\n                    return state\n                }\n                if (blacklist && blacklist.indexOf(reducerKey) !== -1) {\n                    return state\n                }\n\n                state[reducerKey] = JSON.parse(statePartial[reducerKey])\n\n                return state\n            }, {})\n\n            store.dispatch({\n                key,\n                payload: state,\n                type: REHYDRATE,\n            })\n        }\n    }\n}\n\nexport default crosstabSync\n","import {combineReducers} from 'redux'\n\nimport {\n    ADD_COMPETITOR,\n    DELETE_COMPETITOR,\n    HIDE_COMPETITOR,\n    RESET_COMPETITOR,\n    SAVE_VALUE,\n    SET_DURATION,\n    SET_MAXVOL,\n    SET_TITLE,\n    SHOW_COMPETITOR,\n    START_RECORDING,\n    STOP_RECORDING,\n    UPDATE_RATING,\n    SWITCH_BLANK\n} from \"./constants\";\n\nconst initialStates = {\n    control: {\n        showBlank: false\n    },\n    administration: {\n        title: 'Slammen im Schloss V',\n        maxVol: 1,\n        duration: 10000\n    },\n    voting: {\n        activeCompetitor: null,\n        competitors: {\n            byId: {},\n            allIds: []\n        },\n        calibrationCompetitors: {\n            byId: {},\n            allIds: []\n        },\n        ratings: {}\n    }\n};\n\nconst administration = (state = initialStates.administration, action) => {\n    switch (action.type) {\n        case SET_TITLE:\n            return {\n                ...state,\n                title: action.title\n            };\n        case SET_DURATION:\n            return {\n                ...state,\n                duration: action.duration\n            };\n        case SET_MAXVOL:\n            return {\n                ...state,\n                maxVol: action.maxVol\n            };\n        default:\n            return state;\n    }\n};\n\nconst control = (state = initialStates.control, action) => {\n    switch (action.type) {\n        case SWITCH_BLANK:\n            return {\n                ...state,\n                showBlank: !state.showBlank,\n            };\n        default:\n            return state;\n    }\n};\n\nconst voting = (state = initialStates.voting, action) => {\n    let ratings;\n    switch (action.type) {\n        case ADD_COMPETITOR:\n            return {\n                ...state,\n                activeCompetitor: (state.activeCompetitor === action.competitorKey ? null : state.activeCompetitor),\n                competitors: {\n                    byId: {\n                        ...state.competitors.byId,\n                        [action.competitorKey]: {\n                            name: action.competitorKey,\n                            isVisible: true,\n                            startedRecording: null,\n                            stoppedRecording: null,\n                            levels: [],\n                            timeLefts: [],\n                            measureDuration: null,\n                            timeLeft: null,\n                            interval: null,\n                        }\n                    },\n                    allIds: [...state.competitors.allIds, action.competitorKey]\n                }\n            };\n        case DELETE_COMPETITOR:\n            const byId = {...state.competitors.byId};\n            byId[action.competitorKey] = undefined;\n            Object.keys(byId).forEach(key => byId[key] === undefined ? delete byId[key] : '');\n            ratings = {...state.ratings};\n            ratings[action.competitorKey] = undefined;\n            Object.keys(ratings).forEach(key => ratings[key] === undefined ? delete ratings[key] : '');\n            return {\n                ...state,\n                competitors: {\n                    ...state.competitors,\n                    byId: {\n                        ...byId\n                    },\n                    allIds: [\n                        ...state.competitors.allIds.filter(key => key !== action.competitorKey),\n                    ]\n                },\n                ratings\n            };\n        case START_RECORDING:\n            return {\n                ...state,\n                activeCompetitor: action.competitorKey,\n                competitors: {\n                    ...state.competitors,\n                    byId: {\n                        ...state.competitors.byId,\n                        [action.competitorKey]: {\n                            ...state.competitors.byId[action.competitorKey],\n                            interval: action.interval,\n                            measureDuration: action.measureDuration,\n                            startedRecording: action.startedRecording\n                        }\n                    }\n                }\n            };\n        case RESET_COMPETITOR:\n            ratings = {...state.ratings};\n            ratings[action.competitorKey] = undefined;\n            Object.keys(ratings).forEach(key => ratings[key] === undefined ? delete ratings[key] : '');\n            return {\n                ...state,\n                activeCompetitor: (state.activeCompetitor === action.competitorKey ? null : state.activeCompetitor),\n                competitors: {\n                    ...state.competitors,\n                    byId: {\n                        ...state.competitors.byId,\n                        [action.competitorKey]: {\n                            ...state.competitors.byId[action.competitorKey],\n                            isVisible: true,\n                            startedRecording: null,\n                            stoppedRecording: null,\n                            levels: [],\n                            timeLefts: [],\n                            measureDuration: null,\n                            timeLeft: null,\n                            interval: null,\n                        }\n                    }\n                },\n                ratings\n            };\n        case SHOW_COMPETITOR:\n            return {\n                ...state,\n                competitors: {\n                    ...state.competitors,\n                    byId: {\n                        ...state.competitors.byId,\n                        [action.competitorKey]: {\n                            ...state.competitors.byId[action.competitorKey],\n                            isVisible: true,\n                        }\n                    }\n                }\n            };\n        case HIDE_COMPETITOR:\n            return {\n                ...state,\n                competitors: {\n                    ...state.competitors,\n                    byId: {\n                        ...state.competitors.byId,\n                        [action.competitorKey]: {\n                            ...state.competitors.byId[action.competitorKey],\n                            isVisible: false,\n                        }\n                    }\n                }\n            };\n        case SAVE_VALUE:\n            return {\n                ...state,\n                competitors: {\n                    ...state.competitors,\n                    byId: {\n                        ...state.competitors.byId,\n                        [action.competitorKey]: {\n                            ...state.competitors.byId[action.competitorKey],\n                            timeLeft: action.timeLeft,\n                            levels: [\n                                ...state.competitors.byId[action.competitorKey].levels,\n                                action.value\n                            ],\n                            timeLefts: [\n                                ...state.competitors.byId[action.competitorKey].timeLefts,\n                                action.timeLeft\n                            ],\n                        }\n                    }\n                }\n            };\n        case STOP_RECORDING:\n            return {\n                ...state,\n                activeCompetitor: null,\n                competitors: {\n                    ...state.competitors,\n                    byId: {\n                        ...state.competitors.byId,\n                        [action.competitorKey]: {\n                            ...state.competitors.byId[action.competitorKey],\n                            timeLeft: 0,\n                            stoppedRecording: action.stoppedRecording,\n                        }\n                    }\n                }\n            };\n        case UPDATE_RATING:\n            return {\n                ...state,\n                ratings: {\n                    ...state.ratings,\n                    [action.competitorKey]: action.rating\n                }\n            };\n        default:\n            return state;\n    }\n};\n\nexport default combineReducers({\n    control,\n    administration,\n    voting\n})\n","export const ADD_COMPETITOR = 'ADD_COMPETITOR';\nexport const DELETE_COMPETITOR = 'DELETE_COMPETITOR';\nexport const RESET_COMPETITOR = 'RESET_COMPETITOR ';\nexport const SHOW_COMPETITOR = 'SHOW_COMPETITOR';\nexport const HIDE_COMPETITOR = 'HIDE_COMPETITOR';\n\nexport const START_RECORDING = 'START_RECORDING';\nexport const STOP_RECORDING = 'STOP_RECORDING';\nexport const RECORD_VALUE = 'RECORD_VALUE';\nexport const SAVE_VALUE = 'SAVE_VALUE';\nexport const UPDATE_RATING = 'UPDATE_RATING';\nexport const UPDATE_ALL_RATINGS = 'UPDATE_ALL_RATINGS';\n\nexport const SET_TITLE = 'SET_TITLE';\nexport const SET_DURATION = 'SET_DURATION';\nexport const SET_MAXVOL = 'SET_MAXVOL';\n\nexport const SWITCH_BLANK = 'SWITCH_BLANK';\n","import {applyMiddleware, compose, createStore} from \"redux\";\nimport {persistReducer, persistStore} from 'redux-persist'\nimport storage from 'redux-persist/lib/storage' // defaults to localStorage for web\nimport crosstabSync from \"./utils/crosstabSync\"\nimport rootReducer from \"./reducers\";\nimport thunk from \"redux-thunk\";\n\nconst persistConfig = {\n    key: 'root',\n    storage,\n};\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer)\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nexport const store = createStore(\n    persistedReducer,\n    composeEnhancer(applyMiddleware(thunk)),\n);\n\ncrosstabSync(store, persistConfig);\n\nexport const persistor = persistStore(store);\n","import {store} from \"../store\";\n\n/**\n *\n * @param name\n * @returns {boolean}\n */\nexport function doesCalibrationCompetitorNameAlreadyExists(name) {\n    let exists = false;\n    store.getState().voting.calibrationCompetitors.forEach(function (comp) {\n        if (name === comp.name) {\n            exists = true;\n        }\n    });\n    return exists;\n}\n\n/**\n *\n * @param name\n * @returns {boolean}\n */\nexport function doesCompetitorNameAlreadyExists(name) {\n    let exists = false;\n    const competitors = store.getState().voting.competitors;\n    for (let key in competitors) {\n        if (competitors.hasOwnProperty(key)) {\n            if (name === key) {\n                exists = true;\n            }\n        }\n    }\n    return exists;\n}\n\nexport function getLeader() {\n    const competitors = store.getState().voting.competitors.allIds;\n    let leadingCompetitor = null;\n    if (competitors[0]) {\n        leadingCompetitor = competitors[0];\n        competitors.forEach(function (compKey) {\n            if (getRatingFromKey(compKey) >= getRatingFromKey(leadingCompetitor)) {\n                leadingCompetitor = compKey;\n            }\n        });\n    }\n    if (leadingCompetitor && getRatingFromKey(leadingCompetitor) !== 0) {\n        return leadingCompetitor;\n    } else {\n        return null;\n    }\n}\n\nexport function getRatingFromKey(competitorKey: string) {\n    const state = store.getState();\n    const competitor = state.voting.competitors.byId[competitorKey];\n    if (competitor.levels.length === 0) {\n        return 0;\n    } else {\n        let levelSum = competitor.levels.reduce((pv, cv) => pv + cv, 0);\n        const avgVol = (levelSum / competitor.levels.length);\n        return  getRatingFromVolume(avgVol);\n    }\n}\n\nexport function getRatingFromVolume(volume: number) {\n    const state = store.getState();\n    if (volume) {\n        return (volume / state.administration.maxVol);\n    }\n}\n","class VolumemeterUtils {\n\n    constructor(clipLevel, averaging, clipLag) {\n        let AudioContext = window.AudioContext || window.webkitAudioContext;\n        window.audioContext = new AudioContext();\n        window.processor = window.audioContext.createScriptProcessor(512);\n        window.processor.onaudioprocess = this.volumeAudioProcess;\n        window.processor.clipping = false;\n        window.processor.lastClip = 0;\n        window.processor.volume = 0;\n        window.processor.clipLevel = clipLevel || 0.98;\n        window.processor.averaging = averaging || 0.95;\n        window.processor.clipLag = clipLag || 750;\n\n        window.processor.connect(window.audioContext.destination);\n\n        window.processor.checkClipping =\n            function () {\n                if (!this.clipping)\n                    return false;\n                if ((this.lastClip + this.clipLag) < window.performance.now())\n                    this.clipping = false;\n                return this.clipping;\n            };\n\n        window.processor.shutdown =\n            function () {\n                this.disconnect();\n                this.onaudioprocess = null;\n            };\n\n        try {\n            // monkeypatch getUserMedia\n            navigator.getUserMedia =\n                navigator.getUserMedia ||\n                navigator.webkitGetUserMedia ||\n                navigator.mozGetUserMedia;\n\n            // ask for an audio input\n            navigator.getUserMedia(\n                {\n                    \"audio\": {\n                        \"mandatory\": {\n                            \"googEchoCancellation\": \"false\",\n                            \"googAutoGainControl\": \"false\",\n                            \"googNoiseSuppression\": \"false\",\n                            \"googHighpassFilter\": \"false\"\n                        },\n                        \"optional\": []\n                    },\n                }, this.gotStream, this.didntGetStream);\n        } catch (e) {\n            console.log('getUserMedia threw exception :' + e);\n        }\n\n    }\n\n    didntGetStream() {\n        console.log('Stream generation failed.');\n    }\n\n    gotStream(stream) {\n        // Create an AudioNode from the stream.\n        let mediaStreamSource = window.audioContext.createMediaStreamSource(stream);\n        mediaStreamSource.connect(window.processor);\n    }\n\n    volumeAudioProcess(event) {\n        var buf = event.inputBuffer.getChannelData(0);\n        var sum = 0;\n        var x;\n\n        // Do a root-mean-square on the samples: sum up the squares...\n        for (var i = 0; i < buf.length; i++) {\n            x = buf[i];\n            if (Math.abs(x) >= this.clipLevel) {\n                this.clipping = true;\n                this.lastClip = window.performance.now();\n            }\n            sum += x * x;\n        }\n\n        // ... then take the square root of the sum.\n        var rms = Math.sqrt(sum / buf.length);\n\n        // Now smooth this out with the averaging factor applied\n        // to the previous sample - take the max here because we\n        // want \"fast attack, slow release.\"\n        this.volume = Math.max(rms, this.volume * this.averaging);\n    }\n\n    getVolume() {\n        return window.processor.volume;\n    }\n}\n\nexport default VolumemeterUtils\n","import {getRatingFromKey} from \"./utils/competitionUtils\";\nimport {store} from \"./store\";\nimport {\n    ADD_COMPETITOR,\n    DELETE_COMPETITOR,\n    HIDE_COMPETITOR,\n    RESET_COMPETITOR,\n    SAVE_VALUE,\n    SET_DURATION,\n    SET_MAXVOL,\n    SET_TITLE,\n    SWITCH_BLANK,\n    SHOW_COMPETITOR,\n    START_RECORDING,\n    STOP_RECORDING,\n    UPDATE_RATING\n} from \"./constants\";\nimport VolumemeterUtils from \"./utils/volumemeterUtils\";\n\n\nexport const switchBlank = () => ({\n    type: SWITCH_BLANK,\n});\n\nexport const addCompetitor = (competitorKey: string) => ({\n    type: ADD_COMPETITOR,\n    competitorKey\n});\n\nexport const deleteCompetitor = (competitorKey: string) => {\n    clearInterval(\n        store.getState().voting.competitors.byId[competitorKey].interval\n    );\n    return ({\n        type: DELETE_COMPETITOR,\n        competitorKey\n    });\n};\n\nexport const startCompetitor = (competitorKey: string) => {\n    return (dispatch, getState) => {\n        const state = getState();\n\n        console.log(competitorKey + ' starts measuring!');\n        console.log('duration: ' + state.administration.duration);\n\n        let timestamp = Math.floor(Date.now());\n        const startedRecording = parseInt(timestamp, 10);\n\n        const interval = setInterval(\n            () => {\n                console.log(\"going to record value for: \" + competitorKey)\n                dispatch(recordValue(competitorKey))\n            },\n            10 // ms, normally 10\n        );\n\n        dispatch(startRecording(\n            competitorKey,\n            interval,\n            state.administration.duration,\n            startedRecording,\n            true\n        ));\n    }\n};\n\nexport const resetCompetitor = (competitorKey: string) => {\n    clearInterval(\n        store.getState().voting.competitors.byId[competitorKey].interval\n    );\n    return ({\n        type: RESET_COMPETITOR,\n        competitorKey\n    });\n};\n\nexport const showCompetitor = (competitorKey: string) => ({\n    type: SHOW_COMPETITOR,\n    competitorKey\n});\n\nexport const hideCompetitor = (competitorKey: string) => ({\n    type: HIDE_COMPETITOR,\n    competitorKey\n});\n\nexport const startRecording\n    = (competitorKey: string,\n       interval,\n       duration: number,\n       startedRecording: Date,\n       isActive: boolean) => ({\n    type: START_RECORDING,\n    competitorKey,\n    interval,\n    duration,\n    startedRecording,\n    isActive,\n});\n\nconst volumemeter = new VolumemeterUtils();\n\nexport const recordValue = (competitorKey: string) => {\n    return (dispatch, getState) => {\n        const state = getState();\n        const competitor = state.voting.competitors.byId[competitorKey];\n\n        let interval = competitor.interval;\n\n        let timeLeft =\n            state.administration.duration -\n            (Math.floor(Date.now()) - competitor.startedRecording);\n\n        if (timeLeft > 0) {\n            const value = volumemeter.getVolume();\n            dispatch(saveValue(\n                competitorKey,\n                value,\n                timeLeft,\n            ));\n            dispatch(updateRating(\n                competitorKey,\n                getRatingFromKey(competitorKey),\n            ));\n        } else {\n            clearInterval(interval);\n            const stoppedRecording = Math.floor(Date.now());\n            dispatch(stopRecording(\n                competitorKey,\n                stoppedRecording,\n            ));\n        }\n    }\n};\n\nexport const updateAllRatings = (competitorKey: string) => {\n    return (dispatch, getState) => {\n        const state = getState();\n        Object.keys(state.voting.ratings).forEach(competitorKey => {\n            dispatch(updateRating(\n                competitorKey,\n                getRatingFromKey(competitorKey),\n            ));\n        });\n    }\n};\n\nexport const saveValue\n    = (competitorKey: string,\n       value: number,\n       timeLeft: number) => ({\n    type: SAVE_VALUE,\n    competitorKey,\n    value,\n    timeLeft,\n});\n\nexport const updateRating\n    = (competitorKey: string,\n       rating: number) => ({\n    type: UPDATE_RATING,\n    competitorKey,\n    rating,\n});\n\nexport const stopRecording\n    = (competitorKey: string,\n       stoppedRecording: Date) => ({\n    type: STOP_RECORDING,\n    competitorKey,\n    stoppedRecording,\n});\n\nexport const setTitle = (title: string) => ({\n    type: SET_TITLE,\n    title\n});\n\nexport const setDuration = (duration: number) => ({\n    type: SET_DURATION,\n    duration\n});\n\nexport const setMaxvol = (maxVol: number) => ({\n    type: SET_MAXVOL,\n    maxVol\n});\n","import React, {Component} from 'react';\nimport RecordingDot from \"./RecordingDot\";\nimport {connect} from \"react-redux\";\nimport {\n    deleteCompetitor,\n    hideCompetitor,\n    resetCompetitor,\n    showCompetitor,\n    startCompetitor\n} from \"../actions\";\nimport {\n    CartesianGrid,\n    ReferenceLine,\n    ResponsiveContainer,\n    Scatter,\n    ScatterChart,\n    Tooltip,\n    XAxis,\n    YAxis\n} from \"recharts\";\nimport {getRatingFromKey} from \"../utils/competitionUtils\";\nimport Button from \"react-bootstrap/Button\";\nimport {Modal} from \"react-bootstrap\";\nimport Form from \"react-bootstrap/Form\";\n\nclass CompetitorTableRow extends Component<{}> {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            showModal: false,\n        };\n    }\n\n    handleShow = () => {\n        this.setState({\n            showModal: !this.state.showModal\n        })\n    };\n\n    changeVisibility = () => {\n        const competitorKey = this.props.competitor;\n        const competitor = this.props.competitors.byId[competitorKey];\n        if (competitor.isVisible) {\n            this.props.dispatch(hideCompetitor(competitorKey))\n        } else {\n            this.props.dispatch(showCompetitor(competitorKey))\n        }\n    };\n\n    render() {\n        const competitorKey = this.props.competitor;\n        const competitor = this.props.competitors.byId[competitorKey];\n        let data = [];\n        competitor.levels.forEach((value, index) => {\n            data = [\n                ...data,\n                {\n                    timeLeft: competitor.timeLefts[index],\n                    level: value\n                }\n            ]\n        });\n        return (\n            <React.Fragment>\n                <tr key={competitorKey} className={this.props.addClass}>\n                    <td>\n                        <RecordingDot isActive={competitorKey === this.props.activeCompetitor}/>\n                    </td>\n                    <td>{competitorKey}</td>\n                    <td>{(this.props.ratings && this.props.ratings.hasOwnProperty(competitorKey)) ? this.props.ratings[competitorKey].toFixed(4) : '–'}</td>\n                    <td>{competitor.timeLeft ? (competitor.timeLeft / 1000).toFixed(3) : '–'}</td>\n                    <td>\n                        <Form>\n                            <Form.Check\n                                type=\"checkbox\" /*why switch doesnt work?*/\n                                checked={competitor.isVisible}\n                                onChange={this.changeVisibility}\n                            />\n                        </Form>\n                    </td>\n                    <td>\n                        {(this.props.ratings && this.props.ratings.hasOwnProperty(competitorKey))\n                            ? (\n                                <React.Fragment>\n                                    <Button variant=\"info\" onClick={this.handleShow}>Show Data</Button>\n                                    <Modal\n                                        show={this.state.showModal}\n                                        size={\"xl\"}\n                                        onHide={this.handleShow}\n                                        width={900}\n                                        centered>\n                                        <Modal.Header closeButton>\n                                            <Modal.Title style={{color: 'black'}}>Data\n                                                of {competitor.name}</Modal.Title>\n                                        </Modal.Header>\n                                        <Modal.Body>\n                                            <ResponsiveContainer width=\"100%\" height={400}>\n                                                <ScatterChart>\n                                                    <CartesianGrid strokeDasharray=\"1 1\"/>\n                                                    <XAxis dataKey=\"timeLeft\" name=\"timeLeft\"/>\n                                                    <YAxis dataKey=\"level\" name=\"level\"/>\n                                                    <Tooltip cursor={{strokeDasharray: '3 3'}}/>\n                                                    <Scatter name=\"Levels\" data={data} fill=\"#8884d8\"/>\n                                                    <ReferenceLine y={getRatingFromKey(competitorKey)} stroke=\"red\"/>\n                                                </ScatterChart>\n                                            </ResponsiveContainer>\n                                        </Modal.Body>\n                                    </Modal>\n                                </React.Fragment>\n                            )\n                            : '–'\n                        }\n                    </td>\n                    <td>\n                        <input type=\"button\" className=\"form-control btn btn-primary\" value=\"Start\"\n                               onClick={() => this.props.dispatch(startCompetitor(competitorKey, this.props.measureDuration))}/>\n                    </td>\n                    <td>\n                        <input type=\"button\" className=\"form-control btn btn-warning\" value=\"Reset\"\n                               onClick={() => this.props.dispatch(resetCompetitor(competitorKey))}/>\n                    </td>\n                    <td>\n                        <input type=\"button\" className=\"form-control btn btn-danger\" value=\"Delete\"\n                               onClick={() => this.props.dispatch(deleteCompetitor(competitorKey))}/>\n                    </td>\n                </tr>\n            </React.Fragment>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    competitors: state.voting.competitors,\n    activeCompetitor: state.voting.activeCompetitor,\n    ratings: state.voting.ratings,\n    measureDuration: state.administration.duration\n});\n\nexport default connect(mapStateToProps)(CompetitorTableRow)\n","import React, {Component} from 'react'\nimport CompetitorTableRow from \"./CompetitorTableRow\";\nimport {connect} from \"react-redux\";\nimport {getLeader} from \"../utils/competitionUtils\";\n\nclass CompetitionTable extends Component {\n    render() {\n        return (\n            <div>\n                Leading competitor is displayed red.\n                <table className=\"table table-dark   table-striped table-hover\">\n                    <thead>\n                    <tr>\n                        <td>Status</td>\n                        <td>Name</td>\n                        <td>Rating</td>\n                        <td>Time left</td>\n                        <td>Visibility</td>\n                        <td>Data</td>\n                        <td>Start</td>\n                        <td>Reset</td>\n                        <td>Delete</td>\n                    </tr>\n                    </thead>\n                    <tbody>\n                    {this.props.competitors.byId && Object.keys(this.props.competitors.byId).length > 0 && Object.keys(this.props.competitors.byId).map(\n                        key =>\n                            <React.Fragment key={key}>\n                                <CompetitorTableRow competitor={key} addClass={((key === getLeader()) ? 'text-danger' : '')} />\n                            </React.Fragment>)\n                    }\n                    </tbody>\n                </table>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    competitors: state.voting.competitors,\n});\n\nexport default connect(mapStateToProps)(CompetitionTable);\n","import Competitor from './Competitor';\nimport CalibrationCompetitor from \"./CalibrationCompetitor\";\n\nclass _Competition {\n    constructor() {\n        if (!_Competition.instance) {\n\n            this.reset();\n\n            _Competition.instance = this;\n        }\n        return _Competition.instance;\n    }\n\n    reset() {\n        this.competitors = [];\n        this._duration = 10000;\n        this.calibrationCompetitors = [];\n        this.maxVol = 1;\n        this.stateCallbacks = [];\n    }\n\n    /**\n     *\n     * @param {Competitor} competitor\n     */\n    addCompetitor(competitor) {\n        this.competitors.push(competitor);\n    }\n\n    /**\n     *\n     * @param {CalibrationCompetitor} competitor\n     */\n    addCalibrationCompetitor(competitor) {\n        this.calibrationCompetitors.push(competitor);\n    }\n\n    get duration() {\n        return this._duration;\n    }\n\n    set duration(value) {\n        this._duration = parseInt(value, 10);\n    }\n\n    update() {\n        this.stateCallbacks.forEach(function (cb) {\n            if (cb) {\n                cb();\n            }\n        })\n    }\n\n    /**\n     *\n     * @param {string} name\n     * @returns {boolean}\n     */\n    isCompetitorNameAlreadyExists(name) {\n        let exists = false;\n        this.competitors.forEach(function (comp) {\n            if (name === comp.name) {\n                exists = true;\n            }\n        });\n        return exists;\n    }\n\n    /**\n     *\n     * @param name\n     * @returns {boolean}\n     */\n    isCalibrationCompetitorNameAlreadyExists(name) {\n        let exists = false;\n        this.calibrationCompetitors.forEach(function (comp) {\n            if (name === comp.name) {\n                exists = true;\n            }\n        });\n        return exists;\n    }\n\n    removeCompetitor(competitor) {\n        this.competitors.forEach(function (comp, index, comps) {\n            if (competitor === comp) {\n                comps.splice(index, 1);\n            }\n        });\n        this.update();\n    }\n\n    removeCalibrationCompetitor(competitor) {\n        this.calibrationCompetitors.forEach(function (comp, index, comps) {\n            if (competitor === comp) {\n                comps.splice(index, 1);\n            }\n        });\n        this.update();\n    }\n\n\n    /**\n     *\n     * @returns {Competitor}\n     */\n    getActiveCompetitor() {\n        let activeCompetitor = null;\n        this.competitors.forEach(function (comp) {\n            if (comp.isActive) {\n                activeCompetitor = comp;\n            }\n        });\n        return activeCompetitor;\n    }\n\n    getActiveCalibrationCompetitor() {\n        let activeCompetitor = null;\n        this.calibrationCompetitors.forEach(function (comp) {\n            if (comp.isActive) {\n                activeCompetitor = comp;\n            }\n        });\n        return activeCompetitor;\n    }\n\n    getLeader() {\n        let leadingCompetitor = null;\n        if (this.competitors[0]) {\n            leadingCompetitor = this.competitors[0];\n            this.competitors.forEach(function (comp, index, comps) {\n                if (comp.rating >= leadingCompetitor.rating) {\n                    leadingCompetitor = comp;\n                }\n            });\n        }\n        if (leadingCompetitor && leadingCompetitor.rating !== 0) {\n            return leadingCompetitor;\n        }\n        else {\n            return null;\n        }\n    }\n\n    isCalibrating() {\n        let calibrating = false;\n        this.calibrationCompetitors.forEach(function (comp) {\n            if (comp.isActive) {\n                calibrating = true;\n            }\n        });\n        return calibrating;\n    }\n\n    dumpToLocalStorage() {\n        localStorage.setItem('competition', JSON.stringify(this));\n    }\n\n    getJsonDateUri() {\n        let str = JSON.stringify(this, null, '\\t');\n        return 'data:application/json;charset=utf-8,' + encodeURIComponent(str);\n    }\n\n    /**\n     *\n     * @param selectorFiles FileList\n     */\n    reviveFromFileList(selectorFiles) {\n        let file = selectorFiles[0];\n        let reader = new FileReader();\n        reader.onload = function (e) {\n            let comp = JSON.parse(e.target.result);\n            if (comp != null) {\n                let callbacks = this.stateCallbacks;\n                this.revive( comp );\n                this.dumpToLocalStorage();\n                this.stateCallbacks = callbacks;\n                this.update();\n            }\n        }.bind(this);\n        reader.readAsText(file);\n    }\n\n    /**\n     *\n     * @param data\n     * @returns {_Competition}\n     */\n    revive(data) {\n        this.reset();\n        this._duration = data._duration;\n        this.maxVol = data.maxVol;\n        data.competitors.forEach((comp) => {\n            let newComp = new Competitor();\n            newComp.revive(comp);\n            this.addCompetitor(newComp);\n        });\n        data.calibrationCompetitors.forEach((comp) => {\n            let newComp = new CalibrationCompetitor();\n            newComp.revive(comp);\n            this.addCalibrationCompetitor(newComp);\n        });\n        this.update();\n    }\n\n}\n\nconst Competition = new _Competition();\n\nexport default Competition\n","import React, {Component} from 'react';\nimport CompetitionTable from \"../components/CompetitionTable\";\nimport Competition from '../entities/Competition';\nimport CalibrationCompetitor from \"../entities/CalibrationCompetitor\";\nimport {connect} from \"react-redux\";\nimport {addCompetitor, setDuration, setMaxvol, switchBlank, updateAllRatings} from \"../actions\";\nimport {doesCompetitorNameAlreadyExists} from \"../utils/competitionUtils\";\nimport {Link} from \"react-router-dom\";\nimport ReactMicExample from \"../components/ReactMicExample\";\nimport Form from \"react-bootstrap/Form\";\n\n\nclass Admin extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            addCompetitorInput: '',\n            addCalibrationCompetitorInput: 'Calibration 1',\n            durationInput: props.duration ? props.duration / 1000 : 10,\n            maxVolInput: props.maxVol,\n        };\n\n        this.addCompetitor = this.addCompetitor.bind(this);\n        this.addCalibrationCompetitor = this.addCalibrationCompetitor.bind(this);\n//        this.changeSettings = this.changeSettings.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n\n    }\n\n    keyboardFunction(event) {\n        if (event.keyCode === 71) {\n            this.setState(\n                {\n                    record: 'def'\n                }\n            )\n        }\n    }\n\n    componentDidMount() {\n        document.title = \"Admin | Applaus-O-Meter\";\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        Competition.dumpToLocalStorage();\n    }\n\n    addCompetitor(event) {\n        event.preventDefault();\n        let name = this.state.addCompetitorInput;\n        if (!(name === \"\") && !doesCompetitorNameAlreadyExists(name)) {\n            this.props.dispatch(addCompetitor(name));\n        }\n    }\n\n    addCalibrationCompetitor(event) {\n        event.preventDefault();\n        let name = this.state.addCalibrationCompetitorInput;\n        if (!this.state.competition.isCalibrationCompetitorNameAlreadyExists(name) && !(name === \"\")) {\n            let competition = this.state.competition;\n            competition.addCalibrationCompetitor(new CalibrationCompetitor(name));\n            this.setState({\n                competition: competition\n            });\n        }\n    }\n\n    // Deprecated\n    // changeSettings(event) {\n    //     event.preventDefault();\n    //     let competition = this.state.competition;\n    //     // competition.duration = this.state.durationInput * 1000;\n    //     competition.maxVol = parseFloat((this.state.maxVolInput).toString().replace(',', '.'));\n    //     this.setState({\n    //         competition: competition\n    //     });\n    // }\n\n    setDuration = () => {\n        this.props.dispatch(\n            setDuration(this.state.durationInput * 1000)\n        );\n    };\n\n    setMaxvol = () => {\n        this.props.dispatch(\n            setMaxvol(\n                parseFloat((this.state.maxVolInput).toString().replace(',', '.'))\n            )\n        );\n        this.props.dispatch(updateAllRatings());\n    };\n\n    handleChange(e) {\n        this.setState({[e.target.name]: e.target.value});\n    }\n\n\n    render() {\n        return (\n            <div className=\"container-fluid p-5\">\n\n                <header className={\"pb-4\"}>\n                    <h2>Welcome to Applaus-O-Meter administration</h2>\n                    <p>To get started, add some competitors.</p>\n                    <Link to=\"/view\" className=\"btn btn-primary\">\n                        Open view &#8680;\n                    </Link>\n                </header>\n\n                <div id=\"control\" className=\"mt-4\">\n                    <h3>Control</h3>\n                    <Form>\n                        <div className=\"row\">\n                            <div className=\"col-2\">\n                                <label\n                                    htmlFor=\"showBlankInput\">\n                                    Show blank<br/>(currently {this.props.showBlank ? 'yes' : 'no'})\n                                </label>\n                            </div>\n                            <div className=\"col-8\">\n                                <Form.Check\n                                    type=\"checkbox\" /*why switch doesnt work?*/\n                                    checked={this.props.showBlank}\n                                    onChange={() => this.props.dispatch(switchBlank())}\n                                />\n                            </div>\n                        </div>\n                    </Form>\n                </div>\n\n\n                <div id=\"competitors\" className=\"border border-secondary p-2 bg-primary rounded\">\n                    <h3>Competitors</h3>\n                    <form\n                        className=\"row form-group\"\n                        onSubmit={e => {\n                            e.preventDefault()\n                        }}\n                    >\n                        <div className=\"col-10\">\n                            <input type=\"text\" className=\"form-control w-100\"\n                                   name=\"addCompetitorInput\" value={this.state.addCompetitorInput}\n                                   placeholder=\"Competitor name\"\n                                   onChange={this.handleChange}/>\n                        </div>\n                        <div className=\"col-2\">\n                            <input type=\"button\" className=\"form-control btn btn-success\"\n                                   value=\"Add!\" onClick={this.addCompetitor}/>\n                        </div>\n                    </form>\n\n                    <div>\n                        <CompetitionTable competition={this.state.competition}/>\n                    </div>\n                </div>\n\n                <div id=\"settings\" className=\"mt-4\">\n                    <h3>Settings</h3>\n                    <form\n                        className=\"form-group\"\n                        onSubmit={e => {\n                            e.preventDefault()\n                        }}>\n                        <div className=\"row\">\n                            <div className=\"col-2\">\n                                <label\n                                    htmlFor=\"durationInput\">Duration in\n                                    seconds<br/>(currently {this.props.duration / 1000} s)</label>\n                            </div>\n                            <div className=\"col-8\">\n                                <input type=\"text\" className=\"form-control w-100\"\n                                       name=\"durationInput\" value={this.state.durationInput}\n                                       placeholder=\"duration\"\n                                       onChange={this.handleChange}/>\n                            </div>\n                            <div className=\"col-2\">\n                                <input type=\"button\" className=\"form-control btn btn-success\"\n                                       value=\"Set!\" onClick={this.setDuration}/>\n                            </div>\n                        </div>\n                        <div className=\"row\">\n                            <div className=\"col-2\">\n                                <label\n                                    htmlFor=\"maxVolInput\">Max volume for rating, in range\n                                    [0;1]<br/>(currently: {this.props.maxVol})</label>\n                            </div>\n                            <div className=\"col-8\">\n                                <input type=\"text\" className=\"form-control w-100\"\n                                       name=\"maxVolInput\" value={this.state.maxVolInput}\n                                       onChange={this.handleChange}/>\n                            </div>\n                            <div className=\"col-2\">\n                                <input type=\"button\" className=\"form-control btn btn-success\"\n                                       value=\"Set!\" onClick={this.setMaxvol}/>\n                            </div>\n                        </div>\n                    </form>\n                </div>\n\n                {/*<div id=\"calibration\" className=\"my-4\">*/}\n                {/*    <h3>Calibration</h3>*/}\n                {/*    <form*/}\n                {/*        className=\"row form-group\"*/}\n                {/*        onSubmit={e => {*/}\n                {/*            e.preventDefault()*/}\n                {/*        }}*/}\n                {/*    >*/}\n                {/*        <div className=\"col-10\">*/}\n                {/*            <input type=\"text\" className=\"form-control w-100\"*/}\n                {/*                   name=\"addCalibrationCompetitorInput\"*/}\n                {/*                   value={this.state.addCalibrationCompetitorInput}*/}\n                {/*                   placeholder=\"Competitor name\"*/}\n                {/*                   onChange={this.handleChange}/>*/}\n                {/*        </div>*/}\n                {/*        <div className=\"col-2\">*/}\n                {/*            <input type=\"submit\" className=\"form-control btn btn-success\"*/}\n                {/*                   value=\"Add!\"/>*/}\n                {/*        </div>*/}\n                {/*    </form>*/}\n                {/*    <div>*/}\n                {/*        <CalibrationTable competition={this.state.competition}/>*/}\n                {/*    </div>*/}\n                {/*</div>*/}\n\n                <div>\n                    {/*<CompetitionJsonExportBtn competition={this.state.competition}/>*/}\n                    {/*<CompetitionJsonImportBtn competition={this.state.competition}/>*/}\n                </div>\n\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    showBlank: state.control.showBlank,\n    duration: state.administration.duration,\n    maxVol: state.administration.maxVol\n});\n\nexport default connect(mapStateToProps)(Admin)\n","import React from \"react\";\nimport {ReactMic} from \"react-mic\";\n\n\nclass ReactMicExample extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            record: false\n        }\n\n    }\n\n    startRecording = () => {\n        this.setState({\n            record: true\n        });\n    }\n\n    stopRecording = () => {\n        this.setState({\n            record: false\n        });\n    }\n\n    onData(recordedBlob) {\n        console.log('chunk of real-time data is: ', recordedBlob);\n    }\n\n    onStop(recordedBlob) {\n        console.log('recordedBlob is: ', recordedBlob);\n    }\n\n    render() {\n        return (\n            <div>\n                <ReactMic\n                    record={this.state.record}\n                    className=\"sound-wave\"\n                    onStop={this.onStop}\n                    onData={this.onData}\n                    strokeColor=\"#000000\"\n                    backgroundColor=\"#FF4081\"/>\n                <button onClick={this.startRecording} type=\"button\">Start</button>\n                <button onClick={this.stopRecording} type=\"button\">Stop</button>\n            </div>\n        );\n    }\n}\n\nexport default ReactMicExample;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport RecordingDot from \"./RecordingDot\";\nimport {Wobble} from \"react-motions\";\nimport {connect} from \"react-redux\";\nimport {getLeader} from \"../utils/competitionUtils\";\n\nfunction CompetitorCard(props) {\n    console.log(\"competitor: \" + props.competitorKey);\n    console.log(\"competitors: \");\n    console.log(props.competitors);\n    const competitor = props.competitors[props.competitorKey];\n\n    let competitorNameClass = \"text-primary\";\n    let cardBgClass = \"bg-info\";\n    let ratingClass = \"text-secondary\";\n    if (getLeader() === props.competitorKey) {\n        cardBgClass = \"bg-success\";\n        competitorNameClass = \"text-secondary\";\n        ratingClass = \"text-secondary\";\n    }\n    let bounce = false;\n    if (competitor.stoppedRecording > (Math.floor(Date.now()) - 1 * 1000)) {\n        bounce = true;\n    }\n    let card =\n        <div className={\"card text-white text-center \" + cardBgClass}>\n            <div className=\"card-body\">\n                <div>\n                    <RecordingDot isActive={props.competitorKey === props.activeCompetitor}/>\n                </div>\n                <h2 className={\"card-title \" + competitorNameClass}>{competitor.name}</h2>\n                <div className=\"card-text\">\n                    <p>\n                        <span className=\"timeLeftText\">Verbleibende Zeit:</span>\n                        <br/>\n                        {parseFloat(((competitor.timeLeft !== null) ? competitor.timeLeft : props.duration) / 1000).toFixed(1)} Sekunden\n                    </p>\n                    <p className={\"btn btn-primary ratingText \" + ratingClass}>\n                        Wertung:&nbsp;\n                        <span className=\"text-white\">\n                            {\n                                props.ratings && props.ratings.hasOwnProperty(props.competitorKey)\n                                    ? parseFloat(props.ratings[props.competitorKey] * 10).toFixed(2)\n                                    : \"–\"\n                            }\n                        </span>\n                    </p>\n                </div>\n            </div>\n        </div>;\n    if (competitor.isVisible) {\n        if (bounce) {\n            return (\n                <div className=\"col-3\" key={props.competitorKey}>\n                    <Wobble>\n                        {card}\n                    </Wobble>\n                </div>\n            )\n        } else {\n            return (\n                <div className=\"col-3\" key={props.competitorKey}>\n                    {card}\n                </div>\n            )\n        }\n    } else {\n        return <React.Fragment/>\n    }\n}\n\nconst mapStateToProps = state => ({\n    competitors: state.voting.competitors.byId,\n    ratings: state.voting.ratings,\n    activeCompetitor: state.voting.activeCompetitor,\n    duration: state.administration.duration\n});\n\nexport default connect(mapStateToProps)(CompetitorCard)\n","import React from 'react';\nimport {connect} from \"react-redux\";\nimport CompetitorCard from \"./CompetitorCard\";\n\n\nfunction CompetitionCards(props) {\n    return (\n        <div id=\"competitionCardContainer\" className=\"container-fluid px-5\">\n            <div className=\"row justify-content-center\">\n                {props.competitorKeys.map(\n                    competitorKey => <CompetitorCard key={competitorKey} competitorKey={competitorKey}/>\n                )}\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    competitorKeys: state.voting.competitors.allIds,\n});\n\nexport default connect(mapStateToProps)(CompetitionCards)\n\n\n","import React, {Component} from \"react\";\nimport {SvgLoader, SvgProxy} from 'react-svgmt';\nimport castle from '../assets/castle-gradient.svg';\nimport useWindowSize from 'react-use/lib/useWindowSize'\nimport Confetti from 'react-confetti'\nimport VolumemeterUtils from \"../utils/volumemeterUtils\";\nimport {getRatingFromVolume} from \"../utils/competitionUtils\";\nimport {connect} from \"react-redux\";\n\n\ntype State = {\n    interval: number,\n    rating: number,\n};\n\nclass CastlemeterComponent extends Component<{}, State> {\n\n    constructor(props: P, context: any) {\n        super(props, context);\n        this.volumemeter = new VolumemeterUtils();\n        this.state = {\n            interval: null,\n            rating: 0,\n        };\n        this.checkRating();\n    }\n\n    componentDidUpdate(prevProps: Readonly<P>, prevState: Readonly<S>, snapshot: SS): void {\n        this.checkRating();\n    }\n\n    checkRating = () => {\n        const isActive = this.props.isActive;\n        if (!isActive) {\n            if (this.state.interval === null) {\n                const interval = setInterval(\n                    () => {\n                        let volume = this.volumemeter.getVolume();\n                        this.setState({\n                            rating: getRatingFromVolume(volume),\n                        });\n                    },\n                    50 // ms, normally 10\n                );\n                this.setState({\n                    interval,\n                });\n            }\n        } else {\n            if (this.state.interval) {\n                clearInterval(this.state.interval);\n            }\n            if (this.state.interval !== null && this.props.rating !== this.state.rating) {\n                this.setState({\n                    interval: null,\n                    rating: this.props.rating\n                });\n            }\n        }\n    };\n\n    render() {\n        const isActive = this.props.isActive;\n        let rotation = -parseFloat(this.props.rating) * 90 - 45;\n\n        const shift = this.state.rating > 0 ? (-this.state.rating) * 786 : 0;\n\n        return (\n            <div className=\"d-flex flex-column-reverse p-4\">\n                {/*https://www.npmjs.com/package/react-confetti*/}\n                <Confetti\n                    // run={isActive}\n                    numberOfPieces={isActive ? undefined : 5}\n                    width={this.props.width}\n                    height={this.props.height}\n                    gravity={isActive ? this.state.rating : 0.01}\n                    wind={isActive ? this.state.rating * 0.5 : 0}\n                    recycle={true}\n                    canvasRef={undefined}\n                />\n                <SvgLoader path={castle} height={400} width={2000}>\n                    {/*<SvgProxy selector=\"#rotmeter\"*/}\n                    {/*          transform={\"rotate(\" + rotation + \" 565.9 124)\"}/>*/}\n                    <SvgProxy\n                        selector=\"#clip-rect\"\n                        transform={\"translate(0 \" + shift + \")\"}\n                    />\n                </SvgLoader>\n            </div>\n        );\n    }\n}\n\nfunction Castlemeter(props) {\n    const {width, height} = useWindowSize();\n    return <CastlemeterComponent width={width} height={height} {...props} />;\n}\n\nconst mapStateToProps = state => ({});\n\nexport default connect(mapStateToProps)(Castlemeter);\n","import React from 'react';\nimport {connect} from \"react-redux\";\n\n\nfunction Footer(props) {\n    return(\n        <footer className=\"container-fluid py-1 px-5 text-right\">\n            Applaus-O-Meter | {props.title} | mail@yorickreum.de\n        </footer>\n    );\n}\n\nconst mapStateToProps = state => ({\n    title: state.administration.title\n});\n\nexport default connect(mapStateToProps)(Footer)\n","import React from \"react\";\nimport CompetitionCards from \"../components/CompetitionCards\";\nimport '../styles/frontend.css';\nimport {connect} from \"react-redux\";\nimport Castlemeter from \"../meters/Castlemeter\";\nimport Footer from \"../components/Footer\";\nimport {Helmet} from \"react-helmet\";\n\nfunction View(props) {\n    let rating = 0;\n    let isActive = false;\n    const activeCompetitor = props.activeCompetitor;\n    if (activeCompetitor) {\n        isActive = true;\n        rating = props.ratings[activeCompetitor];\n    }\n    return (\n        <React.Fragment>\n            <Helmet>\n                <title>View | Applaus-O-Meter</title>\n            </Helmet>\n            {!props.showBlank &&\n            <React.Fragment>\n                <div id=\"frontend\" className=\"container-fluid py-2 rounded-0\">\n                    <div id=\"graphic\" className=\"d-flex justify-content-center\">\n                        <Castlemeter isActive={isActive} rating={rating}/>\n                    </div>\n                    <div id=\"information\">\n                        <CompetitionCards/>\n                    </div>\n                </div>\n                <Footer/>\n            </React.Fragment>}\n        </React.Fragment>\n    );\n}\n\nconst mapStateToProps = state => ({\n    showBlank: state.control.showBlank,\n    activeCompetitor: state.voting.activeCompetitor,\n    ratings: state.voting.ratings,\n});\n\nexport default connect(mapStateToProps)(View)\n","import React from \"react\";\nimport {connect} from \"react-redux\";\n\n// import logo from './fishtival_logo_yellow_white.svg';\n\nfunction Heading(props) {\n    return(\n        <div className=\"container-fluid pt-2\">\n            <h2 className=\"text-center text-warning\">Applaus-O-Meter</h2>\n            <h1 id=\"mainHeading\" className=\"text-center text-white py-1\">{props.title}</h1>\n            {/*<h1 className=\"text-center text-white bg-primary rounded p-1\">*/}\n                {/*<img src={logo} height=\"75\"/>*/}\n            {/*</h1>*/}\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    title: state.administration.title\n});\n\nexport default connect(mapStateToProps)(Heading)\n","import React, {Component} from 'react';\nimport ReactDOM from 'react-dom';\nimport {PersistGate} from 'redux-persist/integration/react'\nimport {HashRouter, Link, Route, Switch} from 'react-router-dom';\nimport Admin from './screens/Admin';\nimport registerServiceWorker from './registerServiceWorker';\nimport './styles/index.css'\nimport View from \"./screens/View\";\nimport Heading from \"./components/Heading\";\nimport {Provider} from \"react-redux\";\nimport {persistor, store} from \"./store\";\nimport {Helmet} from \"react-helmet\";\n\nclass Areas extends Component {\n\n    componentDidMount() {\n        document.title = \"Applaus-O-Meter\";\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                <div className=\"container\">\n                    <div className=\"row justify-content-center\">\n                        <div className=\"col-4\">\n                            <div className=\"card h-100 text-white text-center bg-warning\">\n                                <div className=\"card-body py-5\">\n                                    <h2 className=\"card-title text-primary pb-3\">Administration</h2>\n                                    <div className=\"card-text\">\n                                        <ul className=\"text-left\">\n                                            <li>Teilnehmner anlegen und verwalten</li>\n                                            <li>Abstimmungen starten</li>\n                                        </ul>\n                                        <Link to=\"/admin\" className=\"btn btn-primary\">Hier entlang &#8680;</Link>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"col-4\">\n                            <div className=\"card h-100 text-white text-center bg-warning\">\n                                <div className=\"card-body py-5\">\n                                    <h2 className=\"card-title text-primary pb-3\">Abstimmung</h2>\n                                    <div className=\"card-text\">\n                                        <p>\n                                            Zum Beispiel in neuem Fenster öffnen und auf Beamer zeigen.\n                                        </p>\n                                        <Link to=\"/view\" className=\"btn btn-primary\">Hier entlang &#8680;</Link>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </React.Fragment>\n        )\n    }\n}\n\nReactDOM.render(\n    <Provider store={store}>\n        <PersistGate loading={null} persistor={persistor}>\n            <Helmet>\n                <meta charSet=\"utf-8\" />\n                <title>Applaus-O-Meter</title>\n            </Helmet>\n            <Heading/>\n            <HashRouter>\n                <Switch>\n                    <Route exact path=\"/\" component={Areas}/>\n                    <Route path=\"/admin\" component={Admin}/>\n                    <Route path=\"/view\" component={View}/>\n                </Switch>\n            </HashRouter>\n        </PersistGate>\n    </Provider>,\n    document.getElementById('root')\n);\n\nregisterServiceWorker();\n"],"sourceRoot":""}