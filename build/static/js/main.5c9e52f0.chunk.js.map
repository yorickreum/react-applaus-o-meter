{"version":3,"sources":["assets/castle-gradient.svg","components/RecordingDot.js","utils/crosstabSync.js","reducers.js","constants.js","store.js","utils/competitionUtils.js","utils/volumemeterUtils.js","actions.js","components/CompetitorTableRow.js","components/CompetitionTable.js","entities/Competition.js","components/ErrorToast.js","components/Errors.js","screens/Admin.js","registerServiceWorker.js","components/CompetitorCard.js","components/CompetitionCards.js","meters/Castlemeter.js","components/Footer.js","screens/View.js","components/Heading.js","index.js"],"names":["module","exports","__webpack_require__","p","recordingDotStyle","dot","textShadow","RecordingDot","props","activeClass","isActive","react_default","a","createElement","className","style","crosstabSync","store","persistConfig","crosstabConfig","blacklist","whitelist","keyPrefix","KEY_PREFIX","key","window","addEventListener","e","indexOf","oldValue","newValue","statePartial","JSON","parse","state","Object","keys","reduce","reducerKey","dispatch","payload","type","REHYDRATE","initialStates","errors","byId","control","showBlank","administration","title","maxVol","duration","voting","isInitialized","activeCompetitor","competitors","allIds","ratings","combineReducers","arguments","length","undefined","_objectSpread","action","competitorKey","defineProperty","name","isVisible","startedRecording","stoppedRecording","levels","timeLefts","measureDuration","timeLeft","interval","concat","toConsumableArray","forEach","filter","value","rating","time","getTime","text","storage","persistedReducer","persistReducer","rootReducer","composeEnhancer","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","applyMiddleware","thunk","persistor","persistStore","getLeader","getState","leadingCompetitor","compKey","getRatingFromKey","getVisibleLeader","competitorKeys","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","isVisibleFromKey","err","return","getFirstVisibleCompetitorKey","competitor","getRatingFromVolume","pv","cv","volume","getAverageVolumeFromKey","VolumemeterUtils","clipLevel","averaging","clipLag","AudioContext","webkitAudioContext","audioContext","processor","createScriptProcessor","onaudioprocess","volumeAudioProcess","clipping","lastClip","console","log","connect","destination","checkClipping","performance","now","shutdown","disconnect","navigator","getUserMedia","webkitGetUserMedia","mozGetUserMedia","audio","mandatory","googEchoCancellation","googAutoGainControl","googNoiseSuppression","googHighpassFilter","optional","gotStream","didntGetStream","stream","createMediaStreamSource","event","x","buf","inputBuffer","getChannelData","sum","i","Math","abs","rms","sqrt","max","showCompetitor","hideCompetitor","startRecording","recordValue","floor","Date","getVolume","saveValue","updateRating","addError","clearInterval","stopRecording","updateAllRatings","setDuration","setMaxvol","dismissError","initiateVolumemeter","initiate","CompetitorTableRow","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleShow","setState","showModal","changeVisibility","_this2","data","index","level","Fragment","addClass","components_RecordingDot","toFixed","Form_default","Check","checked","onChange","hasOwnProperty","Button_default","variant","onClick","Modal","show","size","onHide","width","centered","Header","closeButton","Title","color","Body","es6","height","strokeDasharray","dataKey","cursor","fill","y","stroke","timestamp","parseInt","counter","setInterval","startCompetitor","resetCompetitor","deleteCompetitor","Component","CompetitionTable","map","components_CompetitorTableRow","Competition","_Competition","instance","reset","_duration","calibrationCompetitors","stateCallbacks","push","cb","exists","comp","comps","splice","update","calibrating","localStorage","setItem","stringify","str","encodeURIComponent","selectorFiles","file","reader","FileReader","onload","target","result","callbacks","revive","dumpToLocalStorage","bind","readAsText","newComp","Competitor","addCompetitor","CalibrationCompetitor","addCalibrationCompetitor","ErrorToast","setShow","dismiss","errorKey","date","Toast_default","onClose","autohide","toLocaleDateString","toLocaleTimeString","aria-live","aria-atomic","position","top","right","minWidth","minHeight","components_ErrorToast","Admin","durationInput","parseFloat","maxVolInput","toString","replace","addCompetitorInput","addCalibrationCompetitorInput","assertThisInitialized","handleChange","keyCode","record","document","prevProps","prevState","preventDefault","_i","_Object$keys","doesCompetitorNameAlreadyExists","competition","isCalibrationCompetitorNameAlreadyExists","components_Errors","react_router_dom","to","id","htmlFor","onSubmit","placeholder","components_CompetitionTable","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","error","competitorNameClass","cardBgClass","ratingClass","bounce","card","react_motions_min","components_CompetitorCard","CastlemeterComponent","context","checkRating","snapshot","shift","react_confetti_min_default","numberOfPieces","gravity","wind","recycle","canvasRef","react_svgmt","path","castle","selector","transform","_useWindowSize","useWindowSize","Castlemeter_CastlemeterComponent","assign","Helmet","meters_Castlemeter","components_CompetitionCards","components_Footer","Areas","ReactDOM","render","es","integration_react","loading","charSet","components_Heading","react_router","exact","component","View","getElementById","URL","process","origin","fetch","response","status","headers","get","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.5c9e52f0.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/castle-gradient.aaea71e5.svg\";","import React from \"react\";\n\nconst recordingDotStyle = {\n    dot: {\n        textShadow: \"0 0 8px #404040\",\n    }\n};\n\nfunction RecordingDot(props) {\n    const isActive = props.isActive;\n    const activeClass = isActive ? \"text-danger\" : \"text-info\";\n    return <span className={activeClass} style={recordingDotStyle.dot}>&#9673;</span>;\n}\n\nexport default RecordingDot\n","// @TODO\n// update repo: https://github.com/rt2zz/redux-persist-crosstab\n\n// @flow\nimport {KEY_PREFIX, REHYDRATE} from 'redux-persist/lib/constants'\nimport type {PersistConfig} from 'redux-persist/es/types'\nimport type {Store} from 'redux'\n\ntype CrosstabConfig = {\n    blacklist?: ?Array<string>,\n    keyPrefix?: ?string,\n    whitelist?: ?Array<string>,\n}\n\nfunction crosstabSync(store: Store, persistConfig?: PersistConfig, crosstabConfig?: CrosstabConfig) {\n    const blacklist: ?Array<string> = (crosstabConfig && crosstabConfig.blacklist) ? crosstabConfig.blacklist : null;\n    const whitelist: ?Array<string> = (crosstabConfig && crosstabConfig.whitelist) ? crosstabConfig.whitelist : null;\n    const keyPrefix: string = (crosstabConfig && crosstabConfig.keyPrefix) ? crosstabConfig.keyPrefix : KEY_PREFIX;\n\n    const {key}: { key: string } = persistConfig;\n\n    window.addEventListener('storage', handleStorageEvent, false)\n\n    function handleStorageEvent(e) {\n        if (e.key && e.key.indexOf(keyPrefix) === 0) {\n            if (e.oldValue === e.newValue) {\n                return\n            }\n\n            const statePartial: { [string]: string } = JSON.parse(e.newValue)\n\n            /* eslint-disable flowtype/no-weak-types */\n            const state: Object = Object.keys(statePartial).reduce((state, reducerKey) => {\n                /* eslint-enable flowtype/no-weak-types */\n                if (whitelist && whitelist.indexOf(reducerKey) === -1) {\n                    return state\n                }\n                if (blacklist && blacklist.indexOf(reducerKey) !== -1) {\n                    return state\n                }\n\n                state[reducerKey] = JSON.parse(statePartial[reducerKey])\n\n                return state\n            }, {})\n\n            store.dispatch({\n                key,\n                payload: state,\n                type: REHYDRATE,\n            })\n        }\n    }\n}\n\nexport default crosstabSync\n","import {combineReducers} from 'redux'\n\nimport {\n    ADD_COMPETITOR,\n    ADD_ERROR,\n    DELETE_COMPETITOR,\n    DISMISS_ALL_ERRORS,\n    DISMISS_ERROR,\n    HIDE_COMPETITOR,\n    INITIATE_VOLUMEMETER,\n    RESET_COMPETITOR,\n    SAVE_VALUE,\n    SET_DURATION,\n    SET_MAXVOL,\n    SET_TITLE,\n    SHOW_COMPETITOR,\n    START_RECORDING,\n    STOP_RECORDING,\n    SWITCH_BLANK,\n    UPDATE_RATING\n} from \"./constants\";\n\nconst initialStates = {\n    errors: {\n        byId: {}\n    },\n    control: {\n        showBlank: false\n    },\n    administration: {\n        title: 'Slammen im Schloss V',\n        maxVol: 1,\n        duration: 10000\n    },\n    voting: {\n        isInitialized: false,\n        activeCompetitor: null,\n        competitors: {\n            byId: {},\n            allIds: []\n        },\n        ratings: {}\n    }\n};\n\nconst administration = (state = initialStates.administration, action) => {\n    switch (action.type) {\n        case SET_TITLE:\n            return {\n                ...state,\n                title: action.title\n            };\n        case SET_DURATION:\n            return {\n                ...state,\n                duration: action.duration\n            };\n        case SET_MAXVOL:\n            return {\n                ...state,\n                maxVol: action.maxVol\n            };\n        default:\n            return state;\n    }\n};\n\nconst errors = (state = initialStates.errors, action) => {\n    switch (action.type) {\n        case ADD_ERROR:\n            return {\n                ...state,\n                byId: {\n                    ...state.byId,\n                    [action.time.getTime()]: {\n                        text: action.text,\n                        time: action.time,\n                    }\n                }\n            };\n        case DISMISS_ALL_ERRORS:\n            return {\n                ...state,\n                byId: {}\n            };\n        case DISMISS_ERROR:\n            const byId = {...state.byId};\n            byId[action.key] = undefined;\n            Object.keys(byId).forEach(key => byId[key] === undefined ? delete byId[key] : '');\n            return {\n                ...state,\n                byId\n            };\n        default:\n            return state;\n    }\n};\n\nconst control = (state = initialStates.control, action) => {\n    switch (action.type) {\n        case SWITCH_BLANK:\n            return {\n                ...state,\n                showBlank: !state.showBlank,\n            };\n        default:\n            return state;\n    }\n};\n\nconst voting = (state = initialStates.voting, action) => {\n    let ratings;\n    switch (action.type) {\n        case INITIATE_VOLUMEMETER:\n            return {\n                ...state,\n                isInitialized: true\n            };\n        case ADD_COMPETITOR:\n            return {\n                ...state,\n                activeCompetitor: (state.activeCompetitor === action.competitorKey ? null : state.activeCompetitor),\n                competitors: {\n                    byId: {\n                        ...state.competitors.byId,\n                        [action.competitorKey]: {\n                            name: action.competitorKey,\n                            isVisible: true,\n                            startedRecording: null,\n                            stoppedRecording: null,\n                            levels: [],\n                            timeLefts: [],\n                            measureDuration: null,\n                            timeLeft: null,\n                            interval: null,\n                        }\n                    },\n                    allIds: [...state.competitors.allIds, action.competitorKey]\n                }\n            };\n        case DELETE_COMPETITOR:\n            const byId = {...state.competitors.byId};\n            byId[action.competitorKey] = undefined;\n            Object.keys(byId).forEach(key => byId[key] === undefined ? delete byId[key] : '');\n            ratings = {...state.ratings};\n            ratings[action.competitorKey] = undefined;\n            Object.keys(ratings).forEach(key => ratings[key] === undefined ? delete ratings[key] : '');\n            return {\n                ...state,\n                competitors: {\n                    ...state.competitors,\n                    byId: {\n                        ...byId\n                    },\n                    allIds: [\n                        ...state.competitors.allIds.filter(key => key !== action.competitorKey),\n                    ]\n                },\n                ratings\n            };\n        case START_RECORDING:\n            return {\n                ...state,\n                activeCompetitor: action.competitorKey,\n                competitors: {\n                    ...state.competitors,\n                    byId: {\n                        ...state.competitors.byId,\n                        [action.competitorKey]: {\n                            ...state.competitors.byId[action.competitorKey],\n                            interval: action.interval,\n                            measureDuration: action.measureDuration,\n                            startedRecording: action.startedRecording\n                        }\n                    }\n                }\n            };\n        case RESET_COMPETITOR:\n            ratings = {...state.ratings};\n            ratings[action.competitorKey] = undefined;\n            Object.keys(ratings).forEach(key => ratings[key] === undefined ? delete ratings[key] : '');\n            return {\n                ...state,\n                activeCompetitor: (state.activeCompetitor === action.competitorKey ? null : state.activeCompetitor),\n                competitors: {\n                    ...state.competitors,\n                    byId: {\n                        ...state.competitors.byId,\n                        [action.competitorKey]: {\n                            ...state.competitors.byId[action.competitorKey],\n                            isVisible: true,\n                            startedRecording: null,\n                            stoppedRecording: null,\n                            levels: [],\n                            timeLefts: [],\n                            measureDuration: null,\n                            timeLeft: null,\n                            interval: null,\n                        }\n                    }\n                },\n                ratings\n            };\n        case SHOW_COMPETITOR:\n            return {\n                ...state,\n                competitors: {\n                    ...state.competitors,\n                    byId: {\n                        ...state.competitors.byId,\n                        [action.competitorKey]: {\n                            ...state.competitors.byId[action.competitorKey],\n                            isVisible: true,\n                        }\n                    }\n                }\n            };\n        case HIDE_COMPETITOR:\n            return {\n                ...state,\n                competitors: {\n                    ...state.competitors,\n                    byId: {\n                        ...state.competitors.byId,\n                        [action.competitorKey]: {\n                            ...state.competitors.byId[action.competitorKey],\n                            isVisible: false,\n                        }\n                    }\n                }\n            };\n        case SAVE_VALUE:\n            return {\n                ...state,\n                competitors: {\n                    ...state.competitors,\n                    byId: {\n                        ...state.competitors.byId,\n                        [action.competitorKey]: {\n                            ...state.competitors.byId[action.competitorKey],\n                            timeLeft: action.timeLeft,\n                            levels: [\n                                ...state.competitors.byId[action.competitorKey].levels,\n                                action.value\n                            ],\n                            timeLefts: [\n                                ...state.competitors.byId[action.competitorKey].timeLefts,\n                                action.timeLeft\n                            ],\n                        }\n                    }\n                }\n            };\n        case STOP_RECORDING:\n            return {\n                ...state,\n                activeCompetitor: \"\",\n                competitors: {\n                    ...state.competitors,\n                    byId: {\n                        ...state.competitors.byId,\n                        [action.competitorKey]: {\n                            ...state.competitors.byId[action.competitorKey],\n                            timeLeft: 0,\n                            stoppedRecording: action.stoppedRecording,\n                        }\n                    }\n                }\n            };\n        case UPDATE_RATING:\n            return {\n                ...state,\n                ratings: {\n                    ...state.ratings,\n                    [action.competitorKey]: action.rating\n                }\n            };\n        default:\n            return state;\n    }\n};\n\nexport default combineReducers({\n    control,\n    administration,\n    voting,\n    errors,\n})\n","export const ADD_COMPETITOR = 'ADD_COMPETITOR';\nexport const DELETE_COMPETITOR = 'DELETE_COMPETITOR';\nexport const RESET_COMPETITOR = 'RESET_COMPETITOR ';\nexport const SHOW_COMPETITOR = 'SHOW_COMPETITOR';\nexport const HIDE_COMPETITOR = 'HIDE_COMPETITOR';\n\nexport const START_RECORDING = 'START_RECORDING';\nexport const STOP_RECORDING = 'STOP_RECORDING';\nexport const RECORD_VALUE = 'RECORD_VALUE';\nexport const SAVE_VALUE = 'SAVE_VALUE';\nexport const UPDATE_RATING = 'UPDATE_RATING';\nexport const UPDATE_ALL_RATINGS = 'UPDATE_ALL_RATINGS';\n\nexport const SET_TITLE = 'SET_TITLE';\nexport const SET_DURATION = 'SET_DURATION';\nexport const SET_MAXVOL = 'SET_MAXVOL';\n\nexport const SWITCH_BLANK = 'SWITCH_BLANK';\n\nexport const ADD_ERROR = 'ADD_ERROR';\nexport const DISMISS_ERROR = 'DISMISS_ERROR';\nexport const DISMISS_ALL_ERRORS = 'DISMISS_ALL_ERRORS';\n\nexport const INITIATE_VOLUMEMETER = 'INITIATE_VOLUMEMETER';\n","import {applyMiddleware, compose, createStore} from \"redux\";\nimport {persistReducer, persistStore} from 'redux-persist'\nimport storage from 'redux-persist/lib/storage' // defaults to localStorage for web\nimport crosstabSync from \"./utils/crosstabSync\"\nimport rootReducer from \"./reducers\";\nimport thunk from \"redux-thunk\";\n\nconst persistConfig = {\n    key: 'root',\n    storage,\n};\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer)\nconst composeEnhancer = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nexport const store = createStore(\n    persistedReducer,\n    composeEnhancer(applyMiddleware(thunk)),\n);\n\ncrosstabSync(store, persistConfig);\n\nexport const persistor = persistStore(store);\n","import {store} from \"../store\";\n\n/**\n *\n * @param name\n * @returns {boolean}\n */\nexport function doesCalibrationCompetitorNameAlreadyExists(name) {\n    let exists = false;\n    store.getState().voting.calibrationCompetitors.forEach(function (comp) {\n        if (name === comp.name) {\n            exists = true;\n        }\n    });\n    return exists;\n}\n\n/**\n *\n * @param name\n * @returns {boolean}\n */\nexport function doesCompetitorNameAlreadyExists(name) {\n    let exists = false;\n    const competitors = store.getState().voting.competitors.byId;\n    if (competitors) {\n        for (const key of Object.keys(competitors)) {\n            if (competitors[key].name === name) {\n                exists = true;\n            }\n        }\n    }\n    return exists;\n}\n\nexport function getLeader() {\n    const competitors = store.getState().voting.competitors.allIds;\n    let leadingCompetitor = null;\n    if (competitors[0]) {\n        leadingCompetitor = competitors[0];\n        competitors.forEach(function (compKey) {\n            if (getRatingFromKey(compKey) >= getRatingFromKey(leadingCompetitor)) {\n                leadingCompetitor = compKey;\n            }\n        });\n    }\n    if (leadingCompetitor && getRatingFromKey(leadingCompetitor) !== 0) {\n        return leadingCompetitor;\n    } else {\n        return null;\n    }\n}\n\nexport function getVisibleLeader() {\n    const competitorKeys = store.getState().voting.competitors.allIds;\n    let leadingCompetitor = getFirstVisibleCompetitorKey();\n    if (leadingCompetitor) {\n        leadingCompetitor = competitorKeys[0];\n        competitorKeys.forEach(function (compKey) {\n            if (isVisibleFromKey(compKey)\n                && getRatingFromKey(compKey) >= getRatingFromKey(leadingCompetitor)) {\n                leadingCompetitor = compKey;\n            }\n        });\n    }\n    if (leadingCompetitor && getRatingFromKey(leadingCompetitor) !== 0) {\n        return leadingCompetitor;\n    } else {\n        return null;\n    }\n}\n\nfunction isVisibleFromKey(competitorKey:string) {\n    const competitors = store.getState().voting.competitors.byId;\n    return competitors[competitorKey] && competitors[competitorKey].isVisible;\n}\n\nfunction getFirstVisibleCompetitorKey() {\n    const competitorKeys = store.getState().voting.competitors.allIds;\n    for (const competitorKey of competitorKeys) {\n        if (isVisibleFromKey(competitorKey)) {\n            return competitorKey;\n        }\n    }\n    return null;\n}\n\nexport function getRatingFromKey(competitorKey: string) {\n    const state = store.getState();\n    const competitor = state.voting.competitors.byId[competitorKey];\n    if (competitor.levels.length === 0) {\n        return 0;\n    } else {\n        let levelSum = competitor.levels.reduce((pv, cv) => pv + cv, 0);\n        const avgVol = (levelSum / competitor.levels.length);\n        return getRatingFromVolume(avgVol);\n    }\n}\n\nexport function getRatingFromVolume(volume: number) {\n    const state = store.getState();\n    if (volume) {\n        return (volume / state.administration.maxVol);\n    }\n}\n\nexport function getAverageVolumeFromKey(competitorKey: string) {\n    const state = store.getState();\n    const competitor = state.voting.competitors.byId[competitorKey];\n    if (competitor.levels.length === 0) {\n        return 0;\n    } else {\n        let levelSum = competitor.levels.reduce((pv, cv) => pv + cv, 0);\n        return (levelSum / competitor.levels.length);\n    }\n}\n","class VolumemeterUtils {\n\n    static initiate(clipLevel, averaging, clipLag) {\n        let AudioContext = window.AudioContext || window.webkitAudioContext;\n        window.audioContext = new AudioContext();\n        window.processor = window.audioContext.createScriptProcessor(512);\n        window.processor.onaudioprocess = VolumemeterUtils.volumeAudioProcess;\n        window.processor.clipping = false;\n        window.processor.lastClip = 0;\n        window.processor.volume = 0;\n        window.processor.clipLevel = clipLevel || 0.98;\n        window.processor.averaging = averaging || 0.95;\n        window.processor.clipLag = clipLag || 750;\n\n        console.log(\"AudioContext\", window.audioContext);\n\n        window.processor.connect(window.audioContext.destination);\n\n        window.processor.checkClipping =\n            function () {\n                if (!window.processor.clipping)\n                    return false;\n                if ((window.processor.lastClip + window.processor.clipLag) < window.performance.now())\n                    window.processor.clipping = false;\n                return window.processor.clipping;\n            };\n\n        window.processor.shutdown =\n            function () {\n                VolumemeterUtils.disconnect();\n                window.processor.onaudioprocess = null;\n            };\n\n        try {\n            // monkeypatch getUserMedia\n            navigator.getUserMedia =\n                navigator.getUserMedia ||\n                navigator.webkitGetUserMedia ||\n                navigator.mozGetUserMedia;\n\n            // ask for an audio input\n            navigator.getUserMedia(\n                {\n                    \"audio\": {\n                        \"mandatory\": {\n                            \"googEchoCancellation\": \"false\",\n                            \"googAutoGainControl\": \"false\",\n                            \"googNoiseSuppression\": \"false\",\n                            \"googHighpassFilter\": \"false\"\n                        },\n                        \"optional\": []\n                    },\n                }, VolumemeterUtils.gotStream, VolumemeterUtils.didntGetStream);\n        } catch (e) {\n            console.log('getUserMedia threw exception :' + e);\n        }\n\n    }\n\n    static didntGetStream() {\n        console.log('Stream generation failed.');\n    }\n\n    static gotStream(stream) {\n        // Create an AudioNode from the stream.\n        let mediaStreamSource = window.audioContext.createMediaStreamSource(stream);\n        mediaStreamSource.connect(window.processor);\n    }\n\n    static volumeAudioProcess(event) {\n        const buf = event.inputBuffer.getChannelData(0);\n        let sum = 0;\n        let x;\n\n        // Do a root-mean-square on the samples: sum up the squares...\n        for (let i = 0; i < buf.length; i++) {\n            x = buf[i];\n            if (Math.abs(x) >= window.processor.clipLevel) {\n                window.processor.clipping = true;\n                window.processor.lastClip = window.performance.now();\n            }\n            sum += x * x;\n        }\n\n        // ... then take the square root of the sum.\n        const rms = Math.sqrt(sum / buf.length);\n\n        // Now smooth this out with the averaging factor applied\n        // to the previous sample - take the max here because we\n        // want \"fast attack, slow release.\"\n        window.processor.volume = Math.max(rms, window.processor.volume * window.processor.averaging);\n    }\n\n    static getVolume() {\n        if (window.processor) {\n            return window.processor.volume;\n        } else {\n            return null;\n        }\n    }\n}\n\nexport default VolumemeterUtils\n","import {getRatingFromKey} from \"./utils/competitionUtils\";\nimport {store} from \"./store\";\nimport {\n    ADD_COMPETITOR,\n    ADD_ERROR,\n    DELETE_COMPETITOR,\n    DISMISS_ALL_ERRORS,\n    DISMISS_ERROR,\n    HIDE_COMPETITOR,\n    INITIATE_VOLUMEMETER,\n    RESET_COMPETITOR,\n    SAVE_VALUE,\n    SET_DURATION,\n    SET_MAXVOL,\n    SET_TITLE,\n    SHOW_COMPETITOR,\n    START_RECORDING,\n    STOP_RECORDING,\n    SWITCH_BLANK,\n    UPDATE_RATING\n} from \"./constants\";\nimport VolumemeterUtils from \"./utils/volumemeterUtils\";\n\nexport const switchBlank = () => ({\n    type: SWITCH_BLANK,\n});\n\nexport const addCompetitor = (competitorKey: string) => ({\n    type: ADD_COMPETITOR,\n    competitorKey\n});\n\nexport const deleteCompetitor = (competitorKey: string) => {\n    clearInterval(\n        store.getState().voting.competitors.byId[competitorKey].interval\n    );\n    return ({\n        type: DELETE_COMPETITOR,\n        competitorKey\n    });\n};\n\nexport const startCompetitor = (competitorKey: string) => {\n    return (dispatch, getState) => {\n\n        dispatch(initiateVolumemeter());\n\n        const state = getState();\n\n        if (state.voting.competitors.byId[competitorKey].timeLefts.length > 0) {\n            dispatch(addError(\n                new Date(),\n                \"Competitor was already started once.\"\n            ));\n        } else {\n            let timestamp = Math.floor(Date.now());\n            const startedRecording = parseInt(timestamp, 10);\n\n            let counter = 0;\n            const interval = setInterval(\n                () => {\n                    if (counter > 15) { // @TODO hacky, don't use first 10 values\n                        dispatch(recordValue(competitorKey));\n                    }\n                    counter++;\n                },\n                10 // ms, normally 10\n            );\n\n            dispatch(startRecording(\n                competitorKey,\n                interval,\n                state.administration.duration,\n                startedRecording,\n                true\n            ));\n        }\n    }\n};\n\nexport const resetCompetitor = (competitorKey: string) => {\n    clearInterval(\n        store.getState().voting.competitors.byId[competitorKey].interval\n    );\n    return ({\n        type: RESET_COMPETITOR,\n        competitorKey\n    });\n};\n\nexport const showCompetitor = (competitorKey: string) => ({\n    type: SHOW_COMPETITOR,\n    competitorKey\n});\n\nexport const hideCompetitor = (competitorKey: string) => ({\n    type: HIDE_COMPETITOR,\n    competitorKey\n});\n\nexport const startRecording\n    = (competitorKey: string,\n       interval,\n       duration: number,\n       startedRecording: Date,\n       isActive: boolean) => ({\n    type: START_RECORDING,\n    competitorKey,\n    interval,\n    duration,\n    startedRecording,\n    isActive,\n});\n\nexport const recordValue = (competitorKey: string) => {\n    return (dispatch, getState) => {\n        const state = getState();\n        const competitor = state.voting.competitors.byId[competitorKey];\n\n        let interval = competitor.interval;\n\n        let timeLeft =\n            state.administration.duration -\n            (Math.floor(Date.now()) - competitor.startedRecording);\n\n        if (timeLeft > 0) {\n            const volume = VolumemeterUtils.getVolume();\n            if (volume !== null) {\n                dispatch(saveValue(\n                    competitorKey,\n                    volume,\n                    timeLeft,\n                ));\n                dispatch(updateRating(\n                    competitorKey,\n                    getRatingFromKey(competitorKey),\n                ));\n            } else {\n                dispatch(addError(\n                    new Date(),\n                    \"Volumemeter not initialized!\"\n                ))\n            }\n        } else {\n            clearInterval(interval);\n            const stoppedRecording = Math.floor(Date.now());\n            dispatch(stopRecording(\n                competitorKey,\n                stoppedRecording,\n            ));\n        }\n    }\n};\n\nexport const updateAllRatings = (competitorKey: string) => {\n    return (dispatch, getState) => {\n        const state = getState();\n        Object.keys(state.voting.ratings).forEach(competitorKey => {\n            dispatch(updateRating(\n                competitorKey,\n                getRatingFromKey(competitorKey),\n            ));\n        });\n    }\n};\n\nexport const saveValue\n    = (competitorKey: string,\n       value: number,\n       timeLeft: number) => ({\n    type: SAVE_VALUE,\n    competitorKey,\n    value,\n    timeLeft,\n});\n\nexport const updateRating\n    = (competitorKey: string,\n       rating: number) => ({\n    type: UPDATE_RATING,\n    competitorKey,\n    rating,\n});\n\nexport const stopRecording\n    = (competitorKey: string,\n       stoppedRecording: Date) => ({\n    type: STOP_RECORDING,\n    competitorKey,\n    stoppedRecording,\n});\n\nexport const setTitle = (title: string) => ({\n    type: SET_TITLE,\n    title\n});\n\nexport const setDuration = (duration: number) => ({\n    type: SET_DURATION,\n    duration\n});\n\nexport const setMaxvol = (maxVol: number) => ({\n    type: SET_MAXVOL,\n    maxVol\n});\n\nexport const addError = (time: Date, text: string) => ({\n    type: ADD_ERROR,\n    text,\n    time,\n});\n\nexport const dismissError = (key: number) => ({\n    type: DISMISS_ERROR,\n    key,\n});\n\nexport const dismissAllErrors = () => ({\n    type: DISMISS_ALL_ERRORS,\n});\n\nexport const initiateVolumemeter = () => {\n    VolumemeterUtils.initiate();\n    return ({\n        type: INITIATE_VOLUMEMETER,\n    });\n};\n","import React, {Component} from 'react';\nimport RecordingDot from \"./RecordingDot\";\nimport {connect} from \"react-redux\";\nimport {\n    deleteCompetitor,\n    hideCompetitor,\n    resetCompetitor,\n    showCompetitor,\n    startCompetitor\n} from \"../actions\";\nimport {\n    CartesianGrid,\n    ReferenceLine,\n    ResponsiveContainer,\n    Scatter,\n    ScatterChart,\n    Tooltip,\n    XAxis,\n    YAxis\n} from \"recharts\";\nimport {getAverageVolumeFromKey, getRatingFromKey} from \"../utils/competitionUtils\";\nimport Button from \"react-bootstrap/Button\";\nimport {Modal} from \"react-bootstrap\";\nimport Form from \"react-bootstrap/Form\";\n\nclass CompetitorTableRow extends Component<{}> {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            showModal: false,\n        };\n    }\n\n    handleShow = () => {\n        this.setState({\n            showModal: !this.state.showModal\n        })\n    };\n\n    changeVisibility = () => {\n        const competitorKey = this.props.competitor;\n        const competitor = this.props.competitors.byId[competitorKey];\n        if (competitor.isVisible) {\n            this.props.dispatch(hideCompetitor(competitorKey))\n        } else {\n            this.props.dispatch(showCompetitor(competitorKey))\n        }\n    };\n\n    render() {\n        const competitorKey = this.props.competitor;\n        const competitor = this.props.competitors.byId[competitorKey];\n        const rating = getRatingFromKey(competitorKey);\n        let data = [];\n        competitor.levels.forEach((value, index) => {\n            data = [\n                ...data,\n                {\n                    timeLeft: competitor.timeLefts[index],\n                    level: value\n                }\n            ]\n        });\n        return (\n            <React.Fragment>\n                <tr key={competitorKey} className={this.props.addClass}>\n                    <td>\n                        <RecordingDot isActive={competitorKey === this.props.activeCompetitor}/>\n                    </td>\n                    <td>{competitorKey}</td>\n                    <td>{rating ? rating.toFixed(4) : '–'}</td>\n                    <td>{competitor.timeLefts && competitor.timeLefts.length > 0\n                        ? (competitor.timeLeft / 1000).toFixed(3) : '–'}\n                    </td>\n                    <td>\n                        <Form>\n                            <Form.Check\n                                type=\"checkbox\" /*why switch doesnt work?*/\n                                checked={competitor.isVisible}\n                                onChange={this.changeVisibility}\n                            />\n                        </Form>\n                    </td>\n                    <td>\n                        {(this.props.ratings && this.props.ratings.hasOwnProperty(competitorKey))\n                            ? (\n                                <React.Fragment>\n                                    <Button variant=\"info\" onClick={this.handleShow}>Show Data</Button>\n                                    <Modal\n                                        show={this.state.showModal}\n                                        size={\"xl\"}\n                                        onHide={this.handleShow}\n                                        width={900}\n                                        centered>\n                                        <Modal.Header closeButton>\n                                            <Modal.Title style={{color: 'black'}}>Data\n                                                of {competitor.name}</Modal.Title>\n                                        </Modal.Header>\n                                        <Modal.Body>\n                                            <ResponsiveContainer width=\"100%\" height={400}>\n                                                <ScatterChart>\n                                                    <CartesianGrid strokeDasharray=\"1 1\"/>\n                                                    <XAxis dataKey=\"timeLeft\" name=\"timeLeft\"/>\n                                                    <YAxis dataKey=\"level\" name=\"level\"/>\n                                                    <Tooltip cursor={{strokeDasharray: '3 3'}}/>\n                                                    <Scatter name=\"Levels\" data={data} fill=\"#8884d8\"/>\n                                                    <ReferenceLine y={getAverageVolumeFromKey(competitorKey)} stroke=\"red\"/>\n                                                </ScatterChart>\n                                            </ResponsiveContainer>\n                                        </Modal.Body>\n                                    </Modal>\n                                </React.Fragment>\n                            )\n                            : '–'\n                        }\n                    </td>\n                    <td>\n                        <input type=\"button\" className=\"form-control btn btn-primary\" value=\"Start\"\n                               onClick={() => this.props.dispatch(startCompetitor(competitorKey, this.props.measureDuration))}/>\n                    </td>\n                    <td>\n                        <input type=\"button\" className=\"form-control btn btn-warning\" value=\"Reset\"\n                               onClick={() => this.props.dispatch(resetCompetitor(competitorKey))}/>\n                    </td>\n                    <td>\n                        <input type=\"button\" className=\"form-control btn btn-danger\" value=\"Delete\"\n                               onClick={() => this.props.dispatch(deleteCompetitor(competitorKey))}/>\n                    </td>\n                </tr>\n            </React.Fragment>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    competitors: state.voting.competitors,\n    activeCompetitor: state.voting.activeCompetitor,\n    ratings: state.voting.ratings,\n    measureDuration: state.administration.duration\n});\n\nexport default connect(mapStateToProps)(CompetitorTableRow)\n","import React, {Component} from 'react'\nimport CompetitorTableRow from \"./CompetitorTableRow\";\nimport {connect} from \"react-redux\";\nimport {getLeader} from \"../utils/competitionUtils\";\n\nclass CompetitionTable extends Component {\n    render() {\n        return (\n            <div>\n                Leading competitor is displayed red.\n                <table className=\"table table-dark   table-striped table-hover\">\n                    <thead>\n                    <tr>\n                        <td>Status</td>\n                        <td>Name</td>\n                        <td>Rating</td>\n                        <td>Time left</td>\n                        <td>Visibility</td>\n                        <td>Data</td>\n                        <td>Start</td>\n                        <td>Reset</td>\n                        <td>Delete</td>\n                    </tr>\n                    </thead>\n                    <tbody>\n                    {this.props.competitors.byId && Object.keys(this.props.competitors.byId).length > 0 && Object.keys(this.props.competitors.byId).map(\n                        key =>\n                            <React.Fragment key={key}>\n                                <CompetitorTableRow competitor={key} addClass={((key === getLeader()) ? 'text-danger' : '')} />\n                            </React.Fragment>)\n                    }\n                    </tbody>\n                </table>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    competitors: state.voting.competitors,\n});\n\nexport default connect(mapStateToProps)(CompetitionTable);\n","import Competitor from './Competitor';\nimport CalibrationCompetitor from \"./CalibrationCompetitor\";\n\nclass _Competition {\n    constructor() {\n        if (!_Competition.instance) {\n\n            this.reset();\n\n            _Competition.instance = this;\n        }\n        return _Competition.instance;\n    }\n\n    reset() {\n        this.competitors = [];\n        this._duration = 10000;\n        this.calibrationCompetitors = [];\n        this.maxVol = 1;\n        this.stateCallbacks = [];\n    }\n\n    /**\n     *\n     * @param {Competitor} competitor\n     */\n    addCompetitor(competitor) {\n        this.competitors.push(competitor);\n    }\n\n    /**\n     *\n     * @param {CalibrationCompetitor} competitor\n     */\n    addCalibrationCompetitor(competitor) {\n        this.calibrationCompetitors.push(competitor);\n    }\n\n    get duration() {\n        return this._duration;\n    }\n\n    set duration(value) {\n        this._duration = parseInt(value, 10);\n    }\n\n    update() {\n        this.stateCallbacks.forEach(function (cb) {\n            if (cb) {\n                cb();\n            }\n        })\n    }\n\n    /**\n     *\n     * @param {string} name\n     * @returns {boolean}\n     */\n    isCompetitorNameAlreadyExists(name) {\n        let exists = false;\n        this.competitors.forEach(function (comp) {\n            if (name === comp.name) {\n                exists = true;\n            }\n        });\n        return exists;\n    }\n\n    /**\n     *\n     * @param name\n     * @returns {boolean}\n     */\n    isCalibrationCompetitorNameAlreadyExists(name) {\n        let exists = false;\n        this.calibrationCompetitors.forEach(function (comp) {\n            if (name === comp.name) {\n                exists = true;\n            }\n        });\n        return exists;\n    }\n\n    removeCompetitor(competitor) {\n        this.competitors.forEach(function (comp, index, comps) {\n            if (competitor === comp) {\n                comps.splice(index, 1);\n            }\n        });\n        this.update();\n    }\n\n    removeCalibrationCompetitor(competitor) {\n        this.calibrationCompetitors.forEach(function (comp, index, comps) {\n            if (competitor === comp) {\n                comps.splice(index, 1);\n            }\n        });\n        this.update();\n    }\n\n\n    /**\n     *\n     * @returns {Competitor}\n     */\n    getActiveCompetitor() {\n        let activeCompetitor = null;\n        this.competitors.forEach(function (comp) {\n            if (comp.isActive) {\n                activeCompetitor = comp;\n            }\n        });\n        return activeCompetitor;\n    }\n\n    getActiveCalibrationCompetitor() {\n        let activeCompetitor = null;\n        this.calibrationCompetitors.forEach(function (comp) {\n            if (comp.isActive) {\n                activeCompetitor = comp;\n            }\n        });\n        return activeCompetitor;\n    }\n\n    getLeader() {\n        let leadingCompetitor = null;\n        if (this.competitors[0]) {\n            leadingCompetitor = this.competitors[0];\n            this.competitors.forEach(function (comp, index, comps) {\n                if (comp.rating >= leadingCompetitor.rating) {\n                    leadingCompetitor = comp;\n                }\n            });\n        }\n        if (leadingCompetitor && leadingCompetitor.rating !== 0) {\n            return leadingCompetitor;\n        }\n        else {\n            return null;\n        }\n    }\n\n    isCalibrating() {\n        let calibrating = false;\n        this.calibrationCompetitors.forEach(function (comp) {\n            if (comp.isActive) {\n                calibrating = true;\n            }\n        });\n        return calibrating;\n    }\n\n    dumpToLocalStorage() {\n        localStorage.setItem('competition', JSON.stringify(this));\n    }\n\n    getJsonDateUri() {\n        let str = JSON.stringify(this, null, '\\t');\n        return 'data:application/json;charset=utf-8,' + encodeURIComponent(str);\n    }\n\n    /**\n     *\n     * @param selectorFiles FileList\n     */\n    reviveFromFileList(selectorFiles) {\n        let file = selectorFiles[0];\n        let reader = new FileReader();\n        reader.onload = function (e) {\n            let comp = JSON.parse(e.target.result);\n            if (comp != null) {\n                let callbacks = this.stateCallbacks;\n                this.revive( comp );\n                this.dumpToLocalStorage();\n                this.stateCallbacks = callbacks;\n                this.update();\n            }\n        }.bind(this);\n        reader.readAsText(file);\n    }\n\n    /**\n     *\n     * @param data\n     * @returns {_Competition}\n     */\n    revive(data) {\n        this.reset();\n        this._duration = data._duration;\n        this.maxVol = data.maxVol;\n        data.competitors.forEach((comp) => {\n            let newComp = new Competitor();\n            newComp.revive(comp);\n            this.addCompetitor(newComp);\n        });\n        data.calibrationCompetitors.forEach((comp) => {\n            let newComp = new CalibrationCompetitor();\n            newComp.revive(comp);\n            this.addCalibrationCompetitor(newComp);\n        });\n        this.update();\n    }\n\n}\n\nconst Competition = new _Competition();\n\nexport default Competition\n","import React, {Component} from 'react';\nimport Toast from \"react-bootstrap/Toast\";\nimport {connect} from \"react-redux\";\nimport {dismissError} from \"../actions\";\n\n\nclass ErrorToast extends Component<{}> {\n    constructor(props) {\n        super(props);\n        this.state = {\n            show: true,\n        }\n    }\n\n    setShow = (show: boolean)  => {\n      this.setState({show});\n    };\n\n    dismiss = () => {\n        this.props.dispatch(dismissError(this.props.errorKey));\n        this.setShow(false);\n    };\n\n    render() {\n        const date = this.props.time && new Date(this.props.time);\n        return (\n            <Toast onClose={() => this.dismiss()} show={this.state.show} autohide={false} className={\"bg-danger\"}>\n                <Toast.Header>\n                    <strong className=\"mr-auto\">Error</strong>\n                    <small>\n                        {\n                            date &&\n                            date.toLocaleDateString('de-DE') + \" \" + date.toLocaleTimeString('de-DE')\n                        }\n                    </small>\n                </Toast.Header>\n                <Toast.Body>{this.props.text && this.props.text}</Toast.Body>\n            </Toast>\n        );\n    }\n}\n\nexport default connect()(ErrorToast)\n","import React from \"react\";\nimport {connect} from \"react-redux\";\nimport ErrorToast from \"./ErrorToast\";\n\nfunction Errors(props) {\n    return (\n        <div aria-live=\"polite\" aria-atomic=\"true\"\n             style={{\n                 \"position\": \"absolute\",\n                 \"top\": \"2em\",\n                 \"right\": \"2em\",\n                 \"minWidth\": \"500px\",\n                 \"minHeight\": \"200px\"\n             }}>\n            <div style={{\"position\": \"absolute\", \"top\": \"0\", \"right\": \"0\"}}>\n                {Object.keys(props.errors.byId).map(\n                    errorKey => (\n                        <ErrorToast key={errorKey}\n                                    errorKey={errorKey}\n                                    text={props.errors.byId[errorKey].text}\n                                    time={props.errors.byId[errorKey].time}/>\n                    )\n                )}\n            </div>\n        </div>\n    );\n}\n\nconst mapStateToProps = state => ({\n    errors: state.errors,\n});\n\nexport default connect(mapStateToProps)(Errors)\n","import React, {Component} from 'react';\nimport CompetitionTable from \"../components/CompetitionTable\";\nimport Competition from '../entities/Competition';\nimport CalibrationCompetitor from \"../entities/CalibrationCompetitor\";\nimport {connect} from \"react-redux\";\nimport {\n    addCompetitor,\n    addError,\n    dismissAllErrors,\n    initiateVolumemeter,\n    setDuration,\n    setMaxvol,\n    switchBlank,\n    updateAllRatings\n} from \"../actions\";\nimport {doesCompetitorNameAlreadyExists} from \"../utils/competitionUtils\";\nimport {Link} from \"react-router-dom\";\nimport Form from \"react-bootstrap/Form\";\nimport Errors from \"../components/Errors\";\nimport Button from \"react-bootstrap/Button\";\n\n\nclass Admin extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            addCompetitorInput: '',\n            addCalibrationCompetitorInput: 'Calibration 1',\n            durationInput: props.duration ? props.duration / 1000 : 10,\n            maxVolInput: props.maxVol,\n        };\n\n        this.addCompetitor = this.addCompetitor.bind(this);\n        this.addCalibrationCompetitor = this.addCalibrationCompetitor.bind(this);\n//        this.changeSettings = this.changeSettings.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n\n    }\n\n    keyboardFunction(event) {\n        if (event.keyCode === 71) {\n            this.setState(\n                {\n                    record: 'def'\n                }\n            )\n        }\n    }\n\n    componentDidMount() {\n        document.title = \"Admin | Applaus-O-Meter\";\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        Competition.dumpToLocalStorage();\n    }\n\n    addCompetitor(event) {\n        event.preventDefault();\n        let name = this.state.addCompetitorInput;\n        if (!(name === \"\") && !doesCompetitorNameAlreadyExists(name)) {\n            this.props.dispatch(addCompetitor(name));\n        } else {\n            this.props.dispatch(\n                addError(\n                    new Date(),\n                    \"Error adding competitor. Does name already exist?\"\n                )\n            );\n        }\n    }\n\n    addCalibrationCompetitor(event) {\n        event.preventDefault();\n        let name = this.state.addCalibrationCompetitorInput;\n        if (!this.state.competition.isCalibrationCompetitorNameAlreadyExists(name) && !(name === \"\")) {\n            let competition = this.state.competition;\n            competition.addCalibrationCompetitor(new CalibrationCompetitor(name));\n            this.setState({\n                competition: competition\n            });\n        }\n    }\n\n    // Deprecated\n    // changeSettings(event) {\n    //     event.preventDefault();\n    //     let competition = this.state.competition;\n    //     // competition.duration = this.state.durationInput * 1000;\n    //     competition.maxVol = parseFloat((this.state.maxVolInput).toString().replace(',', '.'));\n    //     this.setState({\n    //         competition: competition\n    //     });\n    // }\n\n    setDuration = () => {\n        this.props.dispatch(\n            setDuration(this.state.durationInput * 1000)\n        );\n    };\n\n    setMaxvol = () => {\n        this.props.dispatch(\n            setMaxvol(\n                parseFloat((this.state.maxVolInput).toString().replace(',', '.'))\n            )\n        );\n        this.props.dispatch(updateAllRatings());\n    };\n\n    handleChange(e) {\n        this.setState({[e.target.name]: e.target.value});\n    }\n\n\n    render() {\n        return (\n            <div className=\"container-fluid p-5\">\n                <Errors/>\n\n                <header className={\"pb-4\"}>\n                    <h2>Welcome to Applaus-O-Meter administration</h2>\n                    <p>To get started, add some competitors.</p>\n                    <Link to=\"/view\" className=\"btn btn-primary\">\n                        Open view &#8680;\n                    </Link>\n                </header>\n\n                <div id=\"control\" className=\"mt-4\">\n                    <h3>Control</h3>\n                    <Form>\n                        <div className=\"row\">\n                            <div className=\"col-2\">\n                                <label\n                                    htmlFor=\"initiateVolumeter\">\n                                    Initiate Volumemeter\n                                </label>\n                            </div>\n                            <div className=\"col-8\">\n                                <Button\n                                    variant=\"secondary\"\n                                    onClick={() => this.props.dispatch(initiateVolumemeter())}\n                                >\n                                    Initiate Volumemeter\n                                </Button>\n                            </div>\n                        </div>\n                        <div className=\"row\">\n                            <div className=\"col-2\">\n                                <label\n                                    htmlFor=\"dismissErrors\">\n                                    Dismiss all errors\n                                </label>\n                            </div>\n                            <div className=\"col-8\">\n                                <Button\n                                    variant=\"danger\"\n                                    onClick={() => this.props.dispatch(dismissAllErrors())}\n                                >\n                                    Dismiss all errors\n                                </Button>\n                            </div>\n                        </div>\n                        <div className=\"row\">\n                            <div className=\"col-2\">\n                                <label\n                                    htmlFor=\"showBlankInput\">\n                                    Show blank<br/>(currently {this.props.showBlank ? 'yes' : 'no'})\n                                </label>\n                            </div>\n                            <div className=\"col-8 d-flex align-items-center\">\n                                <Form.Check\n                                    type=\"checkbox\" /*why switch doesnt work?*/\n                                    checked={this.props.showBlank}\n                                    onChange={() => this.props.dispatch(switchBlank())}\n                                />\n                            </div>\n                        </div>\n                    </Form>\n                </div>\n\n\n                <div id=\"competitors\" className=\"border border-secondary p-2 bg-primary rounded\">\n                    <h3>Competitors</h3>\n                    <form\n                        className=\"row form-group\"\n                        onSubmit={e => {\n                            e.preventDefault()\n                        }}\n                    >\n                        <div className=\"col-10\">\n                            <input type=\"text\" className=\"form-control w-100\"\n                                   name=\"addCompetitorInput\" value={this.state.addCompetitorInput}\n                                   placeholder=\"Competitor name\"\n                                   onChange={this.handleChange}/>\n                        </div>\n                        <div className=\"col-2\">\n                            <input type=\"button\" className=\"form-control btn btn-success\"\n                                   value=\"Add!\" onClick={this.addCompetitor}/>\n                        </div>\n                    </form>\n\n                    <div>\n                        <CompetitionTable competition={this.state.competition}/>\n                    </div>\n                </div>\n\n                <div id=\"settings\" className=\"mt-4\">\n                    <h3>Settings</h3>\n                    <form\n                        className=\"form-group\"\n                        onSubmit={e => {\n                            e.preventDefault()\n                        }}>\n                        <div className=\"row\">\n                            <div className=\"col-2\">\n                                <label\n                                    htmlFor=\"durationInput\">Duration in\n                                    seconds<br/>(currently {this.props.duration / 1000} s)</label>\n                            </div>\n                            <div className=\"col-8\">\n                                <input type=\"text\" className=\"form-control w-100\"\n                                       name=\"durationInput\" value={this.state.durationInput}\n                                       placeholder=\"duration\"\n                                       onChange={this.handleChange}/>\n                            </div>\n                            <div className=\"col-2\">\n                                <input type=\"button\" className=\"form-control btn btn-success\"\n                                       value=\"Set!\" onClick={this.setDuration}/>\n                            </div>\n                        </div>\n                        <div className=\"row\">\n                            <div className=\"col-2\">\n                                <label\n                                    htmlFor=\"maxVolInput\">Max volume for rating, in range\n                                    [0;1]<br/>(currently: {this.props.maxVol})</label>\n                            </div>\n                            <div className=\"col-8\">\n                                <input type=\"text\" className=\"form-control w-100\"\n                                       name=\"maxVolInput\" value={this.state.maxVolInput}\n                                       onChange={this.handleChange}/>\n                            </div>\n                            <div className=\"col-2\">\n                                <input type=\"button\" className=\"form-control btn btn-success\"\n                                       value=\"Set!\" onClick={this.setMaxvol}/>\n                            </div>\n                        </div>\n                    </form>\n                </div>\n\n                {/*<div id=\"calibration\" className=\"my-4\">*/}\n                {/*    <h3>Calibration</h3>*/}\n                {/*    <form*/}\n                {/*        className=\"row form-group\"*/}\n                {/*        onSubmit={e => {*/}\n                {/*            e.preventDefault()*/}\n                {/*        }}*/}\n                {/*    >*/}\n                {/*        <div className=\"col-10\">*/}\n                {/*            <input type=\"text\" className=\"form-control w-100\"*/}\n                {/*                   name=\"addCalibrationCompetitorInput\"*/}\n                {/*                   value={this.state.addCalibrationCompetitorInput}*/}\n                {/*                   placeholder=\"Competitor name\"*/}\n                {/*                   onChange={this.handleChange}/>*/}\n                {/*        </div>*/}\n                {/*        <div className=\"col-2\">*/}\n                {/*            <input type=\"submit\" className=\"form-control btn btn-success\"*/}\n                {/*                   value=\"Add!\"/>*/}\n                {/*        </div>*/}\n                {/*    </form>*/}\n                {/*    <div>*/}\n                {/*        <CalibrationTable competition={this.state.competition}/>*/}\n                {/*    </div>*/}\n                {/*</div>*/}\n\n                <div>\n                    {/*<CompetitionJsonExportBtn competition={this.state.competition}/>*/}\n                    {/*<CompetitionJsonImportBtn competition={this.state.competition}/>*/}\n                </div>\n\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    showBlank: state.control.showBlank,\n    duration: state.administration.duration,\n    maxVol: state.administration.maxVol\n});\n\nexport default connect(mapStateToProps)(Admin)\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport RecordingDot from \"./RecordingDot\";\nimport {Wobble} from \"react-motions\";\nimport {connect} from \"react-redux\";\nimport {getVisibleLeader} from \"../utils/competitionUtils\";\n\nfunction CompetitorCard(props) {\n    const competitor = props.competitors[props.competitorKey];\n\n    let competitorNameClass = \"text-primary\";\n    let cardBgClass = \"bg-info\";\n    let ratingClass = \"text-secondary\";\n    if (getVisibleLeader() === props.competitorKey) {\n        cardBgClass = \"bg-success\";\n        competitorNameClass = \"text-secondary\";\n        ratingClass = \"text-secondary\";\n    }\n    let bounce = false;\n    if (competitor.stoppedRecording > (Math.floor(Date.now()) - 1 * 1000)) {\n        bounce = true;\n    }\n    let card =\n        <div className={\"card text-white text-center \" + cardBgClass}>\n            <div className=\"card-body\">\n                <div>\n                    <RecordingDot isActive={props.competitorKey === props.activeCompetitor}/>\n                </div>\n                <h2 className={\"card-title \" + competitorNameClass}>{competitor.name}</h2>\n                <div className=\"card-text\">\n                    <p>\n                        <span className=\"timeLeftText\">Verbleibende Zeit:</span>\n                        <br/>\n                        {parseFloat(((competitor.timeLeft !== null) ? competitor.timeLeft : props.duration) / 1000).toFixed(1)} Sekunden\n                    </p>\n                    <p className={\"btn btn-primary ratingText \" + ratingClass}>\n                        Wertung:&nbsp;\n                        <span className=\"text-white\">\n                            {\n                                props.ratings && props.ratings.hasOwnProperty(props.competitorKey)\n                                    ? parseFloat(props.ratings[props.competitorKey] * 10).toFixed(2)\n                                    : \"–\"\n                            }\n                        </span>\n                    </p>\n                </div>\n            </div>\n        </div>;\n    if (competitor.isVisible) {\n        if (bounce) {\n            return (\n                <div className=\"col-3\" key={props.competitorKey}>\n                    <Wobble>\n                        {card}\n                    </Wobble>\n                </div>\n            )\n        } else {\n            return (\n                <div className=\"col-3\" key={props.competitorKey}>\n                    {card}\n                </div>\n            )\n        }\n    } else {\n        return <React.Fragment/>\n    }\n}\n\nconst mapStateToProps = state => ({\n    competitors: state.voting.competitors.byId,\n    ratings: state.voting.ratings,\n    activeCompetitor: state.voting.activeCompetitor,\n    duration: state.administration.duration\n});\n\nexport default connect(mapStateToProps)(CompetitorCard)\n","import React from 'react';\nimport {connect} from \"react-redux\";\nimport CompetitorCard from \"./CompetitorCard\";\n\n\nfunction CompetitionCards(props) {\n    return (\n        <div id=\"competitionCardContainer\" className=\"container-fluid px-5\">\n            <div className=\"row justify-content-center\">\n                {props.competitorKeys.map(\n                    competitorKey => <CompetitorCard key={competitorKey} competitorKey={competitorKey}/>\n                )}\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    competitorKeys: state.voting.competitors.allIds,\n});\n\nexport default connect(mapStateToProps)(CompetitionCards)\n\n\n","import React, {Component} from \"react\";\nimport {SvgLoader, SvgProxy} from 'react-svgmt';\nimport castle from '../assets/castle-gradient.svg';\nimport useWindowSize from 'react-use/lib/useWindowSize'\nimport Confetti from 'react-confetti'\nimport {getRatingFromVolume} from \"../utils/competitionUtils\";\nimport {connect} from \"react-redux\";\nimport VolumemeterUtils from \"../utils/volumemeterUtils\";\nimport {initiateVolumemeter} from \"../actions\";\n\n\ntype State = {\n    interval: number,\n    rating: number,\n};\n\nclass CastlemeterComponent extends Component<{}, State> {\n\n    constructor(props: P, context: any) {\n        super(props, context);\n        this.state = {\n            interval: null,\n            rating: 0,\n        };\n    }\n\n    componentDidMount(): void {\n        this.checkRating();\n    }\n\n    componentDidUpdate(prevProps: Readonly<P>, prevState: Readonly<S>, snapshot: SS): void {\n        this.checkRating();\n    }\n\n    checkRating = () => {\n        const isActive = this.props.isActive;\n        if (!isActive) {\n            if (this.state.interval === null) {\n                this.props.dispatch(initiateVolumemeter());\n                if (this.props.isInitialized) {\n                    const interval = setInterval(\n                        () => {\n                            const volume = VolumemeterUtils.getVolume();\n                            if (volume !== null) {\n                                this.setState({\n                                    rating: getRatingFromVolume(volume) * 0.1,\n                                });\n                            }\n                        },\n                        100 // ms, normally 10\n                    );\n                    this.setState({\n                        interval,\n                    });\n                }\n            }\n        } else {\n            if (this.state.interval) {\n                clearInterval(this.state.interval);\n                this.setState({\n                    interval: null,\n                })\n            }\n            if (this.props.rating !== this.state.rating) {\n                this.setState({\n                    interval: null,\n                    rating: this.props.rating\n                });\n            }\n        }\n    };\n\n    render() {\n        const isActive = this.props.isActive;\n\n        const shift = this.state.rating > 0 ? (-this.state.rating) * 786 : 0;\n\n        return (\n            <div className=\"d-flex flex-column-reverse p-4\">\n                {/*https://www.npmjs.com/package/react-confetti*/}\n                <Confetti\n                    // run={isActive}\n                    numberOfPieces={isActive ? undefined : 5}\n                    width={this.props.width}\n                    height={this.props.height}\n                    gravity={isActive ? this.state.rating : 0.01}\n                    wind={isActive ? this.state.rating * 0.1 : 0}\n                    recycle={true}\n                    canvasRef={undefined}\n                />\n                <SvgLoader path={castle} height={400} width={2000}>\n                    {/*<SvgProxy selector=\"#rotmeter\"*/}\n                    {/*          transform={\"rotate(\" + rotation + \" 565.9 124)\"}/>*/}\n                    <SvgProxy\n                        selector=\"#clip-rect\"\n                        transform={\"translate(0 \" + shift + \")\"}\n                    />\n                </SvgLoader>\n            </div>\n        );\n    }\n}\n\nfunction Castlemeter(props) {\n    const {width, height} = useWindowSize();\n    return <CastlemeterComponent width={width} height={height} {...props} />;\n}\n\nconst mapStateToProps = state => ({\n    isInitialized: state.voting.isInitialized\n});\n\nexport default connect(mapStateToProps)(Castlemeter);\n","import React from 'react';\nimport {connect} from \"react-redux\";\n\n\nfunction Footer(props) {\n    return(\n        <footer className=\"container-fluid py-1 px-5 text-right\">\n            Applaus-O-Meter | {props.title} | mail@yorickreum.de\n        </footer>\n    );\n}\n\nconst mapStateToProps = state => ({\n    title: state.administration.title\n});\n\nexport default connect(mapStateToProps)(Footer)\n","import React from \"react\";\nimport CompetitionCards from \"../components/CompetitionCards\";\nimport '../styles/frontend.css';\nimport {connect} from \"react-redux\";\nimport Castlemeter from \"../meters/Castlemeter\";\nimport Footer from \"../components/Footer\";\nimport {Helmet} from \"react-helmet\";\n\nfunction View(props) {\n    let rating = 0;\n    let isActive = false;\n    const activeCompetitor = props.activeCompetitor;\n    if (activeCompetitor) {\n        isActive = true;\n        rating = props.ratings[activeCompetitor];\n    } else {\n\n    }\n    return (\n        <React.Fragment>\n            <Helmet>\n                <title>View | Applaus-O-Meter</title>\n            </Helmet>\n            {!props.showBlank &&\n            <React.Fragment>\n                <div id=\"frontend\" className=\"container-fluid py-2 rounded-0\">\n                    <div id=\"graphic\" className=\"d-flex justify-content-center\">\n                        <Castlemeter isActive={isActive} rating={rating}/>\n                    </div>\n                    <div id=\"information\">\n                        <CompetitionCards/>\n                    </div>\n                </div>\n                <Footer/>\n            </React.Fragment>}\n        </React.Fragment>\n    );\n}\n\nconst mapStateToProps = state => ({\n    showBlank: state.control.showBlank,\n    activeCompetitor: state.voting.activeCompetitor,\n    ratings: state.voting.ratings,\n});\n\nexport default connect(mapStateToProps)(View)\n","import React from \"react\";\nimport {connect} from \"react-redux\";\n\n// import logo from './fishtival_logo_yellow_white.svg';\n\nfunction Heading(props) {\n    return(\n        <div className=\"container-fluid pt-2\">\n            <h2 className=\"text-center text-warning\">Applaus-O-Meter</h2>\n            <h1 id=\"mainHeading\" className=\"text-center text-white py-1\">{props.title}</h1>\n            {/*<h1 className=\"text-center text-white bg-primary rounded p-1\">*/}\n                {/*<img src={logo} height=\"75\"/>*/}\n            {/*</h1>*/}\n        </div>\n    )\n}\n\nconst mapStateToProps = state => ({\n    title: state.administration.title\n});\n\nexport default connect(mapStateToProps)(Heading)\n","import React, {Component} from 'react';\nimport ReactDOM from 'react-dom';\nimport {PersistGate} from 'redux-persist/integration/react'\nimport {HashRouter, Link, Route, Switch} from 'react-router-dom';\nimport Admin from './screens/Admin';\nimport registerServiceWorker from './registerServiceWorker';\nimport './styles/index.css'\nimport View from \"./screens/View\";\nimport Heading from \"./components/Heading\";\nimport {Provider} from \"react-redux\";\nimport {persistor, store} from \"./store\";\nimport {Helmet} from \"react-helmet\";\n\nclass Areas extends Component {\n\n    componentDidMount() {\n        document.title = \"Applaus-O-Meter\";\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                <div className=\"container\">\n                    <div className=\"row justify-content-center\">\n                        <div className=\"col-4\">\n                            <div className=\"card h-100 text-white text-center bg-warning\">\n                                <div className=\"card-body py-5\">\n                                    <h2 className=\"card-title text-primary pb-3\">Administration</h2>\n                                    <div className=\"card-text\">\n                                        <ul className=\"text-left\">\n                                            <li>Teilnehmner anlegen und verwalten</li>\n                                            <li>Abstimmungen starten</li>\n                                        </ul>\n                                        <Link to=\"/admin\" className=\"btn btn-primary\">Hier\n                                            entlang &#8680;</Link>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"col-4\">\n                            <div className=\"card h-100 text-white text-center bg-warning\">\n                                <div className=\"card-body py-5\">\n                                    <h2 className=\"card-title text-primary pb-3\">Abstimmung</h2>\n                                    <div className=\"card-text\">\n                                        <p>\n                                            Zum Beispiel in neuem Fenster öffnen und auf Beamer\n                                            zeigen.\n                                        </p>\n                                        <Link to=\"/view\" className=\"btn btn-primary\">Hier\n                                            entlang &#8680;</Link>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </React.Fragment>\n        )\n    }\n}\n\nReactDOM.render(\n    <Provider store={store}>\n        <PersistGate loading={null} persistor={persistor}>\n            <Helmet>\n                <meta charSet=\"utf-8\"/>\n                <title>Applaus-O-Meter</title>\n            </Helmet>\n            <Heading/>\n            <HashRouter>\n                <Switch>\n                    <Route exact path=\"/\" component={Areas}/>\n                    <Route path=\"/admin\" component={Admin}/>\n                    <Route path=\"/view\" component={View}/>\n                </Switch>\n            </HashRouter>\n        </PersistGate>\n    </Provider>,\n    document.getElementById('root')\n);\n\nregisterServiceWorker();\n"],"sourceRoot":""}